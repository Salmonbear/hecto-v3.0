{"version":3,"file":"component---src-pages-home-jsx-c7a588e6c9e48de670d3.js","mappings":"6SA+BA,I,ICJaA,EAA8B,IAAIC,MAElCC,EAA0B,IAAID,MAEnB,EACtBE,WAAWC,0BAEU,EACrBD,WAAWE,yBA6Rb,IAAMC,EAAqB,CACzBC,KAAM,CAAC,OAAQ,UACfC,OAAQ,CAAC,WAGX,SAASC,EAAkBC,GACzB,IAAMC,EAAO,SAAUC,GACrB,MAAsCC,EAAAA,SACpC,kBACEC,EAAAA,EAAAA,kBAAiBF,EAAO,CACtBG,KAAML,EACNM,iBAAgB,OAAKV,EAAmBI,IACxCO,qBAAsBf,EACtBgB,yBAA0BlB,MAG9B,CAACY,EAAOF,IAGV,OA3SJ,SAAmCE,GAAQ,IAAD,IAChCO,EAAiCP,EAAjCO,SAAUC,EAAuBR,EAAvBQ,UAAWC,EAAYT,EAAZS,QAEvBC,GADO,UAAAC,EAAAA,kBAAA,cAAAA,GACAV,EAAAA,SAAc,kBAAMW,OAAOC,OAAO,GAAIb,EAAMU,QAAO,CAACV,EAAMU,QAOvE,GANY,iBACPA,EACAH,GAGe,UAAAO,EAAAA,sBAAA,cAAAA,GACiBb,EAAAA,SAAe,KAKpD,OALA,WACuBc,EAAAA,EAAAA,sBAAqB,CAC1CC,QAAQC,EAAAA,EAAAA,SAIR,+BAAC,QAAD,CACEC,GAAI,MACJ,oBAAmB,OACnB,wBAAuBV,EAAUb,KACjC,qBAAmB,EACnB,wBAAuBc,EACvBU,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,EACAA,EAAAA,eACAA,EAAAA,GCzDU,uCD6DZ,+BAAC,QAAD,CACEJ,GAAI,MACJC,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCxEF,iDD2ElB,+BAAC,cAAD,CACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,ECxEW,4CD2EbC,UAAWC,EAAAA,KACXC,SAAU,WAEV,sCACEL,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WC9DS,8CDkEX,+BAAC,WAAD,MACE,uCACEF,UAAW,6CACXM,MAAO,CAAEC,MAAO,YAEf,UAEH,+BAAC,WAAD,KAAiB,KACjB,uCACEP,UAAW,6CACXM,MAAO,CAAEC,MAAO,YAEf,SAOX,+BAAC,QAAD,CACET,GAAI,MACJC,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GClHJ,iDDoHlB,+BAAC,QAAD,CACEJ,GAAIJ,EAAAA,YACJK,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,ECnHW,4CDsHbC,UAAWC,EAAAA,KACXC,SAAU,UAON,MAEJ,sCACEL,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WClHS,6CDsHV,YAQC,OAGN,+BAAC,QAAD,CACEJ,GAAIJ,EAAAA,YACJK,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAgBA,EAAAA,ECvJ5B,yCDwJVC,UAAWC,EAAAA,KACXC,SAAU,UAON,MAEJ,+BAAC,cAAD,CACEL,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,EACAA,EAAAA,WCvKQ,2CD0KVC,UAAWC,EAAAA,KACXI,KAAI,aACJH,SAAU,UAET,QAQC,OAGN,+BAAC,QAAD,CACEP,GAAIJ,EAAAA,YACJK,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,ECzLW,4CD4LbC,UAAWC,EAAAA,KACXC,SAAU,UAON,MAEJ,sCACEL,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCxLS,6CD4LV,UAQC,OAGN,+BAAC,QAAD,CACEJ,GAAIJ,EAAAA,YACJK,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,EChOW,4CDmObC,UAAWC,EAAAA,KACXC,SAAU,UAON,MAEJ,sCACEL,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WC/NU,8CDmOX,WAQC,OAGN,+BAAC,QAAD,CACEJ,GAAIJ,EAAAA,YACJK,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,ECvQW,4CD0QbC,UAAWC,EAAAA,KACXC,SAAU,UAON,MAEJ,sCACEL,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCjQS,6CDqQV,WAQC,OAGN,+BAACO,EAAA,EAAD,CACE,oBAAmB,SACnB,wBAAuBrB,EAAUZ,OACjCwB,WAAWC,EAAAA,EAAAA,YAAW,iBC5Sd,uCD6SRS,MAAO,YAEP,sCACEV,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCtRS,6CD0RV,eA4BJS,CAA0B,CAC/BxB,SAbF,EAAQA,SAcNG,KAdF,EAAkBA,KAehBF,UAfF,EAAwBA,UAgBtBC,QAASX,KAQb,OAJEC,EAAKiC,YADU,SAAblC,EACiB,gBAEnB,iBAAoCA,EAE/BC,EAGF,IAAMkC,EAAgBrB,OAAOC,OAElChB,EAAkB,QAClB,CAEED,OAAQC,EAAkB,UAE1BqC,qBAAsB9C,EACtB+C,iBAAkB7C,IErWtB,SAAS8C,EAAQpC,EAAOqC,GAetB,OAAO,gBAACJ,EAAD,eAAetC,KAAM,CAAE0C,IAAAA,IAAWrC,IAG3C,IAEA,EAFeC,EAAAA,WAAiBmC,G,oGCanBE,EAA4B,IAAIjD,MAEhCkD,EAAwB,IAAIlD,MA+oCzC,IAAMK,EAAqB,CACzBC,KAAM,CACJ,OACA,SACA,WACA,aACA,YACA,OACA,aACA,YACA,OACA,YACA,aACA,aACA,aACA,aACA,aACA,QACA,YACA,gBAGF6C,OAAQ,CAAC,UACTC,SAAU,CACR,WACA,aACA,YACA,OACA,aACA,YACA,QAGFC,WAAY,CAAC,aAAc,YAAa,QACxCC,UAAW,CAAC,YAAa,QACzBC,KAAM,CAAC,QACPC,WAAY,CAAC,aAAc,YAAa,QACxCC,UAAW,CAAC,YAAa,QACzBC,KAAM,CAAC,QACPC,UAAW,CAAC,aACZC,WAAY,CAAC,cACbC,WAAY,CAAC,cACbC,WAAY,CAAC,cACbC,WAAY,CAAC,cACbC,WAAY,CAAC,cACbC,MAAO,CAAC,QAAS,aACjBC,UAAW,CAAC,aACZC,aAAc,CAAC,iBAGjB,SAAS3D,EAAkBC,GACzB,IAAMC,EAAO,SAAUC,GACrB,OAAsCE,EAAAA,EAAAA,kBAAiBF,EAAO,CAC5DG,KAAML,EACNM,iBAAgB,OAAKV,EAAmBI,IACxCO,qBAAsBkC,EACtBjC,yBAA0BgC,IAG5B,OAxsCJ,SAAiCtC,GACgBA,EAAvCO,SAAuCP,EAA7BU,KAAlB,IAAwBF,EAAuBR,EAAvBQ,UAAWC,EAAYT,EAAZS,QAMnC,OALeT,EAAMU,MACEK,EAAAA,EAAAA,sBAAqB,CAC1CC,QAAQC,EAAAA,EAAAA,SAIR,+BAAC,WAAD,MACE,0GAMA,sCAAKG,UAAWE,EAAAA,KAEZ,+BAAC,QAAD,CACEJ,GAAI,MACJ,oBAAmB,OACnB,wBAAuBV,EAAUb,KACjC,qBAAmB,EACnB,wBAAuBc,EACvBU,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,EACAA,EAAAA,eACAA,EAAAA,GCwBI,qCDpBN,sCAAKF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCrBX,+CDsBd,sCAAKF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCnCZ,gDDoCb,+BAAC,EAAD,CACE,oBAAmB,SACnB,wBAAuBd,EAAUgC,OACjCpB,WAAWC,EAAAA,EAAAA,YAAW,iBCZpB,wCDeJ,sCAAKD,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC/Bf,+CDgCV,+BAAC,QAAD,CACEJ,GAAI,MACJC,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCtCd,+CDwCR,+BAAC,QAAD,CACEJ,GAAI,MACJC,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC1ChB,+CD4CN,+BAAC,QAAD,CACEJ,GAAI,MACJC,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GCrDE,+CDyDJ,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WClDL,0CDsDG,+BAAC,WAAD,MACE,+BAAC,WAAD,KAAiB,KACjB,uCACEF,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,6BAEH,+BAAC,WAAD,KAAiB,OACjB,uCACEP,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,oBAEH,+BAAC,WAAD,KAAiB,OACjB,uCACEP,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,iBAEH,+BAAC,WAAD,KAAiB,OAIrB,sCACEP,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WC7BH,4CDiCC,+BAAC,WAAD,MACE,+BAAC,WAAD,KAAiB,KACjB,uCACEF,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAGd,iFAGJ,+BAAC,WAAD,KAAiB,QAKvB,+BAAC,QAAD,CACET,GAAI,MACJC,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GC/HC,8CDmIH,+BAACO,EAAA,EAAD,CACET,WAAWC,EAAAA,EAAAA,YACT,iBC5KA,6CD+KFoC,SACE,+BAAC,IAAD,CACErC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GCpFP,0CDuFKoC,KAAM,UAIV,sCACEtC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCrFL,2CDyFI,aAIL,+BAACO,EAAA,EAAD,CACET,WAAWC,EAAAA,EAAAA,YACT,iBCrMA,6CDwMFoC,SACE,+BAAC,IAAD,CACErC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GC7GR,yCDgHMoC,KAAM,UAIV,sCACEtC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WC1GL,2CD8GI,oBAWf,0CACE,oBAAmB,WACnB,wBAAuBd,EAAUiC,SACjCrB,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCvMhB,yCDyMN,sCAAKF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC5NhB,8CD6NT,+BAAC,QAAD,CACEJ,GAAI,MACJC,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCxMb,gDD0MT,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WC5LD,yCDgMA,6BAGH,+BAAC,aAAD,CACEqC,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YC9KT,yCD+KFuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,QACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IACE,0FAIJ,+BAAC,aAAD,CACER,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YC1MR,0CD2MHuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,QACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IACE,sGAIJ,+BAAC,aAAD,CACER,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YChNT,yCDiNFuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,QACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IACE,oGAIJ,+BAAC,aAAD,CACER,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YChOT,yCDiOFuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,QACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IACE,sGAIJ,+BAAC,aAAD,CACER,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YCpPT,yCDqPFuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,QACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IACE,4FAKN,sCACE,oBAAmB,aACnB,wBAAuB3D,EAAUkC,WACjCtB,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC3SlB,2CD6SJ,sCACE,oBAAmB,YACnB,wBAAuBd,EAAUmC,UACjCvB,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC5PrB,0CD8PD,sCACE,oBAAmB,OACnB,wBAAuBd,EAAUoC,KACjCxB,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCxP5B,qCD0PM,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GCvUD,8CD4UC,+BAAC,QAAD,CACEJ,GAAI,MACJC,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GCtTJ,+CD0TE,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WCnTX,0CDuTS,+BAAC,WAAD,MACE,+BAAC,WAAD,KAAiB,KACjB,uCACEF,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,mBAEH,+BAAC,WAAD,KAAiB,OACjB,uCACEP,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,UAEH,+BAAC,WAAD,KAAiB,KACjB,uCACEP,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,aAEH,+BAAC,WAAD,KAAiB,OACjB,uCACEP,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,oBAEH,+BAAC,WAAD,KAAiB,KACjB,uCACEP,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,MAEH,+BAAC,WAAD,KAAiB,SAO3B,sCACEP,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GC5ZF,6CDgaA,+BAAC,aAAD,CACEqC,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YC5Vf,yCD6VIuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IAAK,CACHA,IAAKC,EAAAA,EACLC,UAAW,IACXC,WAAY,IACZC,iBAAaC,UAQzB,sCACE,oBAAmB,aACnB,wBAAuBhE,EAAUqC,WACjCzB,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCjalB,2CDmaJ,sCACE,oBAAmB,YACnB,wBAAuBd,EAAUsC,UACjC1B,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GClXrB,0CDoXD,sCACE,oBAAmB,OACnB,wBAAuBd,EAAUuC,KACjC3B,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC9W5B,qCDgXM,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GCrcD,8CDycD,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GC7aF,+CDibA,+BAAC,aAAD,CACEqC,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YC1ZhB,0CD2ZKuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IAAK,CACHA,IAAKM,EAAAA,EACLJ,UAAW,IACXC,WAAY,IACZC,iBAAaC,MAIjB,+BAAC,aAAD,CACEb,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YCpajB,yCDqaMuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IAAK,CACHA,IAAKO,EAAAA,EACLL,UAAW,IACXC,WAAY,IACZC,iBAAaC,MAIjB,+BAAC,aAAD,CACEb,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YClbjB,yCDmbMuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IAAK,CACHA,IAAKQ,EAAAA,EACLN,UAAW,IACXC,WAAY,IACZC,iBAAaC,QAMrB,sCACEpD,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GCjgBD,8CDsgBC,+BAAC,QAAD,CACEJ,GAAI,MACJC,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GClfL,8CDsfG,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WC/eX,0CDmfS,+BAAC,WAAD,MACE,+BAAC,WAAD,KAAiB,KACjB,uCACEF,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,yBAEH,+BAAC,WAAD,KAAiB,OACjB,uCACEP,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,gCAEH,+BAAC,WAAD,KAAiB,cAavC,0CAASP,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCljBhB,8CDmjBb,sCAAKF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC5jBd,8CD8jBT,+BAAC,QAAD,CACEJ,GAAI,MACJC,QAAQ,EACRC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC3iBb,gDD6iBT,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WCjiBH,wCDqiBC,+BAAC,WAAD,MACE,+BAAC,WAAD,KAAiB,KACjB,uCACEF,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,kBAEH,+BAAC,WAAD,KAAiB,KACjB,uCACEP,UACE,6CAEFM,MAAO,CAAEC,MAAO,YAEf,MAEH,+BAAC,WAAD,KAAiB,QAMzB,sCAAKP,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCzlBf,+CD0lBV,sCACE,oBAAmB,YACnB,wBAAuBd,EAAUwC,UACjC5B,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GChiBnB,0CDkiBH,+BAAC,aAAD,CACEqC,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YCrjBV,wCDsjBDuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,QACdC,QAAS,OACTC,IAAK,iDAGP,sCACE/C,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC5mBhB,+CD8mBN,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GCloBC,8CDsoBH,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WCnlBL,yCDulBI,sBAGH,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCrjBH,2CD0jBG,gHAOV,sCACE,oBAAmB,aACnB,wBAAuBd,EAAUyC,WACjC7B,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCplBlB,2CDslBJ,+BAAC,aAAD,CACEqC,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YClmBT,yCDmmBFuC,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,QACdC,QAAS,OACTC,IAAK,CACHA,IAAKS,EAAAA,EACLP,UAAW,IACXC,WAAY,IACZC,iBAAaC,MAIjB,sCACEpD,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GC3qBK,gDD+qBP,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GC1rBC,8CD8rBH,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WCppBJ,0CDwpBG,mBAGH,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCpnBH,2CDynBG,mHAOV,sCACE,oBAAmB,aACnB,wBAAuBd,EAAU0C,WACjC9B,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GChpBlB,2CDkpBJ,+BAAC,aAAD,CACEqC,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YCpqBT,yCDqqBFuC,cAAe,QACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,QACdC,QAAS,OACTC,IAAK,CACHA,IAAKU,EAAAA,EACLR,UAAW,IACXC,WAAY,IACZC,YAAa,QAIjB,sCACEnD,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GCzuBK,gDD6uBP,sCACEF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC9vBpB,6CDgwBF,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WCzsBN,wCD6sBK,iBAGH,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCrqBH,2CD0qBG,iHAQZ,sCACEF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC7wBX,gDD+wBX,sCACE,oBAAmB,aACnB,wBAAuBd,EAAU2C,WACjC/B,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC7sBlB,2CD+sBJ,+BAAC,aAAD,CACEqC,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YCjuBT,yCDkuBFuC,cAAe,QACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,QACdC,QAAS,OACTC,IAAK,CACHA,IAAKW,EAAAA,EACLT,UAAW,IACXC,WAAY,IACZC,YAAa,QAIjB,sCACEnD,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC7xBhB,+CD+xBN,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GC9yBC,8CDkzBH,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WC1wBL,yCD8wBI,oBAGH,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCjuBH,2CDsuBG,gHAOV,sCACE,oBAAmB,aACnB,wBAAuBd,EAAU4C,WACjChC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCtwBlB,2CDwwBJ,+BAAC,aAAD,CACEqC,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YC7xBT,yCD8xBFuC,cAAe,QACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,QACdC,QAAS,OACTC,IAAK,CACHA,IAAKY,EAAAA,EACLV,UAAW,IACXC,WAAY,IACZC,YAAa,QAIjB,sCACEnD,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC11BhB,+CD41BN,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GC72BC,8CDi3BH,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WCn0BL,yCDu0BI,oBAGH,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCzxBH,2CD8xBG,gHAOV,sCACE,oBAAmB,aACnB,wBAAuBd,EAAU6C,WACjCjC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC/zBlB,2CDi0BJ,+BAAC,aAAD,CACEqC,IAAK,GACLvC,WAAWC,EAAAA,EAAAA,YC11BR,0CD21BHuC,cAAe,QACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,QACdC,QAAS,OACTC,IAAK,CACHA,IAAKa,EAAAA,EACLX,UAAW,IACXC,WAAY,IACZC,YAAa,QAIjB,sCACEnD,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCl5BhB,+CDo5BN,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GCz6BC,8CD66BH,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WC/3BJ,0CDm4BG,qBAGH,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WC11BH,2CD+1BG,mHAWd,0CACEF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC97BV,+CDg8BZ,sCACE,oBAAmB,QACnB,wBAAuBd,EAAU8C,MACjClC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCx4BrB,sCD04BD,sCACE,oBAAmB,YACnB,wBAAuBd,EAAU+C,UACjCnC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCj8BnB,0CDm8BH,sCACEF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC59BlB,6CD89BJ,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WCj7BF,0CDq7BC,kDAGH,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCz4BF,0CD84BE,8DAKN,sCACEF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC9+BjB,8CDg/BL,+BAACO,EAAA,EAAD,CACET,WAAWC,EAAAA,EAAAA,YACT,iBC9/BC,4CDigCHM,MAAO,OACPsD,KAAM,MAEN,sCACE7D,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCl6BJ,0CDs6BG,uBASf,sCAAKF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCt+BX,+CDu+Bd,sCAAKF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC7/Bb,+CD8/BZ,sCAAKF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCphChB,8CDqhCT,qCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WCr+BC,0CDy+BH,+BAAC,WAAD,MACE,+BAAC,WAAD,KAAiB,KACjB,uCACEF,UAAW,6CACXM,MAAO,CAAEC,MAAO,YAEf,kCAEH,+BAAC,WAAD,KAAiB,OAIrB,sCACEP,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WC/7BG,4CDm8BL,+BAAC,WAAD,MACE,+BAAC,WAAD,KAAiB,KACjB,uCACEF,UAAW,6CACXM,MAAO,CAAEC,MAAO,YAEf,+CAEH,+BAAC,WAAD,KAAiB,OAIrB,+BAACE,EAAA,EAAD,CACET,WAAWC,EAAAA,EAAAA,YAAW,iBChkCf,4CDikCPM,MAAO,OACP8B,SACE,+BAAC,IAAD,CACErC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCr+BvB,wCDs+BCoC,KAAM,QAGV5B,MAAO,UACPoD,aAAa,IAEb,sCACE9D,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCr+BC,2CDy+BF,2BAOX,sCAAKF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCvjCV,gDDwjCf,sCACE,oBAAmB,eACnB,wBAAuBd,EAAUgD,aACjCpC,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GC7jCZ,6CD+jCV,sCAAKF,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCljCf,+CDmjCV,+BAAC,cAAD,CACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,ECrhCG,0CDwhCLC,UAAWC,EAAAA,KACXC,SAAU,aAId,sCAAKL,WAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GCjkCf,+CDkkCV,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WC5gCG,2CDghCJ,kCAGH,+BAAC,cAAD,CACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,EC1iCC,wCD6iCHC,UAAWC,EAAAA,KACXC,SAAU,WAEV,sCACEL,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCjhCD,yCDqhCA,YAGH,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WChiCC,2CDoiCF,yBAGH,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WCtjCE,4CD0jCH,eAGH,sCACEF,WAAWC,EAAAA,EAAAA,YACTC,EAAAA,GACAA,EAAAA,WC/jCC,2CDmkCF,eAwEZ6D,CAAwB,CAC7B5E,SARF,EAAQA,SASNG,KATF,EAAkBA,KAUhBF,UAVF,EAAwBA,UAWtBC,QAASX,KAQb,OAJEC,EAAKiC,YADU,SAAblC,EACiB,cAEnB,eAAkCA,EAE7BC,EAGF,IAAMqF,EAAcxE,OAAOC,OAEhChB,EAAkB,QAClB,CAEE2C,OAAQ3C,EAAkB,UAC1B4C,SAAU5C,EAAkB,YAC5B6C,WAAY7C,EAAkB,cAC9B8C,UAAW9C,EAAkB,aAC7B+C,KAAM/C,EAAkB,QACxBgD,WAAYhD,EAAkB,cAC9BiD,UAAWjD,EAAkB,aAC7BkD,KAAMlD,EAAkB,QACxBmD,UAAWnD,EAAkB,aAC7BoD,WAAYpD,EAAkB,cAC9BqD,WAAYrD,EAAkB,cAC9BsD,WAAYtD,EAAkB,cAC9BuD,WAAYvD,EAAkB,cAC9BwD,WAAYxD,EAAkB,cAC9ByD,MAAOzD,EAAkB,SACzB0D,UAAW1D,EAAkB,aAC7B2D,aAAc3D,EAAkB,gBAEhCqC,qBAAsBI,EACtBH,iBAAkBI,IE9vCtB,MApBA,WAiBE,OAAO,gBAAC6C,EAAD","sources":["webpack://gatsby-starter-default/./src/components/plasmic/hecto/icons/PlasmicIcon__Icon3.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicHeader.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicHeader.module.css","webpack://gatsby-starter-default/./src/components/Header.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicHome.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicHome.module.css","webpack://gatsby-starter-default/./src/pages/home.jsx"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon3Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon3Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd\n// Component: qDyfn4Gje2P\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Button from \"../../Button\" // plasmic-import: 16yj8MRmRBT/component\nimport { useScreenVariants as useScreenVariantskILw5UiAaS1UF } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: kILw5uiAaS1uF/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_hecto.module.css\" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss\nimport * as sty from \"./PlasmicHeader.module.css\" // plasmic-import: qDyfn4Gje2P/css\nimport Icon3Icon from \"./icons/PlasmicIcon__Icon3\" // plasmic-import: TgLbINC6PndC/icon\n\nexport const PlasmicHeader__VariantProps = new Array()\n\nexport const PlasmicHeader__ArgProps = new Array()\n\nconst __wrapUserFunction =\n  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn())\n\nconst __wrapUserPromise =\n  globalThis.__PlasmicWrapUserPromise ??\n  (async (loc, promise) => {\n    await promise\n  })\n\nfunction PlasmicHeader__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = {\n    ...args,\n    ...variants,\n  }\n\n  const currentUser = p.useCurrentUser?.() || {}\n  const [$queries, setDollarQueries] = React.useState({})\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantskILw5UiAaS1UF(),\n  })\n\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox__wf3Mb)}\n      >\n        {true ? (\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link__vEmU5\n            )}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__lB31T\n              )}\n            >\n              <React.Fragment>\n                <span\n                  className={\"plasmic_default__all plasmic_default__span\"}\n                  style={{ color: \"#0506CF\" }}\n                >\n                  {\"hecto\"}\n                </span>\n                <React.Fragment>{\"\"}</React.Fragment>\n                <span\n                  className={\"plasmic_default__all plasmic_default__span\"}\n                  style={{ color: \"#FF4A03\" }}\n                >\n                  {\".\"}\n                </span>\n              </React.Fragment>\n            </div>\n          </p.PlasmicLink>\n        ) : null}\n\n        <p.Stack\n          as={\"div\"}\n          hasGap={true}\n          className={classNames(projectcss.all, sty.freeBox__bvRp4)}\n        >\n          <p.Stack\n            as={p.PlasmicLink}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link__sajil\n            )}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            {false ? (\n              <Icon3Icon\n                className={classNames(projectcss.all, sty.svg__iimsp)}\n                role={\"img\"}\n              />\n            ) : null}\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__aEbJd\n              )}\n            >\n              {\"Creators\"}\n            </div>\n\n            {false ? (\n              <Icon3Icon\n                className={classNames(projectcss.all, sty.svg__tSmiY)}\n                role={\"img\"}\n              />\n            ) : null}\n          </p.Stack>\n\n          <p.Stack\n            as={p.PlasmicLink}\n            hasGap={true}\n            className={classNames(projectcss.all, projectcss.a, sty.link__mK)}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            {false ? (\n              <Icon3Icon\n                className={classNames(projectcss.all, sty.svg__wCnBt)}\n                role={\"img\"}\n              />\n            ) : null}\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__fgYc\n              )}\n              component={Link}\n              href={`/resources`}\n              platform={\"gatsby\"}\n            >\n              {\"Blog\"}\n            </p.PlasmicLink>\n\n            {false ? (\n              <Icon3Icon\n                className={classNames(projectcss.all, sty.svg__kJlJl)}\n                role={\"img\"}\n              />\n            ) : null}\n          </p.Stack>\n\n          <p.Stack\n            as={p.PlasmicLink}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link__xcKcr\n            )}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            {false ? (\n              <Icon3Icon\n                className={classNames(projectcss.all, sty.svg__oEzaU)}\n                role={\"img\"}\n              />\n            ) : null}\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__blA6E\n              )}\n            >\n              {\"Search\"}\n            </div>\n\n            {false ? (\n              <Icon3Icon\n                className={classNames(projectcss.all, sty.svg__s1EF2)}\n                role={\"img\"}\n              />\n            ) : null}\n          </p.Stack>\n\n          <p.Stack\n            as={p.PlasmicLink}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link__rcbpK\n            )}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            {false ? (\n              <Icon3Icon\n                className={classNames(projectcss.all, sty.svg___16Gv)}\n                role={\"img\"}\n              />\n            ) : null}\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text___8MHBw\n              )}\n            >\n              {\"Pricing\"}\n            </div>\n\n            {false ? (\n              <Icon3Icon\n                className={classNames(projectcss.all, sty.svg__lByMm)}\n                role={\"img\"}\n              />\n            ) : null}\n          </p.Stack>\n\n          <p.Stack\n            as={p.PlasmicLink}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link__dRdxs\n            )}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            {false ? (\n              <Icon3Icon\n                className={classNames(projectcss.all, sty.svg___4LBho)}\n                role={\"img\"}\n              />\n            ) : null}\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__bSkFe\n              )}\n            >\n              {\"Sign In\"}\n            </div>\n\n            {false ? (\n              <Icon3Icon\n                className={classNames(projectcss.all, sty.svg__mImJt)}\n                role={\"img\"}\n              />\n            ) : null}\n          </p.Stack>\n\n          <Button\n            data-plasmic-name={\"button\"}\n            data-plasmic-override={overrides.button}\n            className={classNames(\"__wab_instance\", sty.button)}\n            shape={\"rounded\"}\n          >\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__sVj6J\n              )}\n            >\n              {\"Sign Up\"}\n            </div>\n          </Button>\n        </p.Stack>\n      </p.Stack>\n    </p.Stack>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"button\"],\n  button: [\"button\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHeader__ArgProps,\n          internalVariantPropNames: PlasmicHeader__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicHeader__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHeader\"\n  } else {\n    func.displayName = `PlasmicHeader.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHeader = Object.assign(\n  // Top-level PlasmicHeader renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    button: makeNodeComponent(\"button\"),\n    // Metadata about props expected for PlasmicHeader\n    internalVariantProps: PlasmicHeader__VariantProps,\n    internalArgProps: PlasmicHeader__ArgProps,\n  }\n)\n\nexport default PlasmicHeader\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button = \"PlasmicHeader-module--button--w2gLe\";\nexport var freeBox__bvRp4 = \"PlasmicHeader-module--freeBox__bvRp4--fpNOY\";\nexport var freeBox__wf3Mb = \"PlasmicHeader-module--freeBox__wf3Mb--j+Vvs\";\nexport var link__dRdxs = \"PlasmicHeader-module--link__dRdxs--YPnhg\";\nexport var link__fgYc = \"PlasmicHeader-module--link__fgYc--89LzI\";\nexport var link__mK = \"PlasmicHeader-module--link__mK--KfxOg\";\nexport var link__rcbpK = \"PlasmicHeader-module--link__rcbpK--V00An\";\nexport var link__sajil = \"PlasmicHeader-module--link__sajil--VeIoS\";\nexport var link__vEmU5 = \"PlasmicHeader-module--link__vEmU5--SjLhu\";\nexport var link__xcKcr = \"PlasmicHeader-module--link__xcKcr--lOuIx\";\nexport var root = \"PlasmicHeader-module--root--xEu97\";\nexport var svg___16Gv = \"PlasmicHeader-module--svg___16Gv--N6PCm\";\nexport var svg___4LBho = \"PlasmicHeader-module--svg___4LBho--JwCKj\";\nexport var svg__bxInu = \"PlasmicHeader-module--svg__bxInu--PIiNy\";\nexport var svg__iimsp = \"PlasmicHeader-module--svg__iimsp--e1bfy\";\nexport var svg__kJlJl = \"PlasmicHeader-module--svg__kJlJl--LDBqC\";\nexport var svg__lByMm = \"PlasmicHeader-module--svg__lByMm--0RmKB\";\nexport var svg__mImJt = \"PlasmicHeader-module--svg__mImJt--rp0AI\";\nexport var svg__oEzaU = \"PlasmicHeader-module--svg__oEzaU--P4EKX\";\nexport var svg__p4EHd = \"PlasmicHeader-module--svg__p4EHd--IYStx\";\nexport var svg__s1EF2 = \"PlasmicHeader-module--svg__s1EF2--BUyRz\";\nexport var svg__tSmiY = \"PlasmicHeader-module--svg__tSmiY--BdtFu\";\nexport var svg__wCnBt = \"PlasmicHeader-module--svg__wCnBt--46tUR\";\nexport var text___8MHBw = \"PlasmicHeader-module--text___8MHBw--+hStt\";\nexport var text__aEbJd = \"PlasmicHeader-module--text__aEbJd--QvP+J\";\nexport var text__bSkFe = \"PlasmicHeader-module--text__bSkFe--BifbX\";\nexport var text__blA6E = \"PlasmicHeader-module--text__blA6E--sVCax\";\nexport var text__lB31T = \"PlasmicHeader-module--text__lB31T--jfOEH\";\nexport var text__sVj6J = \"PlasmicHeader-module--text__sVj6J--XxJn9\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHeader } from \"./plasmic/hecto/PlasmicHeader\"\n\nfunction Header_(props, ref) {\n  // Use PlasmicHeader to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHeader are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HeaderProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHeader root={{ ref }} {...props} />\n}\n\nconst Header = React.forwardRef(Header_)\n\nexport default Header\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd\n// Component: skdcktnuML\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: qDyfn4Gje2P/component\nimport Button from \"../../Button\" // plasmic-import: 16yj8MRmRBT/component\nimport { useScreenVariants as useScreenVariantskILw5UiAaS1UF } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: kILw5uiAaS1uF/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_hecto.module.css\" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss\nimport * as sty from \"./PlasmicHome.module.css\" // plasmic-import: skdcktnuML/css\nimport ArrowRightsvgIcon from \"./icons/PlasmicIcon__ArrowRightsvg\" // plasmic-import: g1j_XxrLjbNK/icon\nimport image14YhFYwAwD from \"./images/image14.png\" // plasmic-import: YhFYw-awD/picture\nimport airTravelerClubIconpngOXhQeqkJr from \"./images/airTravelerClubIconpng.png\" // plasmic-import: oXHQeqkJR/picture\nimport voltFmpng65KNczT0E from \"./images/voltFmpng.png\" // plasmic-import: 65kNczT0e/picture\nimport growthmentor2PngDbFq2ZnDc from \"./images/growthmentor2Png.png\" // plasmic-import: DBFq2ZNDc/picture\nimport image13Oy5YWPkj7 from \"./images/image13.png\" // plasmic-import: Oy5yWPkj7/picture\nimport logoUsdsvgOdeblsO1Yj from \"./images/logoUsdsvg.svg\" // plasmic-import: odeblsO1Yj/picture\nimport clipboardOutlinesvg5UIvmRlOr from \"./images/clipboardOutlinesvg.svg\" // plasmic-import: 5UIvmRLOr/picture\nimport searchsvgIWxwm9VuZ from \"./images/searchsvg.svg\" // plasmic-import: IWxwm9VuZ/picture\nimport peopleOutlinesvgHyxjcYqpG7 from \"./images/peopleOutlinesvg.svg\" // plasmic-import: hyxjcYqpG7/picture\n\nexport const PlasmicHome__VariantProps = new Array()\n\nexport const PlasmicHome__ArgProps = new Array()\n\nfunction PlasmicHome__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantskILw5UiAaS1UF(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        {true ? (\n          <p.Stack\n            as={\"div\"}\n            data-plasmic-name={\"root\"}\n            data-plasmic-override={overrides.root}\n            data-plasmic-root={true}\n            data-plasmic-for-node={forNode}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.root_reset,\n              projectcss.plasmic_default_styles,\n              projectcss.plasmic_mixins,\n              projectcss.plasmic_tokens,\n              sty.root\n            )}\n          >\n            <div className={classNames(projectcss.all, sty.freeBox__uVixW)}>\n              <div className={classNames(projectcss.all, sty.freeBox___6G6Bl)}>\n                <Header\n                  data-plasmic-name={\"header\"}\n                  data-plasmic-override={overrides.header}\n                  className={classNames(\"__wab_instance\", sty.header)}\n                />\n\n                <div className={classNames(projectcss.all, sty.freeBox__jBkIg)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__fclkg)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__i8Qbf)}\n                    >\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__c8Btc\n                        )}\n                      >\n                        <h1\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h1,\n                            projectcss.__wab_text,\n                            sty.h1__fiPqK\n                          )}\n                        >\n                          <React.Fragment>\n                            <React.Fragment>{\"\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0506CF\" }}\n                            >\n                              {\"Reach you target market,\"}\n                            </span>\n                            <React.Fragment>{\"\\n\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#FF4A03\" }}\n                            >\n                              {\"through trusted\"}\n                            </span>\n                            <React.Fragment>{\"\\n\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#FF4A03\" }}\n                            >\n                              {\"newsletters.\"}\n                            </span>\n                            <React.Fragment>{\"\"}</React.Fragment>\n                          </React.Fragment>\n                        </h1>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__sfwMq\n                          )}\n                        >\n                          <React.Fragment>\n                            <React.Fragment>{\"\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#AFAFB8\" }}\n                            >\n                              {\n                                \"Hecto is a platform to buy, sell and manage newsletter ads and sponsorships.\"\n                              }\n                            </span>\n                            <React.Fragment>{\"\"}</React.Fragment>\n                          </React.Fragment>\n                        </div>\n                      </p.Stack>\n\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__altd\n                        )}\n                      >\n                        <Button\n                          className={classNames(\n                            \"__wab_instance\",\n                            sty.button___7357C\n                          )}\n                          endIcon={\n                            <ArrowRightsvgIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg___1Q4Jn\n                              )}\n                              role={\"img\"}\n                            />\n                          }\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text__gw0T9\n                            )}\n                          >\n                            {\"Buy Ads\"}\n                          </div>\n                        </Button>\n\n                        <Button\n                          className={classNames(\n                            \"__wab_instance\",\n                            sty.button___9XUft\n                          )}\n                          endIcon={\n                            <ArrowRightsvgIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__kftcD\n                              )}\n                              role={\"img\"}\n                            />\n                          }\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text__mvf70\n                            )}\n                          >\n                            {\"Sell Ads\"}\n                          </div>\n                        </Button>\n                      </p.Stack>\n                    </p.Stack>\n                  </p.Stack>\n                </div>\n              </div>\n            </div>\n\n            {true ? (\n              <section\n                data-plasmic-name={\"features\"}\n                data-plasmic-override={overrides.features}\n                className={classNames(projectcss.all, sty.features)}\n              >\n                <div className={classNames(projectcss.all, sty.column__qyEYn)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox___8Pphq)}\n                  >\n                    <h2\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h2,\n                        projectcss.__wab_text,\n                        sty.h2__mbr1C\n                      )}\n                    >\n                      {\"Newsletters \\ntrusted by\"}\n                    </h2>\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__w0PtE)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"http://s3.amazonaws.com/appforest_uf/f1612212968629x588639892014067800/hootsuite.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img___3HW7O)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1599861530959x149048109187747800/Logo-with-clearspace.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__tsebv)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1612213380220x409371329433475100/email-octopus-logo.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__syyff)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1599862025614x593508823287736800/Monday.com-Logo.wine.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__dpwD6)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1647471882824x158210612790481900/user_logo.svg\"\n                      }\n                    />\n                  </p.Stack>\n\n                  <div\n                    data-plasmic-name={\"container4\"}\n                    data-plasmic-override={overrides.container4}\n                    className={classNames(projectcss.all, sty.container4)}\n                  >\n                    <div\n                      data-plasmic-name={\"outerRow2\"}\n                      data-plasmic-override={overrides.outerRow2}\n                      className={classNames(projectcss.all, sty.outerRow2)}\n                    >\n                      <div\n                        data-plasmic-name={\"row2\"}\n                        data-plasmic-override={overrides.row2}\n                        className={classNames(projectcss.all, sty.row2)}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__v2CxK\n                          )}\n                        >\n                          {true ? (\n                            <p.Stack\n                              as={\"div\"}\n                              hasGap={true}\n                              className={classNames(\n                                projectcss.all,\n                                sty.freeBox__eL2WR\n                              )}\n                            >\n                              <h1\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h1,\n                                  projectcss.__wab_text,\n                                  sty.h1__x2Sbm\n                                )}\n                              >\n                                <React.Fragment>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\"Generate leads\"}\n                                  </span>\n                                  <React.Fragment>{\"\\n\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\"from \"}\n                                  </span>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF4A03\" }}\n                                  >\n                                    {\"engaged \"}\n                                  </span>\n                                  <React.Fragment>{\"\\n\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF4A03\" }}\n                                  >\n                                    {\"email audiences\"}\n                                  </span>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\" \"}\n                                  </span>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                </React.Fragment>\n                              </h1>\n                            </p.Stack>\n                          ) : null}\n                        </div>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__h1Pj\n                          )}\n                        >\n                          <p.PlasmicImg\n                            alt={\"\"}\n                            className={classNames(sty.img__vUfqP)}\n                            displayHeight={\"auto\"}\n                            displayMaxHeight={\"none\"}\n                            displayMaxWidth={\"100%\"}\n                            displayMinHeight={\"0\"}\n                            displayMinWidth={\"0\"}\n                            displayWidth={\"auto\"}\n                            loading={\"lazy\"}\n                            src={{\n                              src: image14YhFYwAwD,\n                              fullWidth: 844,\n                              fullHeight: 521,\n                              aspectRatio: undefined,\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"container5\"}\n                    data-plasmic-override={overrides.container5}\n                    className={classNames(projectcss.all, sty.container5)}\n                  >\n                    <div\n                      data-plasmic-name={\"outerRow3\"}\n                      data-plasmic-override={overrides.outerRow3}\n                      className={classNames(projectcss.all, sty.outerRow3)}\n                    >\n                      <div\n                        data-plasmic-name={\"row4\"}\n                        data-plasmic-override={overrides.row4}\n                        className={classNames(projectcss.all, sty.row4)}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__laPwv\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__bzOa2\n                            )}\n                          >\n                            <p.PlasmicImg\n                              alt={\"\"}\n                              className={classNames(sty.img___1LxKm)}\n                              displayHeight={\"auto\"}\n                              displayMaxHeight={\"none\"}\n                              displayMaxWidth={\"100%\"}\n                              displayMinHeight={\"0\"}\n                              displayMinWidth={\"0\"}\n                              displayWidth={\"auto\"}\n                              loading={\"lazy\"}\n                              src={{\n                                src: airTravelerClubIconpngOXhQeqkJr,\n                                fullWidth: 201,\n                                fullHeight: 202,\n                                aspectRatio: undefined,\n                              }}\n                            />\n\n                            <p.PlasmicImg\n                              alt={\"\"}\n                              className={classNames(sty.img__mjg0Y)}\n                              displayHeight={\"auto\"}\n                              displayMaxHeight={\"none\"}\n                              displayMaxWidth={\"100%\"}\n                              displayMinHeight={\"0\"}\n                              displayMinWidth={\"0\"}\n                              displayWidth={\"auto\"}\n                              loading={\"lazy\"}\n                              src={{\n                                src: voltFmpng65KNczT0E,\n                                fullWidth: 199,\n                                fullHeight: 205,\n                                aspectRatio: undefined,\n                              }}\n                            />\n\n                            <p.PlasmicImg\n                              alt={\"\"}\n                              className={classNames(sty.img__ucynL)}\n                              displayHeight={\"auto\"}\n                              displayMaxHeight={\"none\"}\n                              displayMaxWidth={\"100%\"}\n                              displayMinHeight={\"0\"}\n                              displayMinWidth={\"0\"}\n                              displayWidth={\"auto\"}\n                              loading={\"lazy\"}\n                              src={{\n                                src: growthmentor2PngDbFq2ZnDc,\n                                fullWidth: 192,\n                                fullHeight: 195,\n                                aspectRatio: undefined,\n                              }}\n                            />\n                          </div>\n                        </div>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__vxj6M\n                          )}\n                        >\n                          {true ? (\n                            <p.Stack\n                              as={\"div\"}\n                              hasGap={true}\n                              className={classNames(\n                                projectcss.all,\n                                sty.freeBox__e5Xc\n                              )}\n                            >\n                              <h1\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h1,\n                                  projectcss.__wab_text,\n                                  sty.h1__gdjgC\n                                )}\n                              >\n                                <React.Fragment>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\"Build your campaign \"}\n                                  </span>\n                                  <React.Fragment>{\"\\n\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF4A03\" }}\n                                  >\n                                    {\"across multiple newsletters\"}\n                                  </span>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                </React.Fragment>\n                              </h1>\n                            </p.Stack>\n                          ) : null}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : null}\n\n            <section className={classNames(projectcss.all, sty.columns__aAdB)}>\n              <div className={classNames(projectcss.all, sty.column__qkGat)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox___1Knur)}\n                  >\n                    <h1\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h1,\n                        projectcss.__wab_text,\n                        sty.h1__cD1\n                      )}\n                    >\n                      <React.Fragment>\n                        <React.Fragment>{\"\"}</React.Fragment>\n                        <span\n                          className={\n                            \"plasmic_default__all plasmic_default__span\"\n                          }\n                          style={{ color: \"#0506CF\" }}\n                        >\n                          {\"Why use Hecto\"}\n                        </span>\n                        <React.Fragment>{\"\"}</React.Fragment>\n                        <span\n                          className={\n                            \"plasmic_default__all plasmic_default__span\"\n                          }\n                          style={{ color: \"#FF4A03\" }}\n                        >\n                          {\"?\"}\n                        </span>\n                        <React.Fragment>{\"\"}</React.Fragment>\n                      </React.Fragment>\n                    </h1>\n                  </p.Stack>\n                ) : null}\n\n                <div className={classNames(projectcss.all, sty.columns__buZRg)}>\n                  <div\n                    data-plasmic-name={\"reasonBox\"}\n                    data-plasmic-override={overrides.reasonBox}\n                    className={classNames(projectcss.all, sty.reasonBox)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__caV4)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={\"https://www.svgrepo.com/show/15349/chat.svg\"}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__j9ONv)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__d6Qjy\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__mvOuv\n                          )}\n                        >\n                          {\"Protected privacy\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__gdJ7J\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox2\"}\n                    data-plasmic-override={overrides.reasonBox2}\n                    className={classNames(projectcss.all, sty.reasonBox2)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__u55E7)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: image13Oy5YWPkj7,\n                        fullWidth: 452,\n                        fullHeight: 452,\n                        aspectRatio: undefined,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        sty.columns___9J1Pw\n                      )}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__p9Pfd\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4___2Rat1\n                          )}\n                        >\n                          {\"Upfront Prices\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__eW3Yu\n                          )}\n                        >\n                          {\n                            \"No need to request pricing information. See prices of ad packages [i]before [/i] you contact a newsletter. \"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox3\"}\n                    data-plasmic-override={overrides.reasonBox3}\n                    className={classNames(projectcss.all, sty.reasonBox3)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__klXBq)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: logoUsdsvgOdeblsO1Yj,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        sty.columns___38Dr1\n                      )}\n                    >\n                      <div\n                        className={classNames(projectcss.all, sty.column__bOOh)}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__v3Oq\n                          )}\n                        >\n                          {\"Pay Directly\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__npDuk\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div\n                  className={classNames(projectcss.all, sty.columns___1FB0A)}\n                >\n                  <div\n                    data-plasmic-name={\"reasonBox4\"}\n                    data-plasmic-override={overrides.reasonBox4}\n                    className={classNames(projectcss.all, sty.reasonBox4)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__mT2As)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: clipboardOutlinesvg5UIvmRlOr,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__wtUlN)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__tKgeq\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__fsNNw\n                          )}\n                        >\n                          {\"Fast Submission\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__poh5H\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox5\"}\n                    data-plasmic-override={overrides.reasonBox5}\n                    className={classNames(projectcss.all, sty.reasonBox5)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__iEiWy)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: searchsvgIWxwm9VuZ,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__oKt1Y)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__oh5P2\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__goy7Q\n                          )}\n                        >\n                          {\"Quality Control\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__tqkXc\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox6\"}\n                    data-plasmic-override={overrides.reasonBox6}\n                    className={classNames(projectcss.all, sty.reasonBox6)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img___9Tur1)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: peopleOutlinesvgHyxjcYqpG7,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__w0Unk)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__kicg9\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4___5QykZ\n                          )}\n                        >\n                          {\"Super Engagement\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__kDDcV\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            {true ? (\n              <section\n                className={classNames(projectcss.all, sty.columns__bPqyr)}\n              >\n                <div\n                  data-plasmic-name={\"outer\"}\n                  data-plasmic-override={overrides.outer}\n                  className={classNames(projectcss.all, sty.outer)}\n                >\n                  <div\n                    data-plasmic-name={\"container\"}\n                    data-plasmic-override={overrides.container}\n                    className={classNames(projectcss.all, sty.container)}\n                  >\n                    <div\n                      className={classNames(projectcss.all, sty.column__cNjJ)}\n                    >\n                      <h2\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.h2,\n                          projectcss.__wab_text,\n                          sty.h2___7O0Js\n                        )}\n                      >\n                        {\"To Make Requests For The\\nFurther Information\"}\n                      </h2>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__j7Ta\n                        )}\n                      >\n                        {\n                          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                        }\n                      </div>\n                    </div>\n\n                    <div\n                      className={classNames(projectcss.all, sty.column__sd22F)}\n                    >\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__fVmKq\n                        )}\n                        color={\"blue\"}\n                        link={\"#\"}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__hGnI\n                          )}\n                        >\n                          {\"Join With Now\"}\n                        </div>\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : null}\n\n            <div className={classNames(projectcss.all, sty.freeBox__lgMIl)}>\n              <div className={classNames(projectcss.all, sty.columns__oXTiv)}>\n                <div className={classNames(projectcss.all, sty.column__bVaiL)}>\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__nJruG\n                    )}\n                  >\n                    <React.Fragment>\n                      <React.Fragment>{\"\"}</React.Fragment>\n                      <span\n                        className={\"plasmic_default__all plasmic_default__span\"}\n                        style={{ color: \"#000000\" }}\n                      >\n                        {\"Ready to start your campaign?\"}\n                      </span>\n                      <React.Fragment>{\"\"}</React.Fragment>\n                    </React.Fragment>\n                  </h2>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__whM3Q\n                    )}\n                  >\n                    <React.Fragment>\n                      <React.Fragment>{\"\"}</React.Fragment>\n                      <span\n                        className={\"plasmic_default__all plasmic_default__span\"}\n                        style={{ color: \"#000000\" }}\n                      >\n                        {\"Find the perfect newsletter for your brand\"}\n                      </span>\n                      <React.Fragment>{\"\"}</React.Fragment>\n                    </React.Fragment>\n                  </div>\n\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button__eBifN)}\n                    color={\"blue\"}\n                    endIcon={\n                      <ArrowRightsvgIcon\n                        className={classNames(projectcss.all, sty.svg__vxIk)}\n                        role={\"img\"}\n                      />\n                    }\n                    shape={\"rounded\"}\n                    showEndIcon={true}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__kxrj6\n                      )}\n                    >\n                      {\"Search Newsletters\"}\n                    </div>\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <div className={classNames(projectcss.all, sty.freeBox___3YrSo)}>\n              <div\n                data-plasmic-name={\"footerBottom\"}\n                data-plasmic-override={overrides.footerBottom}\n                className={classNames(projectcss.all, sty.footerBottom)}\n              >\n                <div className={classNames(projectcss.all, sty.freeBox__id2Cu)}>\n                  <p.PlasmicLink\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__jzMtv\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  />\n                </div>\n\n                <div className={classNames(projectcss.all, sty.freeBox__eUaht)}>\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__egxLh\n                    )}\n                  >\n                    {\"© Hecto . All rights reserved\"}\n                  </div>\n\n                  <p.PlasmicLink\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__nhI\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__wtF\n                      )}\n                    >\n                      {\"Privacy\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__oYrjZ\n                      )}\n                    >\n                      {\"Terms and Conditions\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___7A1KJ\n                      )}\n                    >\n                      {\"Contact Us\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__c4XBg\n                      )}\n                    >\n                      {\"Blog\"}\n                    </div>\n                  </p.PlasmicLink>\n                </div>\n              </div>\n            </div>\n          </p.Stack>\n        ) : null}\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header\",\n    \"features\",\n    \"container4\",\n    \"outerRow2\",\n    \"row2\",\n    \"container5\",\n    \"outerRow3\",\n    \"row4\",\n    \"reasonBox\",\n    \"reasonBox2\",\n    \"reasonBox3\",\n    \"reasonBox4\",\n    \"reasonBox5\",\n    \"reasonBox6\",\n    \"outer\",\n    \"container\",\n    \"footerBottom\",\n  ],\n\n  header: [\"header\"],\n  features: [\n    \"features\",\n    \"container4\",\n    \"outerRow2\",\n    \"row2\",\n    \"container5\",\n    \"outerRow3\",\n    \"row4\",\n  ],\n\n  container4: [\"container4\", \"outerRow2\", \"row2\"],\n  outerRow2: [\"outerRow2\", \"row2\"],\n  row2: [\"row2\"],\n  container5: [\"container5\", \"outerRow3\", \"row4\"],\n  outerRow3: [\"outerRow3\", \"row4\"],\n  row4: [\"row4\"],\n  reasonBox: [\"reasonBox\"],\n  reasonBox2: [\"reasonBox2\"],\n  reasonBox3: [\"reasonBox3\"],\n  reasonBox4: [\"reasonBox4\"],\n  reasonBox5: [\"reasonBox5\"],\n  reasonBox6: [\"reasonBox6\"],\n  outer: [\"outer\", \"container\"],\n  container: [\"container\"],\n  footerBottom: [\"footerBottom\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHome__ArgProps,\n      internalVariantPropNames: PlasmicHome__VariantProps,\n    })\n\n    return PlasmicHome__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHome\"\n  } else {\n    func.displayName = `PlasmicHome.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHome = Object.assign(\n  // Top-level PlasmicHome renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    features: makeNodeComponent(\"features\"),\n    container4: makeNodeComponent(\"container4\"),\n    outerRow2: makeNodeComponent(\"outerRow2\"),\n    row2: makeNodeComponent(\"row2\"),\n    container5: makeNodeComponent(\"container5\"),\n    outerRow3: makeNodeComponent(\"outerRow3\"),\n    row4: makeNodeComponent(\"row4\"),\n    reasonBox: makeNodeComponent(\"reasonBox\"),\n    reasonBox2: makeNodeComponent(\"reasonBox2\"),\n    reasonBox3: makeNodeComponent(\"reasonBox3\"),\n    reasonBox4: makeNodeComponent(\"reasonBox4\"),\n    reasonBox5: makeNodeComponent(\"reasonBox5\"),\n    reasonBox6: makeNodeComponent(\"reasonBox6\"),\n    outer: makeNodeComponent(\"outer\"),\n    container: makeNodeComponent(\"container\"),\n    footerBottom: makeNodeComponent(\"footerBottom\"),\n    // Metadata about props expected for PlasmicHome\n    internalVariantProps: PlasmicHome__VariantProps,\n    internalArgProps: PlasmicHome__ArgProps,\n  }\n)\n\nexport default PlasmicHome\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicHome-module--__wab_img-spacer--EcyPj\";\nexport var button___7357C = \"PlasmicHome-module--button___7357C--13pa3\";\nexport var button___9XUft = \"PlasmicHome-module--button___9XUft--oM+bY\";\nexport var button__eBifN = \"PlasmicHome-module--button__eBifN--KXCgz\";\nexport var button__fVmKq = \"PlasmicHome-module--button__fVmKq--JAOFN\";\nexport var column__bOOh = \"PlasmicHome-module--column__bOOh--TPyna\";\nexport var column__bVaiL = \"PlasmicHome-module--column__bVaiL--Iyva0\";\nexport var column__cNjJ = \"PlasmicHome-module--column__cNjJ--8qXIM\";\nexport var column__d6Qjy = \"PlasmicHome-module--column__d6Qjy--XIFqW\";\nexport var column__h1Pj = \"PlasmicHome-module--column__h1Pj--7UYKj\";\nexport var column__kicg9 = \"PlasmicHome-module--column__kicg9---Mv07\";\nexport var column__laPwv = \"PlasmicHome-module--column__laPwv--cQe9P\";\nexport var column__oh5P2 = \"PlasmicHome-module--column__oh5P2--O+srX\";\nexport var column__p9Pfd = \"PlasmicHome-module--column__p9Pfd--+xkWy\";\nexport var column__qkGat = \"PlasmicHome-module--column__qkGat--6uGeB\";\nexport var column__qyEYn = \"PlasmicHome-module--column__qyEYn--GIF1o\";\nexport var column__sd22F = \"PlasmicHome-module--column__sd22F--EY76Z\";\nexport var column__tKgeq = \"PlasmicHome-module--column__tKgeq--vveh6\";\nexport var column__v2CxK = \"PlasmicHome-module--column__v2CxK--JGgIi\";\nexport var column__vxj6M = \"PlasmicHome-module--column__vxj6M--Cy5tI\";\nexport var columns___1FB0A = \"PlasmicHome-module--columns___1FB0A--o88Hi\";\nexport var columns___38Dr1 = \"PlasmicHome-module--columns___38Dr1--SEAdT\";\nexport var columns___9J1Pw = \"PlasmicHome-module--columns___9J1Pw--fO8WR\";\nexport var columns__aAdB = \"PlasmicHome-module--columns__aAdB--SE+Gz\";\nexport var columns__bPqyr = \"PlasmicHome-module--columns__bPqyr--kqsQg\";\nexport var columns__buZRg = \"PlasmicHome-module--columns__buZRg--KKYcX\";\nexport var columns__j9ONv = \"PlasmicHome-module--columns__j9ONv--dsFBs\";\nexport var columns__oKt1Y = \"PlasmicHome-module--columns__oKt1Y--jw0up\";\nexport var columns__oXTiv = \"PlasmicHome-module--columns__oXTiv--gJlEO\";\nexport var columns__w0Unk = \"PlasmicHome-module--columns__w0Unk--bHrOl\";\nexport var columns__wtUlN = \"PlasmicHome-module--columns__wtUlN--9Omk+\";\nexport var container = \"PlasmicHome-module--container--XYJzm\";\nexport var container4 = \"PlasmicHome-module--container4--seWem\";\nexport var container5 = \"PlasmicHome-module--container5--qNv0k\";\nexport var features = \"PlasmicHome-module--features--YjcEC\";\nexport var footerBottom = \"PlasmicHome-module--footerBottom--H66R+\";\nexport var freeBox___1Knur = \"PlasmicHome-module--freeBox___1Knur--OZNMi\";\nexport var freeBox___3YrSo = \"PlasmicHome-module--freeBox___3YrSo--B40ZY\";\nexport var freeBox___6G6Bl = \"PlasmicHome-module--freeBox___6G6Bl---E9Rs\";\nexport var freeBox___8Pphq = \"PlasmicHome-module--freeBox___8Pphq--B7KKe\";\nexport var freeBox__altd = \"PlasmicHome-module--freeBox__altd---m-ms\";\nexport var freeBox__bzOa2 = \"PlasmicHome-module--freeBox__bzOa2--xAgjt\";\nexport var freeBox__c8Btc = \"PlasmicHome-module--freeBox__c8Btc--yB3xU\";\nexport var freeBox__e5Xc = \"PlasmicHome-module--freeBox__e5Xc--l7rrY\";\nexport var freeBox__eL2WR = \"PlasmicHome-module--freeBox__eL2WR--tZl3B\";\nexport var freeBox__eUaht = \"PlasmicHome-module--freeBox__eUaht--+e1Q0\";\nexport var freeBox__fclkg = \"PlasmicHome-module--freeBox__fclkg---z1d7\";\nexport var freeBox__i8Qbf = \"PlasmicHome-module--freeBox__i8Qbf--AityD\";\nexport var freeBox__id2Cu = \"PlasmicHome-module--freeBox__id2Cu--CYIyW\";\nexport var freeBox__jBkIg = \"PlasmicHome-module--freeBox__jBkIg--a44tp\";\nexport var freeBox__lgMIl = \"PlasmicHome-module--freeBox__lgMIl--4ZSKs\";\nexport var freeBox__uVixW = \"PlasmicHome-module--freeBox__uVixW--sWGdc\";\nexport var h1__cD1 = \"PlasmicHome-module--h1__cD1--tAA43\";\nexport var h1__fiPqK = \"PlasmicHome-module--h1__fiPqK--zO840\";\nexport var h1__gdjgC = \"PlasmicHome-module--h1__gdjgC--i0-sK\";\nexport var h1__x2Sbm = \"PlasmicHome-module--h1__x2Sbm--I05g0\";\nexport var h2___7O0Js = \"PlasmicHome-module--h2___7O0Js--BgDl7\";\nexport var h2__mbr1C = \"PlasmicHome-module--h2__mbr1C--50QnS\";\nexport var h2__nJruG = \"PlasmicHome-module--h2__nJruG--lI-9G\";\nexport var h4___2Rat1 = \"PlasmicHome-module--h4___2Rat1--r38QC\";\nexport var h4___5QykZ = \"PlasmicHome-module--h4___5QykZ--ISaGt\";\nexport var h4__fsNNw = \"PlasmicHome-module--h4__fsNNw--FOEwm\";\nexport var h4__goy7Q = \"PlasmicHome-module--h4__goy7Q--ytXzZ\";\nexport var h4__mvOuv = \"PlasmicHome-module--h4__mvOuv--LgUQ5\";\nexport var h4__v3Oq = \"PlasmicHome-module--h4__v3Oq--NVU5r\";\nexport var header = \"PlasmicHome-module--header--l09eA\";\nexport var img___1LxKm = \"PlasmicHome-module--img___1LxKm--9vceK\";\nexport var img___3HW7O = \"PlasmicHome-module--img___3HW7O--gGBEl\";\nexport var img___9Tur1 = \"PlasmicHome-module--img___9Tur1--qpLHt\";\nexport var img__caV4 = \"PlasmicHome-module--img__caV4--7tdke\";\nexport var img__dpwD6 = \"PlasmicHome-module--img__dpwD6--RsShV\";\nexport var img__iEiWy = \"PlasmicHome-module--img__iEiWy--pik4Q\";\nexport var img__klXBq = \"PlasmicHome-module--img__klXBq--N1KoP\";\nexport var img__mT2As = \"PlasmicHome-module--img__mT2As--wWsh-\";\nexport var img__mjg0Y = \"PlasmicHome-module--img__mjg0Y--PeUkL\";\nexport var img__syyff = \"PlasmicHome-module--img__syyff--YV5oC\";\nexport var img__tsebv = \"PlasmicHome-module--img__tsebv--L-l86\";\nexport var img__u55E7 = \"PlasmicHome-module--img__u55E7--ImDuX\";\nexport var img__ucynL = \"PlasmicHome-module--img__ucynL--u+Z+K\";\nexport var img__vUfqP = \"PlasmicHome-module--img__vUfqP--bHJsw\";\nexport var img__w0PtE = \"PlasmicHome-module--img__w0PtE--ocboZ\";\nexport var link__jzMtv = \"PlasmicHome-module--link__jzMtv--T6N+6\";\nexport var link__nhI = \"PlasmicHome-module--link__nhI--NSvme\";\nexport var outer = \"PlasmicHome-module--outer--4S4tM\";\nexport var outerRow2 = \"PlasmicHome-module--outerRow2--kianw\";\nexport var outerRow3 = \"PlasmicHome-module--outerRow3--BCUPd\";\nexport var reasonBox = \"PlasmicHome-module--reasonBox--Nljl-\";\nexport var reasonBox2 = \"PlasmicHome-module--reasonBox2--A3DJ9\";\nexport var reasonBox3 = \"PlasmicHome-module--reasonBox3--+AyBQ\";\nexport var reasonBox4 = \"PlasmicHome-module--reasonBox4--BxlxN\";\nexport var reasonBox5 = \"PlasmicHome-module--reasonBox5--Gx5dz\";\nexport var reasonBox6 = \"PlasmicHome-module--reasonBox6--qNWsc\";\nexport var root = \"PlasmicHome-module--root--6d0XD\";\nexport var row2 = \"PlasmicHome-module--row2--EqZRL\";\nexport var row4 = \"PlasmicHome-module--row4--ePq9F\";\nexport var svg___1Q4Jn = \"PlasmicHome-module--svg___1Q4Jn--71sHx\";\nexport var svg__kftcD = \"PlasmicHome-module--svg__kftcD--LpoCv\";\nexport var svg__pXg = \"PlasmicHome-module--svg__pXg--jtYiZ\";\nexport var svg__vxIk = \"PlasmicHome-module--svg__vxIk--ffP2u\";\nexport var text___7A1KJ = \"PlasmicHome-module--text___7A1KJ--irnlm\";\nexport var text__c4XBg = \"PlasmicHome-module--text__c4XBg--IHgJ8\";\nexport var text__eW3Yu = \"PlasmicHome-module--text__eW3Yu--iAF0V\";\nexport var text__egxLh = \"PlasmicHome-module--text__egxLh--6je+5\";\nexport var text__gdJ7J = \"PlasmicHome-module--text__gdJ7J--GNFRT\";\nexport var text__gw0T9 = \"PlasmicHome-module--text__gw0T9--riZaP\";\nexport var text__hGnI = \"PlasmicHome-module--text__hGnI--lkkMZ\";\nexport var text__j7Ta = \"PlasmicHome-module--text__j7Ta--jFSAX\";\nexport var text__kDDcV = \"PlasmicHome-module--text__kDDcV--IIZPj\";\nexport var text__kxrj6 = \"PlasmicHome-module--text__kxrj6--FjCvj\";\nexport var text__mvf70 = \"PlasmicHome-module--text__mvf70--NjMbk\";\nexport var text__npDuk = \"PlasmicHome-module--text__npDuk--vk5tU\";\nexport var text__oYrjZ = \"PlasmicHome-module--text__oYrjZ--fzmyB\";\nexport var text__poh5H = \"PlasmicHome-module--text__poh5H--irK3U\";\nexport var text__sfwMq = \"PlasmicHome-module--text__sfwMq--LVcjW\";\nexport var text__tqkXc = \"PlasmicHome-module--text__tqkXc--5lgwb\";\nexport var text__whM3Q = \"PlasmicHome-module--text__whM3Q--23vxr\";\nexport var text__wtF = \"PlasmicHome-module--text__wtF--G3AXt\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHome } from \"../components/plasmic/hecto/PlasmicHome\"\n\nfunction Home() {\n  // Use PlasmicHome to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHome are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicHome is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicHome />\n}\n\nexport default Home\n"],"names":["PlasmicHeader__VariantProps","Array","PlasmicHeader__ArgProps","globalThis","__PlasmicWrapUserFunction","__PlasmicWrapUserPromise","PlasmicDescendants","root","button","makeNodeComponent","nodeName","func","props","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","args","ph","Object","assign","p","ensureGlobalVariants","screen","useScreenVariantskILw5UiAaS1UF","as","hasGap","className","classNames","projectcss","component","Link","platform","style","color","href","Button","shape","PlasmicHeader__RenderFunc","displayName","PlasmicHeader","internalVariantProps","internalArgProps","Header_","ref","PlasmicHome__VariantProps","PlasmicHome__ArgProps","header","features","container4","outerRow2","row2","container5","outerRow3","row4","reasonBox","reasonBox2","reasonBox3","reasonBox4","reasonBox5","reasonBox6","outer","container","footerBottom","endIcon","role","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","loading","src","image14YhFYwAwD","fullWidth","fullHeight","aspectRatio","undefined","airTravelerClubIconpngOXhQeqkJr","voltFmpng65KNczT0E","growthmentor2PngDbFq2ZnDc","image13Oy5YWPkj7","logoUsdsvgOdeblsO1Yj","clipboardOutlinesvg5UIvmRlOr","searchsvgIWxwm9VuZ","peopleOutlinesvgHyxjcYqpG7","link","showEndIcon","PlasmicHome__RenderFunc","PlasmicHome"],"sourceRoot":""}