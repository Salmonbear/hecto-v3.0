// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd
// Component: C5n9cmwHg6f
import * as React from "react"
import { Link } from "gatsby"
import * as p from "@plasmicapp/react-web"
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Header from "../../Header" // plasmic-import: qDyfn4Gje2P/component
import Button from "../../Button" // plasmic-import: 16yj8MRmRBT/component
import { useScreenVariants as useScreenVariantskILw5UiAaS1UF } from "./PlasmicGlobalVariant__Screen" // plasmic-import: kILw5uiAaS1uF/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as projectcss from "./plasmic_hecto.module.css" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss
import * as sty from "./PlasmicBlog.module.css" // plasmic-import: C5n9cmwHg6f/css
import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg" // plasmic-import: g1j_XxrLjbNK/icon

export const PlasmicBlog__VariantProps = new Array()

export const PlasmicBlog__ArgProps = new Array()

function PlasmicBlog__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props
  const $props = props.args
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantskILw5UiAaS1UF(),
  })

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <p.Stack
            as={"div"}
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            hasGap={true}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.root
            )}
          >
            <div className={classNames(projectcss.all, sty.freeBox__uXfUn)}>
              <div className={classNames(projectcss.all, sty.freeBox__jNgxc)}>
                <Header
                  data-plasmic-name={"header"}
                  data-plasmic-override={overrides.header}
                  className={classNames("__wab_instance", sty.header)}
                />

                <div className={classNames(projectcss.all, sty.freeBox__rMLnh)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___7DL75)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__pwmsv)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2Bsss
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__rZvMn
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            <h1
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                projectcss.__wab_text,
                                sty.h1__haaBt
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#0506CF" }}
                                >
                                  {"The Hecto Blog"}
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#FF4A03" }}
                                >
                                  {"."}
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </h1>
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </h1>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xSvDh
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#0D08FF" }}
                            >
                              {
                                "Hi, I'm Simon and I'm building Hecto, the sponsorship platform to support the newsletter creator economy. "
                              }
                            </span>
                            <React.Fragment>{"\n"}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#0D08FF" }}
                            >
                              {""}
                            </span>
                            <React.Fragment>{"\n"}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#0D08FF" }}
                            >
                              {"Read all about the journey here."}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </div>
              </div>
            </div>

            {true ? (
              <section
                data-plasmic-name={"features"}
                data-plasmic-override={overrides.features}
                className={classNames(projectcss.all, sty.features)}
              >
                <div className={classNames(projectcss.all, sty.column__anC0I)}>
                  <div
                    data-plasmic-name={"container4"}
                    data-plasmic-override={overrides.container4}
                    className={classNames(projectcss.all, sty.container4)}
                  >
                    <div
                      data-plasmic-name={"outerRow2"}
                      data-plasmic-override={overrides.outerRow2}
                      className={classNames(projectcss.all, sty.outerRow2)}
                    >
                      <div
                        data-plasmic-name={"row2"}
                        data-plasmic-override={overrides.row2}
                        className={classNames(projectcss.all, sty.row2)}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__qlUwl
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__aphqb
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___5Eekf
                            )}
                          >
                            <p.PlasmicImg
                              data-plasmic-name={"img"}
                              data-plasmic-override={overrides.img}
                              alt={""}
                              className={classNames(sty.img)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__stB5X
                              )}
                            >
                              {"Blog Title"}
                            </div>
                          </div>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__yVVuc
                          )}
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </section>
            ) : null}
            {true ? (
              <section
                className={classNames(projectcss.all, sty.columns___65Mi9)}
              >
                <div
                  data-plasmic-name={"outer"}
                  data-plasmic-override={overrides.outer}
                  className={classNames(projectcss.all, sty.outer)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__bOPoB)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__fUvPn)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__nc1Lp
                        )}
                      >
                        {"To Make Requests For The\nFurther Information"}
                      </h2>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__r4Jdi
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                        }
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__xrUue)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__zdf22
                        )}
                        color={"blue"}
                        link={"#"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__m73Sy
                          )}
                        >
                          {"Join With Now"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              </section>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__g0Lc8)}>
              <div className={classNames(projectcss.all, sty.columns___8Y8Fy)}>
                <div className={classNames(projectcss.all, sty.column__kzkPi)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__uXj9O
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"Ready to start your campaign?"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hpJPx
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"Find the perfect newsletter for your brand"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__qI4JW)}
                    color={"blue"}
                    endIcon={
                      <ArrowRightsvgIcon
                        data-plasmic-name={"svg"}
                        data-plasmic-override={overrides.svg}
                        className={classNames(projectcss.all, sty.svg)}
                        role={"img"}
                      />
                    }
                    shape={"rounded"}
                    showEndIcon={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r5SkQ
                      )}
                    >
                      {"Search Newsletters"}
                    </div>
                  </Button>
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__sok7B)}>
              <div
                data-plasmic-name={"footerTop"}
                data-plasmic-override={overrides.footerTop}
                className={classNames(projectcss.all, sty.footerTop)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__ow4Ow)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__h66Jq)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column__my0BQ)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fwyIt
                        )}
                      >
                        {""}
                      </div>
                    </p.Stack>
                  </div>
                </div>
              </div>

              <div
                data-plasmic-name={"footerBottom"}
                data-plasmic-override={overrides.footerBottom}
                className={classNames(projectcss.all, sty.footerBottom)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__p5Zc)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wJp9
                    )}
                  >
                    {"© Hecto . All rights reserved"}
                  </div>

                  <p.PlasmicLink
                    data-plasmic-name={"link"}
                    data-plasmic-override={overrides.link}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__efgNc
                      )}
                    >
                      {"Privacy"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zpMbw
                      )}
                    >
                      {"Terms and Conditions"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kvTqd
                      )}
                    >
                      {"Contact Us"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__um3IN
                      )}
                    >
                      {"Blog"}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__mZlUf)}
                    />
                  </p.PlasmicLink>
                </div>
              </div>
            </div>
          </p.Stack>
        ) : null}
      </div>
    </React.Fragment>
  )
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "features",
    "container4",
    "outerRow2",
    "row2",
    "img",
    "outer",
    "svg",
    "footerTop",
    "footerBottom",
    "link",
  ],

  header: ["header"],
  features: ["features", "container4", "outerRow2", "row2", "img"],
  container4: ["container4", "outerRow2", "row2", "img"],
  outerRow2: ["outerRow2", "row2", "img"],
  row2: ["row2"],
  img: ["img"],
  outer: ["outer"],
  svg: ["svg"],
  footerTop: ["footerTop"],
  footerBottom: ["footerBottom", "link"],
  link: ["link"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicBlog__ArgProps,
      internalVariantPropNames: PlasmicBlog__VariantProps,
    })

    return PlasmicBlog__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicBlog"
  } else {
    func.displayName = `PlasmicBlog.${nodeName}`
  }
  return func
}

export const PlasmicBlog = Object.assign(
  // Top-level PlasmicBlog renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    features: makeNodeComponent("features"),
    container4: makeNodeComponent("container4"),
    outerRow2: makeNodeComponent("outerRow2"),
    row2: makeNodeComponent("row2"),
    img: makeNodeComponent("img"),
    outer: makeNodeComponent("outer"),
    svg: makeNodeComponent("svg"),
    footerTop: makeNodeComponent("footerTop"),
    footerBottom: makeNodeComponent("footerBottom"),
    link: makeNodeComponent("link"),
    // Metadata about props expected for PlasmicBlog
    internalVariantProps: PlasmicBlog__VariantProps,
    internalArgProps: PlasmicBlog__ArgProps,
  }
)

export default PlasmicBlog
/* prettier-ignore-end */
