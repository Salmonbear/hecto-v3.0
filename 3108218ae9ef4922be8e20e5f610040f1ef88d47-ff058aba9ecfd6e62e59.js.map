{"version":3,"file":"3108218ae9ef4922be8e20e5f610040f1ef88d47-ff058aba9ecfd6e62e59.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicButton.module.css","webpack://gatsby-starter-default/./src/components/plasmic/hecto/icons/PlasmicIcon__Checksvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/icons/PlasmicIcon__Icon.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicButton.jsx","webpack://gatsby-starter-default/./src/components/Button.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var contentContainer = \"PlasmicButton-module--contentContainer--cKVmH\";\nexport var contentContainer___focusVisibleWithin = \"PlasmicButton-module--contentContainer___focusVisibleWithin--NCtnq\";\nexport var endIconContainer = \"PlasmicButton-module--endIconContainer--sCaA2\";\nexport var endIconContainershowEndIcon = \"PlasmicButton-module--endIconContainershowEndIcon--PM9V-\";\nexport var root = \"PlasmicButton-module--root--qOWBe\";\nexport var root___focusVisibleWithin = \"PlasmicButton-module--root___focusVisibleWithin--vJQom\";\nexport var rootcolor_blue = \"PlasmicButton-module--rootcolor_blue--Tn+e0\";\nexport var rootcolor_clear = \"PlasmicButton-module--rootcolor_clear--Z5qTG\";\nexport var rootcolor_link = \"PlasmicButton-module--rootcolor_link--8ZXd3\";\nexport var rootcolor_red = \"PlasmicButton-module--rootcolor_red--DqgXB\";\nexport var rootcolor_sand = \"PlasmicButton-module--rootcolor_sand--sv-q8\";\nexport var rootcolor_secondary = \"PlasmicButton-module--rootcolor_secondary--5Vi5I\";\nexport var rootcolor_softBlue = \"PlasmicButton-module--rootcolor_softBlue--F5ptI\";\nexport var rootcolor_softGreen = \"PlasmicButton-module--rootcolor_softGreen--AElhY\";\nexport var rootcolor_softRed = \"PlasmicButton-module--rootcolor_softRed--vdAH4\";\nexport var rootcolor_softSand = \"PlasmicButton-module--rootcolor_softSand--pLRQu\";\nexport var rootcolor_softYellow = \"PlasmicButton-module--rootcolor_softYellow--s4M75\";\nexport var rootcolor_white = \"PlasmicButton-module--rootcolor_white--zLYUb\";\nexport var rootcolor_yellow = \"PlasmicButton-module--rootcolor_yellow--fMoQ2\";\nexport var rootisDisabled = \"PlasmicButton-module--rootisDisabled--DaJKl\";\nexport var rootshape_round = \"PlasmicButton-module--rootshape_round--najMf\";\nexport var rootshape_rounded = \"PlasmicButton-module--rootshape_rounded--1gd13\";\nexport var rootshape_rounded_showEndIcon = \"PlasmicButton-module--rootshape_rounded_showEndIcon--jJH-k\";\nexport var rootshape_rounded_showStartIcon = \"PlasmicButton-module--rootshape_rounded_showStartIcon--fDmap\";\nexport var rootshape_sharp = \"PlasmicButton-module--rootshape_sharp--7UiIA\";\nexport var rootshowEndIcon = \"PlasmicButton-module--rootshowEndIcon--vLMM7\";\nexport var rootshowStartIcon = \"PlasmicButton-module--rootshowStartIcon--SFUia\";\nexport var rootsize_compact = \"PlasmicButton-module--rootsize_compact--HNBQW\";\nexport var rootsize_compact_shape_round = \"PlasmicButton-module--rootsize_compact_shape_round--wjtqx\";\nexport var rootsize_minimal = \"PlasmicButton-module--rootsize_minimal--c-4dQ\";\nexport var slotTargetChildren = \"PlasmicButton-module--slotTargetChildren--TOTaV\";\nexport var slotTargetChildren___focusVisibleWithin = \"PlasmicButton-module--slotTargetChildren___focusVisibleWithin--Z7U1E\";\nexport var slotTargetChildrencolor_blue = \"PlasmicButton-module--slotTargetChildrencolor_blue--z-ASO\";\nexport var slotTargetChildrencolor_clear = \"PlasmicButton-module--slotTargetChildrencolor_clear--T5YSY\";\nexport var slotTargetChildrencolor_link = \"PlasmicButton-module--slotTargetChildrencolor_link--1K+5s\";\nexport var slotTargetChildrencolor_red = \"PlasmicButton-module--slotTargetChildrencolor_red--Vm5gA\";\nexport var slotTargetChildrencolor_sand = \"PlasmicButton-module--slotTargetChildrencolor_sand--tha1O\";\nexport var slotTargetChildrencolor_secondary = \"PlasmicButton-module--slotTargetChildrencolor_secondary--1HedR\";\nexport var slotTargetChildrencolor_softBlue = \"PlasmicButton-module--slotTargetChildrencolor_softBlue--Be-f-\";\nexport var slotTargetChildrencolor_softGreen = \"PlasmicButton-module--slotTargetChildrencolor_softGreen--UqM1J\";\nexport var slotTargetChildrencolor_softRed = \"PlasmicButton-module--slotTargetChildrencolor_softRed--0Y1QA\";\nexport var slotTargetChildrencolor_softSand = \"PlasmicButton-module--slotTargetChildrencolor_softSand--Aqv9M\";\nexport var slotTargetChildrencolor_softYellow = \"PlasmicButton-module--slotTargetChildrencolor_softYellow--5uTaK\";\nexport var slotTargetChildrencolor_white = \"PlasmicButton-module--slotTargetChildrencolor_white--2XhPP\";\nexport var slotTargetChildrencolor_yellow = \"PlasmicButton-module--slotTargetChildrencolor_yellow--1iU4K\";\nexport var slotTargetEndIcon = \"PlasmicButton-module--slotTargetEndIcon--B6er7\";\nexport var slotTargetEndIconcolor_clear = \"PlasmicButton-module--slotTargetEndIconcolor_clear--0OwVv\";\nexport var slotTargetEndIconcolor_link = \"PlasmicButton-module--slotTargetEndIconcolor_link--06GFm\";\nexport var slotTargetEndIconcolor_softBlue = \"PlasmicButton-module--slotTargetEndIconcolor_softBlue--Kbq0e\";\nexport var slotTargetEndIconcolor_softGreen = \"PlasmicButton-module--slotTargetEndIconcolor_softGreen--gY74D\";\nexport var slotTargetEndIconcolor_softRed = \"PlasmicButton-module--slotTargetEndIconcolor_softRed--DWEhB\";\nexport var slotTargetEndIconcolor_softSand = \"PlasmicButton-module--slotTargetEndIconcolor_softSand--VtTub\";\nexport var slotTargetEndIconcolor_softYellow = \"PlasmicButton-module--slotTargetEndIconcolor_softYellow--8T3n1\";\nexport var slotTargetEndIconcolor_white = \"PlasmicButton-module--slotTargetEndIconcolor_white--QieHj\";\nexport var slotTargetEndIconcolor_yellow = \"PlasmicButton-module--slotTargetEndIconcolor_yellow--a1RYq\";\nexport var slotTargetStartIcon = \"PlasmicButton-module--slotTargetStartIcon--fsfOJ\";\nexport var slotTargetStartIconcolor_clear = \"PlasmicButton-module--slotTargetStartIconcolor_clear--OcjL9\";\nexport var slotTargetStartIconcolor_link = \"PlasmicButton-module--slotTargetStartIconcolor_link--VFIKt\";\nexport var slotTargetStartIconcolor_softBlue = \"PlasmicButton-module--slotTargetStartIconcolor_softBlue--fvWzB\";\nexport var slotTargetStartIconcolor_softGreen = \"PlasmicButton-module--slotTargetStartIconcolor_softGreen--NLK0G\";\nexport var slotTargetStartIconcolor_softRed = \"PlasmicButton-module--slotTargetStartIconcolor_softRed--uKCqp\";\nexport var slotTargetStartIconcolor_softSand = \"PlasmicButton-module--slotTargetStartIconcolor_softSand--9+ZRa\";\nexport var slotTargetStartIconcolor_softYellow = \"PlasmicButton-module--slotTargetStartIconcolor_softYellow--656zp\";\nexport var slotTargetStartIconcolor_white = \"PlasmicButton-module--slotTargetStartIconcolor_white---DKJa\";\nexport var slotTargetStartIconcolor_yellow = \"PlasmicButton-module--slotTargetStartIconcolor_yellow--tyZtp\";\nexport var startIconContainer = \"PlasmicButton-module--startIconContainer--CjhOf\";\nexport var startIconContainershowStartIcon = \"PlasmicButton-module--startIconContainershowStartIcon--QXP5q\";\nexport var svg__hcj8N = \"PlasmicButton-module--svg__hcj8N--WvvTw\";\nexport var svg__nlYdR = \"PlasmicButton-module--svg__nlYdR--0NGhm\";\nexport var text__lWviw = \"PlasmicButton-module--text__lWviw--32L4O\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function ChecksvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fillRule={\"evenodd\"}\n        clipRule={\"evenodd\"}\n        d={\n          \"M18.416 5.876a.75.75 0 01.208 1.04L11.42 17.721a1.75 1.75 0 01-2.871.06l-3.156-4.34a.75.75 0 111.214-.882l3.155 4.339a.25.25 0 00.41-.009l7.204-10.805a.75.75 0 011.04-.208z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default ChecksvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function IconIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      stroke={\"currentColor\"}\n      fill={\"currentColor\"}\n      strokeWidth={\"0\"}\n      viewBox={\"0 0 16 16\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fillRule={\"evenodd\"}\n        d={\n          \"M1 8a.5.5 0 01.5-.5h11.793l-3.147-3.146a.5.5 0 01.708-.708l4 4a.5.5 0 010 .708l-4 4a.5.5 0 01-.708-.708L13.293 8.5H1.5A.5.5 0 011 8z\"\n        }\n        stroke={\"none\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default IconIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd\n// Component: 16yj8MRmRBT\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport * as pp from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  useTrigger,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_hecto.module.css\" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss\nimport * as sty from \"./PlasmicButton.module.css\" // plasmic-import: 16yj8MRmRBT/css\nimport ChecksvgIcon from \"./icons/PlasmicIcon__Checksvg\" // plasmic-import: aExR7mqu1-8/icon\nimport IconIcon from \"./icons/PlasmicIcon__Icon\" // plasmic-import: nRPVX95eDxZ/icon\n\nexport const PlasmicButton__VariantProps = new Array(\n  \"showStartIcon\",\n  \"showEndIcon\",\n  \"isDisabled\",\n  \"shape\",\n  \"size\",\n  \"color\"\n)\n\nexport const PlasmicButton__ArgProps = new Array(\n  \"children\",\n  \"startIcon\",\n  \"endIcon\",\n  \"link\"\n)\n\nconst __wrapUserFunction =\n  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn())\n\nconst __wrapUserPromise =\n  globalThis.__PlasmicWrapUserPromise ??\n  (async (loc, promise) => {\n    await promise\n  })\n\nfunction PlasmicButton__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = {\n    ...args,\n    ...variants,\n  }\n\n  const currentUser = p.useCurrentUser?.() || {}\n  const stateSpecs = React.useMemo(\n    () => [\n      {\n        path: \"showStartIcon\",\n        type: \"private\",\n        initFunc: ($props, $state, $ctx) => $props.showStartIcon,\n      },\n\n      {\n        path: \"showEndIcon\",\n        type: \"private\",\n        initFunc: ($props, $state, $ctx) => $props.showEndIcon,\n      },\n\n      {\n        path: \"isDisabled\",\n        type: \"private\",\n        initFunc: ($props, $state, $ctx) => $props.isDisabled,\n      },\n\n      {\n        path: \"shape\",\n        type: \"private\",\n        initFunc: ($props, $state, $ctx) => $props.shape,\n      },\n\n      {\n        path: \"size\",\n        type: \"private\",\n        initFunc: ($props, $state, $ctx) => $props.size,\n      },\n\n      {\n        path: \"color\",\n        type: \"private\",\n        initFunc: ($props, $state, $ctx) => $props.color,\n      },\n    ],\n\n    [$props, $ctx]\n  )\n\n  const $state = p.useDollarState(stateSpecs, $props, $ctx)\n  const [$queries, setDollarQueries] = React.useState({})\n  const [isRootFocusVisibleWithin, triggerRootFocusVisibleWithinProps] =\n    useTrigger(\"useFocusVisibleWithin\", {\n      isTextInput: false,\n    })\n\n  const triggers = {\n    focusVisibleWithin_root: isRootFocusVisibleWithin,\n  }\n\n  return (\n    <p.Stack\n      as={\"button\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(\n        projectcss.all,\n        projectcss.button,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root,\n        {\n          [sty.root___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.rootcolor_blue]: hasVariant($state, \"color\", \"blue\"),\n          [sty.rootcolor_clear]: hasVariant($state, \"color\", \"clear\"),\n          [sty.rootcolor_link]: hasVariant($state, \"color\", \"link\"),\n          [sty.rootcolor_link_size_minimal]:\n            hasVariant($state, \"color\", \"link\") &&\n            hasVariant($state, \"size\", \"minimal\"),\n          [sty.rootcolor_red]: hasVariant($state, \"color\", \"red\"),\n          [sty.rootcolor_sand]: hasVariant($state, \"color\", \"sand\"),\n          [sty.rootcolor_secondary]: hasVariant($state, \"color\", \"secondary\"),\n          [sty.rootcolor_softBlue]: hasVariant($state, \"color\", \"softBlue\"),\n          [sty.rootcolor_softGreen]: hasVariant($state, \"color\", \"softGreen\"),\n          [sty.rootcolor_softRed]: hasVariant($state, \"color\", \"softRed\"),\n          [sty.rootcolor_softSand]: hasVariant($state, \"color\", \"softSand\"),\n          [sty.rootcolor_softYellow]: hasVariant($state, \"color\", \"softYellow\"),\n          [sty.rootcolor_white]: hasVariant($state, \"color\", \"white\"),\n          [sty.rootcolor_yellow]: hasVariant($state, \"color\", \"yellow\"),\n          [sty.rootisDisabled]: hasVariant($state, \"isDisabled\", \"isDisabled\"),\n          [sty.rootshape_round]: hasVariant($state, \"shape\", \"round\"),\n          [sty.rootshape_rounded]: hasVariant($state, \"shape\", \"rounded\"),\n          [sty.rootshape_rounded_showEndIcon]:\n            hasVariant($state, \"showEndIcon\", \"showEndIcon\") &&\n            hasVariant($state, \"shape\", \"rounded\"),\n          [sty.rootshape_rounded_showStartIcon]:\n            hasVariant($state, \"shape\", \"rounded\") &&\n            hasVariant($state, \"showStartIcon\", \"showStartIcon\"),\n          [sty.rootshape_sharp]: hasVariant($state, \"shape\", \"sharp\"),\n          [sty.rootshowEndIcon]: hasVariant(\n            $state,\n            \"showEndIcon\",\n            \"showEndIcon\"\n          ),\n\n          [sty.rootshowStartIcon]: hasVariant(\n            $state,\n            \"showStartIcon\",\n            \"showStartIcon\"\n          ),\n\n          [sty.rootsize_compact]: hasVariant($state, \"size\", \"compact\"),\n          [sty.rootsize_compact_shape_round]:\n            hasVariant($state, \"shape\", \"round\") &&\n            hasVariant($state, \"size\", \"compact\"),\n          [sty.rootsize_compact_shape_rounded]:\n            hasVariant($state, \"size\", \"compact\") &&\n            hasVariant($state, \"shape\", \"rounded\"),\n          [sty.rootsize_compact_showEndIcon]:\n            hasVariant($state, \"size\", \"compact\") &&\n            hasVariant($state, \"showEndIcon\", \"showEndIcon\"),\n          [sty.rootsize_compact_showStartIcon]:\n            hasVariant($state, \"size\", \"compact\") &&\n            hasVariant($state, \"showStartIcon\", \"showStartIcon\"),\n          [sty.rootsize_compact_showStartIcon_showEndIcon]:\n            hasVariant($state, \"size\", \"compact\") &&\n            hasVariant($state, \"showStartIcon\", \"showStartIcon\") &&\n            hasVariant($state, \"showEndIcon\", \"showEndIcon\"),\n          [sty.rootsize_minimal]: hasVariant($state, \"size\", \"minimal\"),\n        }\n      )}\n      data-plasmic-trigger-props={[triggerRootFocusVisibleWithinProps]}\n    >\n      {(hasVariant($state, \"showStartIcon\", \"showStartIcon\") ? true : false) ? (\n        <div\n          data-plasmic-name={\"startIconContainer\"}\n          data-plasmic-override={overrides.startIconContainer}\n          className={classNames(projectcss.all, sty.startIconContainer, {\n            [sty.startIconContainercolor_blue]: hasVariant(\n              $state,\n              \"color\",\n              \"blue\"\n            ),\n\n            [sty.startIconContainershape_rounded_showStartIcon]:\n              hasVariant($state, \"shape\", \"rounded\") &&\n              hasVariant($state, \"showStartIcon\", \"showStartIcon\"),\n            [sty.startIconContainershowStartIcon]: hasVariant(\n              $state,\n              \"showStartIcon\",\n              \"showStartIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <ChecksvgIcon\n                className={classNames(projectcss.all, sty.svg__hcj8N)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.startIcon,\n            className: classNames(sty.slotTargetStartIcon, {\n              [sty.slotTargetStartIconcolor_blue]: hasVariant(\n                $state,\n                \"color\",\n                \"blue\"\n              ),\n\n              [sty.slotTargetStartIconcolor_clear]: hasVariant(\n                $state,\n                \"color\",\n                \"clear\"\n              ),\n\n              [sty.slotTargetStartIconcolor_link]: hasVariant(\n                $state,\n                \"color\",\n                \"link\"\n              ),\n\n              [sty.slotTargetStartIconcolor_softBlue]: hasVariant(\n                $state,\n                \"color\",\n                \"softBlue\"\n              ),\n\n              [sty.slotTargetStartIconcolor_softGreen]: hasVariant(\n                $state,\n                \"color\",\n                \"softGreen\"\n              ),\n\n              [sty.slotTargetStartIconcolor_softRed]: hasVariant(\n                $state,\n                \"color\",\n                \"softRed\"\n              ),\n\n              [sty.slotTargetStartIconcolor_softSand]: hasVariant(\n                $state,\n                \"color\",\n                \"softSand\"\n              ),\n\n              [sty.slotTargetStartIconcolor_softYellow]: hasVariant(\n                $state,\n                \"color\",\n                \"softYellow\"\n              ),\n\n              [sty.slotTargetStartIconcolor_white]: hasVariant(\n                $state,\n                \"color\",\n                \"white\"\n              ),\n\n              [sty.slotTargetStartIconcolor_yellow]: hasVariant(\n                $state,\n                \"color\",\n                \"yellow\"\n              ),\n\n              [sty.slotTargetStartIconshowStartIcon]: hasVariant(\n                $state,\n                \"showStartIcon\",\n                \"showStartIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n\n      <div\n        data-plasmic-name={\"contentContainer\"}\n        data-plasmic-override={overrides.contentContainer}\n        className={classNames(projectcss.all, sty.contentContainer, {\n          [sty.contentContainer___focusVisibleWithin]:\n            triggers.focusVisibleWithin_root,\n          [sty.contentContainerisDisabled]: hasVariant(\n            $state,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.contentContainershape_rounded]: hasVariant(\n            $state,\n            \"shape\",\n            \"rounded\"\n          ),\n\n          [sty.contentContainershowEndIcon]: hasVariant(\n            $state,\n            \"showEndIcon\",\n            \"showEndIcon\"\n          ),\n        })}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents: (\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__lWviw\n              )}\n            >\n              <React.Fragment>\n                <span\n                  className={\"plasmic_default__all plasmic_default__span\"}\n                  style={{ color: \"#FF0000\" }}\n                >\n                  {\"Button\"}\n                </span>\n              </React.Fragment>\n            </div>\n          ),\n\n          value: args.children,\n          className: classNames(sty.slotTargetChildren, {\n            [sty.slotTargetChildren___focusVisibleWithin]:\n              triggers.focusVisibleWithin_root,\n            [sty.slotTargetChildrencolor_blue]: hasVariant(\n              $state,\n              \"color\",\n              \"blue\"\n            ),\n\n            [sty.slotTargetChildrencolor_clear]: hasVariant(\n              $state,\n              \"color\",\n              \"clear\"\n            ),\n\n            [sty.slotTargetChildrencolor_link]: hasVariant(\n              $state,\n              \"color\",\n              \"link\"\n            ),\n\n            [sty.slotTargetChildrencolor_link_size_minimal]:\n              hasVariant($state, \"color\", \"link\") &&\n              hasVariant($state, \"size\", \"minimal\"),\n            [sty.slotTargetChildrencolor_red]: hasVariant(\n              $state,\n              \"color\",\n              \"red\"\n            ),\n\n            [sty.slotTargetChildrencolor_sand]: hasVariant(\n              $state,\n              \"color\",\n              \"sand\"\n            ),\n\n            [sty.slotTargetChildrencolor_secondary]: hasVariant(\n              $state,\n              \"color\",\n              \"secondary\"\n            ),\n\n            [sty.slotTargetChildrencolor_softBlue]: hasVariant(\n              $state,\n              \"color\",\n              \"softBlue\"\n            ),\n\n            [sty.slotTargetChildrencolor_softGreen]: hasVariant(\n              $state,\n              \"color\",\n              \"softGreen\"\n            ),\n\n            [sty.slotTargetChildrencolor_softRed]: hasVariant(\n              $state,\n              \"color\",\n              \"softRed\"\n            ),\n\n            [sty.slotTargetChildrencolor_softSand]: hasVariant(\n              $state,\n              \"color\",\n              \"softSand\"\n            ),\n\n            [sty.slotTargetChildrencolor_softYellow]: hasVariant(\n              $state,\n              \"color\",\n              \"softYellow\"\n            ),\n\n            [sty.slotTargetChildrencolor_white]: hasVariant(\n              $state,\n              \"color\",\n              \"white\"\n            ),\n\n            [sty.slotTargetChildrencolor_yellow]: hasVariant(\n              $state,\n              \"color\",\n              \"yellow\"\n            ),\n\n            [sty.slotTargetChildrenisDisabled]: hasVariant(\n              $state,\n              \"isDisabled\",\n              \"isDisabled\"\n            ),\n\n            [sty.slotTargetChildrenshape_rounded]: hasVariant(\n              $state,\n              \"shape\",\n              \"rounded\"\n            ),\n\n            [sty.slotTargetChildrenshowEndIcon]: hasVariant(\n              $state,\n              \"showEndIcon\",\n              \"showEndIcon\"\n            ),\n\n            [sty.slotTargetChildrenshowStartIcon]: hasVariant(\n              $state,\n              \"showStartIcon\",\n              \"showStartIcon\"\n            ),\n\n            [sty.slotTargetChildrensize_minimal]: hasVariant(\n              $state,\n              \"size\",\n              \"minimal\"\n            ),\n          }),\n        })}\n      </div>\n\n      {(hasVariant($state, \"showEndIcon\", \"showEndIcon\") ? true : false) ? (\n        <div\n          data-plasmic-name={\"endIconContainer\"}\n          data-plasmic-override={overrides.endIconContainer}\n          className={classNames(projectcss.all, sty.endIconContainer, {\n            [sty.endIconContainercolor_white]: hasVariant(\n              $state,\n              \"color\",\n              \"white\"\n            ),\n\n            [sty.endIconContainercolor_yellow]: hasVariant(\n              $state,\n              \"color\",\n              \"yellow\"\n            ),\n\n            [sty.endIconContainershowEndIcon]: hasVariant(\n              $state,\n              \"showEndIcon\",\n              \"showEndIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__nlYdR)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.endIcon,\n            className: classNames(sty.slotTargetEndIcon, {\n              [sty.slotTargetEndIconcolor_clear]: hasVariant(\n                $state,\n                \"color\",\n                \"clear\"\n              ),\n\n              [sty.slotTargetEndIconcolor_link]: hasVariant(\n                $state,\n                \"color\",\n                \"link\"\n              ),\n\n              [sty.slotTargetEndIconcolor_softBlue]: hasVariant(\n                $state,\n                \"color\",\n                \"softBlue\"\n              ),\n\n              [sty.slotTargetEndIconcolor_softGreen]: hasVariant(\n                $state,\n                \"color\",\n                \"softGreen\"\n              ),\n\n              [sty.slotTargetEndIconcolor_softRed]: hasVariant(\n                $state,\n                \"color\",\n                \"softRed\"\n              ),\n\n              [sty.slotTargetEndIconcolor_softSand]: hasVariant(\n                $state,\n                \"color\",\n                \"softSand\"\n              ),\n\n              [sty.slotTargetEndIconcolor_softYellow]: hasVariant(\n                $state,\n                \"color\",\n                \"softYellow\"\n              ),\n\n              [sty.slotTargetEndIconcolor_white]: hasVariant(\n                $state,\n                \"color\",\n                \"white\"\n              ),\n\n              [sty.slotTargetEndIconcolor_yellow]: hasVariant(\n                $state,\n                \"color\",\n                \"yellow\"\n              ),\n\n              [sty.slotTargetEndIconshowEndIcon]: hasVariant(\n                $state,\n                \"showEndIcon\",\n                \"showEndIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n    </p.Stack>\n  )\n}\n\nfunction useBehavior(props, ref) {\n  const b = pp.useButton(\n    PlasmicButton,\n    props,\n    {\n      showStartIconVariant: {\n        group: \"showStartIcon\",\n        variant: \"showStartIcon\",\n      },\n\n      showEndIconVariant: { group: \"showEndIcon\", variant: \"showEndIcon\" },\n      isDisabledVariant: { group: \"isDisabled\", variant: \"isDisabled\" },\n      contentSlot: \"children\",\n      startIconSlot: \"startIcon\",\n      endIconSlot: \"endIcon\",\n      root: \"root\",\n    },\n\n    ref\n  )\n\n  if (b.plasmicProps.overrides.root.as === \"a\") {\n    b.plasmicProps.overrides.root.as = p.PlasmicLink\n    b.plasmicProps.overrides.root.props.component = Link\n    b.plasmicProps.overrides.root.props.platform = \"gatsby\"\n  }\n  return b\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"startIconContainer\", \"contentContainer\", \"endIconContainer\"],\n  startIconContainer: [\"startIconContainer\"],\n  contentContainer: [\"contentContainer\"],\n  endIconContainer: [\"endIconContainer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicButton__ArgProps,\n          internalVariantPropNames: PlasmicButton__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicButton__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicButton\"\n  } else {\n    func.displayName = `PlasmicButton.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicButton = Object.assign(\n  // Top-level PlasmicButton renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    startIconContainer: makeNodeComponent(\"startIconContainer\"),\n    contentContainer: makeNodeComponent(\"contentContainer\"),\n    endIconContainer: makeNodeComponent(\"endIconContainer\"),\n    // Metadata about props expected for PlasmicButton\n    internalVariantProps: PlasmicButton__VariantProps,\n    internalArgProps: PlasmicButton__ArgProps,\n    useBehavior,\n  }\n)\n\nexport default PlasmicButton\n/* prettier-ignore-end */\n","import * as React from \"react\"\nimport { PlasmicButton } from \"./plasmic/hecto/PlasmicButton\"\n\nfunction Button_(props, ref) {\n  const { plasmicProps } = PlasmicButton.useBehavior(props, ref)\n  return <PlasmicButton {...plasmicProps} />\n}\n\nconst Button = React.forwardRef(Button_)\n\nexport default Object.assign(Button, {\n  __plumeType: \"button\",\n})\n"],"names":["contentContainer","contentContainer___focusVisibleWithin","endIconContainer","endIconContainershowEndIcon","root","root___focusVisibleWithin","rootcolor_blue","rootcolor_clear","rootcolor_link","rootcolor_red","rootcolor_sand","rootcolor_secondary","rootcolor_softBlue","rootcolor_softGreen","rootcolor_softRed","rootcolor_softSand","rootcolor_softYellow","rootcolor_white","rootcolor_yellow","rootisDisabled","rootshape_round","rootshape_rounded","rootshape_rounded_showEndIcon","rootshape_rounded_showStartIcon","rootshape_sharp","rootshowEndIcon","rootshowStartIcon","rootsize_compact","rootsize_compact_shape_round","rootsize_minimal","slotTargetChildren","slotTargetChildren___focusVisibleWithin","slotTargetChildrencolor_blue","slotTargetChildrencolor_clear","slotTargetChildrencolor_link","slotTargetChildrencolor_red","slotTargetChildrencolor_sand","slotTargetChildrencolor_secondary","slotTargetChildrencolor_softBlue","slotTargetChildrencolor_softGreen","slotTargetChildrencolor_softRed","slotTargetChildrencolor_softSand","slotTargetChildrencolor_softYellow","slotTargetChildrencolor_white","slotTargetChildrencolor_yellow","slotTargetEndIcon","slotTargetEndIconcolor_clear","slotTargetEndIconcolor_link","slotTargetEndIconcolor_softBlue","slotTargetEndIconcolor_softGreen","slotTargetEndIconcolor_softRed","slotTargetEndIconcolor_softSand","slotTargetEndIconcolor_softYellow","slotTargetEndIconcolor_white","slotTargetEndIconcolor_yellow","slotTargetStartIcon","slotTargetStartIconcolor_clear","slotTargetStartIconcolor_link","slotTargetStartIconcolor_softBlue","slotTargetStartIconcolor_softGreen","slotTargetStartIconcolor_softRed","slotTargetStartIconcolor_softSand","slotTargetStartIconcolor_softYellow","slotTargetStartIconcolor_white","slotTargetStartIconcolor_yellow","startIconContainer","startIconContainershowStartIcon","svg__hcj8N","svg__nlYdR","text__lWviw","props","className","style","title","restProps","xmlns","fill","viewBox","height","width","classNames","fillRule","clipRule","d","stroke","strokeWidth","PlasmicButton__VariantProps","Array","PlasmicButton__ArgProps","globalThis","__PlasmicWrapUserFunction","__PlasmicWrapUserPromise","PlasmicDescendants","makeNodeComponent","nodeName","func","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","$ctx","ph","args","Object","assign","$props","stateSpecs","p","path","type","initFunc","$state","showStartIcon","showEndIcon","isDisabled","shape","size","color","useTrigger","isTextInput","isRootFocusVisibleWithin","triggerRootFocusVisibleWithinProps","triggers","focusVisibleWithin_root","as","hasGap","projectcss","sty","hasVariant","defaultContents","role","value","startIcon","children","endIcon","PlasmicButton__RenderFunc","displayName","PlasmicButton","internalVariantProps","internalArgProps","useBehavior","ref","b","pp","showStartIconVariant","group","variant","showEndIconVariant","isDisabledVariant","contentSlot","startIconSlot","endIconSlot","plasmicProps","component","Link","platform","Button_","Button","__plumeType"],"sourceRoot":""}