{"version":3,"file":"component---src-pages-blog-jsx-e71e9d665e5bc4396044.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicBlog.module.css","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicBlog.jsx","webpack://gatsby-starter-default/./src/pages/blog.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var blogColumn = \"PlasmicBlog-module--blogColumn--0DFWJ\";\nexport var button__qI4JW = \"PlasmicBlog-module--button__qI4JW--rNpDu\";\nexport var button__zdf22 = \"PlasmicBlog-module--button__zdf22--wMZcq\";\nexport var column__fUvPn = \"PlasmicBlog-module--column__fUvPn--uB9f5\";\nexport var column__kzkPi = \"PlasmicBlog-module--column__kzkPi--yHUkL\";\nexport var column__my0BQ = \"PlasmicBlog-module--column__my0BQ--LPn8W\";\nexport var column__xrUue = \"PlasmicBlog-module--column__xrUue--4aLpx\";\nexport var columns___65Mi9 = \"PlasmicBlog-module--columns___65Mi9--0Wihk\";\nexport var columns___8Y8Fy = \"PlasmicBlog-module--columns___8Y8Fy--d+7mn\";\nexport var columns__bOPoB = \"PlasmicBlog-module--columns__bOPoB--1+gwF\";\nexport var columns__h66Jq = \"PlasmicBlog-module--columns__h66Jq--oL78G\";\nexport var container4 = \"PlasmicBlog-module--container4--ZsmTG\";\nexport var features = \"PlasmicBlog-module--features--GqqY7\";\nexport var footerBottom = \"PlasmicBlog-module--footerBottom--NbGLY\";\nexport var footerTop = \"PlasmicBlog-module--footerTop--DUqv2\";\nexport var freeBox___2Bsss = \"PlasmicBlog-module--freeBox___2Bsss--9PCtq\";\nexport var freeBox___7DL75 = \"PlasmicBlog-module--freeBox___7DL75--qomCz\";\nexport var freeBox__g0Lc8 = \"PlasmicBlog-module--freeBox__g0Lc8--EhuP7\";\nexport var freeBox__jNgxc = \"PlasmicBlog-module--freeBox__jNgxc--Zv7Om\";\nexport var freeBox__mZlUf = \"PlasmicBlog-module--freeBox__mZlUf--39KIF\";\nexport var freeBox__ow4Ow = \"PlasmicBlog-module--freeBox__ow4Ow--lFaJV\";\nexport var freeBox__p5Zc = \"PlasmicBlog-module--freeBox__p5Zc--v5zw4\";\nexport var freeBox__pwmsv = \"PlasmicBlog-module--freeBox__pwmsv--ARyo6\";\nexport var freeBox__sok7B = \"PlasmicBlog-module--freeBox__sok7B--30-2Z\";\nexport var freeBox__uXfUn = \"PlasmicBlog-module--freeBox__uXfUn--UwlBG\";\nexport var h1__rZvMn = \"PlasmicBlog-module--h1__rZvMn--0vQac\";\nexport var h2__nc1Lp = \"PlasmicBlog-module--h2__nc1Lp--38uMc\";\nexport var h2__uXj9O = \"PlasmicBlog-module--h2__uXj9O--rBzQQ\";\nexport var header = \"PlasmicBlog-module--header--mYAgX\";\nexport var heroHorizontal = \"PlasmicBlog-module--heroHorizontal--XPs18\";\nexport var link__lYcHz = \"PlasmicBlog-module--link__lYcHz--GmFYo\";\nexport var outer = \"PlasmicBlog-module--outer--Xud8S\";\nexport var root = \"PlasmicBlog-module--root---QyX6\";\nexport var svg = \"PlasmicBlog-module--svg--+MMG1\";\nexport var text__efgNc = \"PlasmicBlog-module--text__efgNc--FUAQo\";\nexport var text__fwyIt = \"PlasmicBlog-module--text__fwyIt--FvTX5\";\nexport var text__hpJPx = \"PlasmicBlog-module--text__hpJPx--+aIp+\";\nexport var text__kvTqd = \"PlasmicBlog-module--text__kvTqd---ypwA\";\nexport var text__m73Sy = \"PlasmicBlog-module--text__m73Sy--kZzg4\";\nexport var text__r4Jdi = \"PlasmicBlog-module--text__r4Jdi--H-llP\";\nexport var text__r5SkQ = \"PlasmicBlog-module--text__r5SkQ--NbXBA\";\nexport var text__um3IN = \"PlasmicBlog-module--text__um3IN--ZDATH\";\nexport var text__wJp9 = \"PlasmicBlog-module--text__wJp9--LzU-o\";\nexport var text__xSvDh = \"PlasmicBlog-module--text__xSvDh--gH5UL\";\nexport var text__zpMbw = \"PlasmicBlog-module--text__zpMbw--OJiGf\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd\n// Component: C5n9cmwHg6f\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: qDyfn4Gje2P/component\nimport Button from \"../../Button\" // plasmic-import: 16yj8MRmRBT/component\nimport { useScreenVariants as useScreenVariantskILw5UiAaS1UF } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: kILw5uiAaS1uF/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_hecto.module.css\" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss\nimport * as sty from \"./PlasmicBlog.module.css\" // plasmic-import: C5n9cmwHg6f/css\nimport ArrowRightsvgIcon from \"./icons/PlasmicIcon__ArrowRightsvg\" // plasmic-import: g1j_XxrLjbNK/icon\n\nexport const PlasmicBlog__VariantProps = new Array()\n\nexport const PlasmicBlog__ArgProps = new Array()\n\nexport function Head() {\n  return (\n    <>\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <title key=\"title\">{PlasmicBlog.pageMetadata.title}</title>\n      <meta\n        key=\"og:title\"\n        property=\"og:title\"\n        content={PlasmicBlog.pageMetadata.title}\n      />\n\n      <meta\n        key=\"twitter:title\"\n        name=\"twitter:title\"\n        content={PlasmicBlog.pageMetadata.title}\n      />\n    </>\n  )\n}\n\nfunction PlasmicBlog__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = {\n    ...args,\n    ...variants,\n  }\n\n  const currentUser = p.useCurrentUser?.() || {}\n  const [$queries, setDollarQueries] = React.useState({})\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantskILw5UiAaS1UF(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        {true ? (\n          <p.Stack\n            as={\"div\"}\n            data-plasmic-name={\"root\"}\n            data-plasmic-override={overrides.root}\n            data-plasmic-root={true}\n            data-plasmic-for-node={forNode}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.root_reset,\n              projectcss.plasmic_default_styles,\n              projectcss.plasmic_mixins,\n              projectcss.plasmic_tokens,\n              sty.root\n            )}\n          >\n            <div className={classNames(projectcss.all, sty.freeBox__uXfUn)}>\n              <div className={classNames(projectcss.all, sty.freeBox__jNgxc)}>\n                <Header\n                  data-plasmic-name={\"header\"}\n                  data-plasmic-override={overrides.header}\n                  className={classNames(\"__wab_instance\", sty.header)}\n                />\n\n                <div\n                  data-plasmic-name={\"heroHorizontal\"}\n                  data-plasmic-override={overrides.heroHorizontal}\n                  className={classNames(projectcss.all, sty.heroHorizontal)}\n                >\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox___7DL75)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__pwmsv)}\n                    >\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox___2Bsss\n                        )}\n                      >\n                        <h1\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h1,\n                            projectcss.__wab_text,\n                            sty.h1__rZvMn\n                          )}\n                        >\n                          <React.Fragment>\n                            <React.Fragment>{\"\"}</React.Fragment>\n                            {\n                              <h1\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h1,\n                                  projectcss.__wab_text,\n                                  sty.h1__haaBt\n                                )}\n                              >\n                                <React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{\n                                      color: \"#0506CF\",\n                                      fontWeight: 700,\n                                    }}\n                                  >\n                                    {\"The Hecto Blog\"}\n                                  </span>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{\n                                      color: \"#FF4A03\",\n                                      fontWeight: 700,\n                                    }}\n                                  >\n                                    {\".\"}\n                                  </span>\n                                </React.Fragment>\n                              </h1>\n                            }\n\n                            <React.Fragment>{\"\"}</React.Fragment>\n                          </React.Fragment>\n                        </h1>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__xSvDh\n                          )}\n                        >\n                          <React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0D08FF\" }}\n                            >\n                              {\"Hi, I'm \"}\n                            </span>\n                            <React.Fragment>{\"\"}</React.Fragment>\n                            {\n                              <p.PlasmicLink\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.a,\n                                  projectcss.__wab_text,\n                                  projectcss.plasmic_default__inline,\n                                  sty.link__xe4M\n                                )}\n                                component={Link}\n                                href={\"https://twitter.com/thedudlian\"}\n                                platform={\"gatsby\"}\n                              >\n                                <React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF7C08\" }}\n                                  >\n                                    {\"Simon\"}\n                                  </span>\n                                </React.Fragment>\n                              </p.PlasmicLink>\n                            }\n\n                            <React.Fragment>{\"\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0D08FF\" }}\n                            >\n                              {\n                                \" and I'm building Hecto, the sponsorship platform to support the newsletter creator economy. \"\n                              }\n                            </span>\n                            <React.Fragment>{\"\\n\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0D08FF\" }}\n                            >\n                              {\"\"}\n                            </span>\n                            <React.Fragment>{\"\\n\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0D08FF\" }}\n                            >\n                              {\"Read all about the journey here.\"}\n                            </span>\n                          </React.Fragment>\n                        </div>\n                      </p.Stack>\n                    </p.Stack>\n                  </p.Stack>\n                </div>\n              </div>\n            </div>\n\n            {true ? (\n              <section\n                data-plasmic-name={\"features\"}\n                data-plasmic-override={overrides.features}\n                className={classNames(projectcss.all, sty.features)}\n              >\n                <div\n                  data-plasmic-name={\"blogColumn\"}\n                  data-plasmic-override={overrides.blogColumn}\n                  className={classNames(projectcss.all, sty.blogColumn)}\n                >\n                  <div\n                    data-plasmic-name={\"container4\"}\n                    data-plasmic-override={overrides.container4}\n                    className={classNames(projectcss.all, sty.container4)}\n                  />\n                </div>\n              </section>\n            ) : null}\n            {true ? (\n              <section\n                className={classNames(projectcss.all, sty.columns___65Mi9)}\n              >\n                <div\n                  data-plasmic-name={\"outer\"}\n                  data-plasmic-override={overrides.outer}\n                  className={classNames(projectcss.all, sty.outer)}\n                >\n                  <div\n                    className={classNames(projectcss.all, sty.columns__bOPoB)}\n                  >\n                    <div\n                      className={classNames(projectcss.all, sty.column__fUvPn)}\n                    >\n                      <h2\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.h2,\n                          projectcss.__wab_text,\n                          sty.h2__nc1Lp\n                        )}\n                      >\n                        {\"To Make Requests For The\\nFurther Information\"}\n                      </h2>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__r4Jdi\n                        )}\n                      >\n                        {\n                          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                        }\n                      </div>\n                    </div>\n\n                    <div\n                      className={classNames(projectcss.all, sty.column__xrUue)}\n                    >\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__zdf22\n                        )}\n                        color={\"blue\"}\n                        link={\"#\"}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__m73Sy\n                          )}\n                        >\n                          {\"Join With Now\"}\n                        </div>\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : null}\n\n            <div className={classNames(projectcss.all, sty.freeBox__g0Lc8)}>\n              <div className={classNames(projectcss.all, sty.columns___8Y8Fy)}>\n                <div className={classNames(projectcss.all, sty.column__kzkPi)}>\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__uXj9O\n                    )}\n                  >\n                    <React.Fragment>\n                      <span\n                        className={\"plasmic_default__all plasmic_default__span\"}\n                        style={{ color: \"#000000\" }}\n                      >\n                        {\"Ready to start your campaign?\"}\n                      </span>\n                    </React.Fragment>\n                  </h2>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__hpJPx\n                    )}\n                  >\n                    <React.Fragment>\n                      <span\n                        className={\"plasmic_default__all plasmic_default__span\"}\n                        style={{ color: \"#000000\" }}\n                      >\n                        {\"Find the perfect newsletter for your brand\"}\n                      </span>\n                    </React.Fragment>\n                  </div>\n\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button__qI4JW)}\n                    color={\"blue\"}\n                    endIcon={\n                      <ArrowRightsvgIcon\n                        data-plasmic-name={\"svg\"}\n                        data-plasmic-override={overrides.svg}\n                        className={classNames(projectcss.all, sty.svg)}\n                        role={\"img\"}\n                      />\n                    }\n                    shape={\"rounded\"}\n                    showEndIcon={true}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__r5SkQ\n                      )}\n                    >\n                      {\"Search Newsletters\"}\n                    </div>\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <div className={classNames(projectcss.all, sty.freeBox__sok7B)}>\n              <div\n                data-plasmic-name={\"footerTop\"}\n                data-plasmic-override={overrides.footerTop}\n                className={classNames(projectcss.all, sty.footerTop)}\n              >\n                <div className={classNames(projectcss.all, sty.freeBox__ow4Ow)}>\n                  <div\n                    className={classNames(projectcss.all, sty.columns__h66Jq)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.column__my0BQ)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__fwyIt\n                        )}\n                      >\n                        {\"\"}\n                      </div>\n                    </p.Stack>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                data-plasmic-name={\"footerBottom\"}\n                data-plasmic-override={overrides.footerBottom}\n                className={classNames(projectcss.all, sty.footerBottom)}\n              >\n                <div className={classNames(projectcss.all, sty.freeBox__p5Zc)}>\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__wJp9\n                    )}\n                  >\n                    {\"© Hecto . All rights reserved\"}\n                  </div>\n\n                  <p.PlasmicLink\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__lYcHz\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__efgNc\n                      )}\n                    >\n                      {\"Privacy\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__zpMbw\n                      )}\n                    >\n                      {\"Terms and Conditions\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__kvTqd\n                      )}\n                    >\n                      {\"Contact Us\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__um3IN\n                      )}\n                    >\n                      {\"Blog\"}\n                    </div>\n\n                    <div\n                      className={classNames(projectcss.all, sty.freeBox__mZlUf)}\n                    />\n                  </p.PlasmicLink>\n                </div>\n              </div>\n            </div>\n          </p.Stack>\n        ) : null}\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header\",\n    \"heroHorizontal\",\n    \"features\",\n    \"blogColumn\",\n    \"container4\",\n    \"outer\",\n    \"svg\",\n    \"footerTop\",\n    \"footerBottom\",\n  ],\n\n  header: [\"header\"],\n  heroHorizontal: [\"heroHorizontal\"],\n  features: [\"features\", \"blogColumn\", \"container4\"],\n  blogColumn: [\"blogColumn\", \"container4\"],\n  container4: [\"container4\"],\n  outer: [\"outer\"],\n  svg: [\"svg\"],\n  footerTop: [\"footerTop\"],\n  footerBottom: [\"footerBottom\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicBlog__ArgProps,\n          internalVariantPropNames: PlasmicBlog__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicBlog__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicBlog\"\n  } else {\n    func.displayName = `PlasmicBlog.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicBlog = Object.assign(\n  // Top-level PlasmicBlog renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    heroHorizontal: makeNodeComponent(\"heroHorizontal\"),\n    features: makeNodeComponent(\"features\"),\n    blogColumn: makeNodeComponent(\"blogColumn\"),\n    container4: makeNodeComponent(\"container4\"),\n    outer: makeNodeComponent(\"outer\"),\n    svg: makeNodeComponent(\"svg\"),\n    footerTop: makeNodeComponent(\"footerTop\"),\n    footerBottom: makeNodeComponent(\"footerBottom\"),\n    // Metadata about props expected for PlasmicBlog\n    internalVariantProps: PlasmicBlog__VariantProps,\n    internalArgProps: PlasmicBlog__ArgProps,\n    // Page metadata\n    pageMetadata: {\n      title: \"Hecto | Newsletter advertising, simplified\",\n      description: \"\",\n      ogImageSrc: \"\",\n      canonical: \"\",\n    },\n  }\n)\n\nexport default PlasmicBlog\n/* prettier-ignore-end */\n","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicBlog } from \"../components/plasmic/hecto/PlasmicBlog\"\n\nfunction Blog() {\n  // Use PlasmicBlog to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicBlog are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicBlog is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicBlog />\n}\n\nexport default Blog\n"],"names":["blogColumn","button__qI4JW","button__zdf22","column__fUvPn","column__kzkPi","column__my0BQ","column__xrUue","columns___65Mi9","columns___8Y8Fy","columns__bOPoB","columns__h66Jq","container4","features","footerBottom","footerTop","freeBox___2Bsss","freeBox___7DL75","freeBox__g0Lc8","freeBox__jNgxc","freeBox__mZlUf","freeBox__ow4Ow","freeBox__p5Zc","freeBox__pwmsv","freeBox__sok7B","freeBox__uXfUn","h1__rZvMn","h2__nc1Lp","h2__uXj9O","header","heroHorizontal","link__lYcHz","outer","root","svg","text__efgNc","text__fwyIt","text__hpJPx","text__kvTqd","text__m73Sy","text__r4Jdi","text__r5SkQ","text__um3IN","text__wJp9","text__xSvDh","text__zpMbw","PlasmicBlog__VariantProps","Array","PlasmicBlog__ArgProps","PlasmicDescendants","makeNodeComponent","nodeName","func","props","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","args","ph","Object","assign","p","ensureGlobalVariants","screen","useScreenVariantskILw5UiAaS1UF","className","projectcss","as","hasGap","classNames","sty","Header","style","color","fontWeight","component","Link","href","platform","Button","link","endIcon","role","shape","showEndIcon","PlasmicBlog__RenderFunc","displayName","PlasmicBlog","internalVariantProps","internalArgProps","pageMetadata","title","description","ogImageSrc","canonical"],"sourceRoot":""}