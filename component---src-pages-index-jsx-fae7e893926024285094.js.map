{"version":3,"file":"component---src-pages-index-jsx-fae7e893926024285094.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@plasmicapp/host/registerComponent/dist/index.esm.js","webpack://gatsby-starter-default/./node_modules/@plasmicpkgs/plasmic-nav/dist/plasmic-nav.esm.js","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicHectoNav.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicHectoNav.module.css","webpack://gatsby-starter-default/./src/components/HectoNav.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicIndex.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicIndex.module.css","webpack://gatsby-starter-default/./src/pages/index.jsx"],"sourcesContent":["import \"core-js/modules/esnext.global-this.js\";\nvar root = globalThis;\n\nif (root.__PlasmicComponentRegistry == null) {\n  root.__PlasmicComponentRegistry = [];\n}\n\nfunction registerComponent(component, meta) {\n  root.__PlasmicComponentRegistry.push({\n    component: component,\n    meta: meta\n  });\n}\n\nexport { registerComponent as default };","import { PlasmicCanvasContext } from '@plasmicapp/host';\nimport registerComponent from '@plasmicapp/host/registerComponent';\nimport React from 'react';\nvar CSSClasses = {\n  container: \"plasmic-nav-container\",\n  menuButton: \"plasmic-nav-menu-button\",\n  menuItemsContainer: \"plasmic-nav-menu-items\",\n  menuItemsContainerOpen: \"plasmic-nav-menu-items-open\"\n};\nvar DEFAULT_GAP = 8;\nvar DEFAULT_RESPONSIVE_BREAKPOINT = 768;\n\nfunction NavigationBar(props) {\n  var forceOpenMenu = props.forceOpenMenu;\n\n  var _React$useState = React.useState(false),\n      isOpen = _React$useState[0],\n      setIsOpen = _React$useState[1];\n\n  var inEditor = React.useContext(PlasmicCanvasContext);\n  var shouldRenderMenu = React.useMemo(function () {\n    if (inEditor && forceOpenMenu) {\n      return true;\n    }\n\n    return isOpen;\n  }, [inEditor, forceOpenMenu, isOpen]);\n\n  var toggleMenu = function toggleMenu() {\n    return setIsOpen(function (value) {\n      return !value;\n    });\n  }; // Parsing the gap manually to ensure it's a valid number\n  // as we are using it in dangerouslySetInnerHTML.\n\n\n  var gap = safeParseNumber(props.itemsGap, DEFAULT_GAP);\n  var responsiveBreakpoint = safeParseNumber(props.responsiveBreakpoint, DEFAULT_RESPONSIVE_BREAKPOINT);\n  var cssStyles = React.useMemo(function () {\n    return minifyCss(\"\\n    /* Shared Styles */\\n    .\" + CSSClasses.container + \" {\\n      box-sizing: border-box;\\n    }\\n\\n    .\" + CSSClasses.menuItemsContainer + \" {\\n      box-sizing: border-box;\\n      display: flex;\\n    }\\n\\n    .\" + CSSClasses.menuItemsContainer + \" > * {\\n      flex: 0 0 auto;\\n    }\\n\\n    /* Desktop Styles */\\n    @media (min-width: \" + (responsiveBreakpoint + 1) + \"px) {\\n      .\" + CSSClasses.menuButton + \" {\\n        display: none;\\n      }\\n\\n      .\" + CSSClasses.menuItemsContainer + \" {\\n        flex-direction: row;\\n        align-items: center;\\n        width: auto;\\n      }\\n      .\" + CSSClasses.menuItemsContainer + \" > *:not(:first-child) {\\n        margin-inline-start: \" + gap + \"px;\\n      }\\n    }\\n\\n    /* Mobile Styles */\\n    @media (max-width: \" + responsiveBreakpoint + \"px) {\\n      .\" + CSSClasses.menuButton + \" {\\n        unset: all;\\n        -webkit-appearance: none;\\n        min-width: 40px;\\n        min-height: 40px;\\n        padding: 0;\\n        margin: 0;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        border: none;\\n        background: none;\\n        cursor: pointer;\\n      }\\n\\n      .\" + CSSClasses.menuItemsContainer + \":not(.\" + CSSClasses.menuItemsContainerOpen + \") {\\n        display: none;\\n      }\\n\\n      .\" + CSSClasses.menuItemsContainer + \" {\\n        margin-top: 10px;\\n        flex-direction: column;\\n        flex-shrink: 0;\\n        width: 100%;\\n      }\\n      .\" + CSSClasses.menuItemsContainer + \" > *:not(:first-child) {\\n        margin-top: \" + gap + \"px;\\n      }\\n    }\\n    \");\n  }, [gap, responsiveBreakpoint]);\n  return React.createElement(\"div\", {\n    className: CSSClasses.container + \" \" + props.className\n  }, React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: cssStyles\n    }\n  }), React.createElement(\"div\", null, props.brand), React.createElement(\"button\", {\n    className: CSSClasses.menuButton,\n    onClick: toggleMenu,\n    tabIndex: 0,\n    \"aria-expanded\": shouldRenderMenu\n  }, shouldRenderMenu ? props.closeButton : props.openButton), React.createElement(\"nav\", {\n    role: \"menu\",\n    className: (CSSClasses.menuItemsContainer + \" \" + (shouldRenderMenu ? CSSClasses.menuItemsContainerOpen : \"\")).trim()\n  }, props.menuItems));\n}\n\nfunction safeParseNumber(input, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = 0;\n  }\n\n  var parsedValue = parseInt(input, 10);\n  return isNaN(parsedValue) ? defaultValue : parsedValue;\n}\n\nfunction minifyCss(input) {\n  return input.replace(/\\s{2,}|\\n/g, \"\") //  Remove spaces\n  .replace(/\\/\\*[\\s\\S]*?\\*\\/|([^:]|^)\\/\\/.*$/g, \"\"); // Remove comments.\n}\n\nvar navigationBarComponentMeta = {\n  name: \"hostless-plasmic-navigation-bar\",\n  displayName: \"Navigation Bar\",\n  importName: \"NavigationBar\",\n  importPath: \"@plasmicpkgs/plasmic-nav\",\n  props: {\n    // Properties\n    forceOpenMenu: {\n      displayName: \"Force Open Menu\",\n      description: \"Use this option to open the menu during design time so you can easily customize the close button and menu items for small screens. This option is ignored when publishing the page.\",\n      type: \"boolean\"\n    },\n    itemsGap: {\n      displayName: \"Items Gap\",\n      description: \"The width of the space between menu items in pixels.\",\n      type: \"number\",\n      min: 0,\n      defaultValue: DEFAULT_GAP\n    },\n    responsiveBreakpoint: {\n      displayName: \"Small Screens Breakpoint\",\n      description: \"The maximum screen width used for showing the small screens version of the menu.\",\n      type: \"number\",\n      min: 0,\n      defaultValue: DEFAULT_RESPONSIVE_BREAKPOINT\n    },\n    // Slots\n    brand: {\n      type: \"slot\",\n      defaultValue: [{\n        type: \"hbox\",\n        tag: \"a\",\n        attrs: {\n          href: \"#\"\n        },\n        styles: {\n          padding: \"0px\"\n        },\n        children: {\n          type: \"img\",\n          src: \"https://static1.plasmic.app/nav-logo-placeholder.svg\",\n          styles: {\n            height: \"40px\"\n          }\n        }\n      }]\n    },\n    openButton: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"img\",\n        src: \"https://static1.plasmic.app/menu.svg\"\n      }\n    },\n    closeButton: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"img\",\n        src: \"https://static1.plasmic.app/close.svg\"\n      }\n    },\n    menuItems: {\n      type: \"slot\",\n      defaultValue: /*#__PURE__*/[\"Home\", \"About\", \"Contact\"].map(function (title) {\n        return {\n          type: \"text\",\n          tag: \"a\",\n          attrs: {\n            href: \"/\"\n          },\n          styles: {\n            width: \"auto\"\n          },\n          value: title\n        };\n      })\n    }\n  },\n  defaultStyles: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    padding: \"16px\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    marginBottom: \"20px\"\n  }\n};\n\nfunction registerNavigationBar(loader, customMetaProps) {\n  if (loader) {\n    loader.registerComponent(NavigationBar, customMetaProps != null ? customMetaProps : navigationBarComponentMeta);\n  } else {\n    registerComponent(NavigationBar, customMetaProps != null ? customMetaProps : navigationBarComponentMeta);\n  }\n}\n\nexport { NavigationBar, navigationBarComponentMeta, registerNavigationBar };","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd\n// Component: 1Xqtr1aGys\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport { NavigationBar } from \"@plasmicpkgs/plasmic-nav\" // plasmic-import: jGx9tiKJoex/codeComponent\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_hecto.module.css\" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss\nimport * as sty from \"./PlasmicHectoNav.module.css\" // plasmic-import: 1Xqtr1aGys/css\n\nexport const PlasmicHectoNav__VariantProps = new Array()\n\nexport const PlasmicHectoNav__ArgProps = new Array()\n\nconst __wrapUserFunction =\n  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn())\n\nconst __wrapUserPromise =\n  globalThis.__PlasmicWrapUserPromise ??\n  (async (loc, promise) => {\n    await promise\n  })\n\nfunction PlasmicHectoNav__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = {\n    ...args,\n    ...variants,\n  }\n\n  const currentUser = p.useCurrentUser?.() || {}\n  const [$queries, setDollarQueries] = React.useState({})\n  return (\n    <NavigationBar\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      brand={\n        <p.PlasmicLink\n          className={classNames(projectcss.all, projectcss.a, sty.link__dhYtV)}\n          component={Link}\n          href={\"#\"}\n          platform={\"gatsby\"}\n        >\n          <div\n            data-plasmic-name={\"text\"}\n            data-plasmic-override={overrides.text}\n            className={classNames(\n              projectcss.all,\n              projectcss.__wab_text,\n              sty.text\n            )}\n          >\n            <React.Fragment>\n              <React.Fragment>{\"hecto\"}</React.Fragment>\n              <span\n                className={\"plasmic_default__all plasmic_default__span\"}\n                style={{ color: \"#FF0000\" }}\n              >\n                {\".\"}\n              </span>\n            </React.Fragment>\n          </div>\n        </p.PlasmicLink>\n      }\n      className={classNames(\"__wab_instance\", sty.root)}\n      closeButton={\n        <p.PlasmicImg\n          alt={\"\"}\n          className={classNames(sty.img___4Cdh)}\n          displayHeight={\"auto\"}\n          displayMaxHeight={\"none\"}\n          displayMaxWidth={\"none\"}\n          displayMinHeight={\"0\"}\n          displayMinWidth={\"0\"}\n          displayWidth={\"auto\"}\n          src={\"https://static1.plasmic.app/close.svg\"}\n        />\n      }\n      itemsGap={8}\n      menuItems={\n        <React.Fragment>\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__gyu5T\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/newsletter-creators\"}\n            platform={\"gatsby\"}\n            title={\"Creators\"}\n          >\n            {\"Creators\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__sbdo8\n            )}\n            component={Link}\n            href={`/resources`}\n            platform={\"gatsby\"}\n          >\n            {\"Resources\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__esyf1\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/search\"}\n            platform={\"gatsby\"}\n          >\n            {\"Search\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            data-plasmic-name={\"pricing\"}\n            data-plasmic-override={overrides.pricing}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.pricing\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/pricing\"}\n            platform={\"gatsby\"}\n          >\n            {\"Pricing\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__ywDm\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/login\"}\n            platform={\"gatsby\"}\n          >\n            {\"Sign In\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            data-plasmic-name={\"signUp\"}\n            data-plasmic-override={overrides.signUp}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.signUp\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/login\"}\n            platform={\"gatsby\"}\n          >\n            <React.Fragment>\n              <span\n                className={\"plasmic_default__all plasmic_default__span\"}\n                style={{ fontWeight: 700, color: \"#FFFFFF\" }}\n              >\n                {\"Sign Up\"}\n              </span>\n            </React.Fragment>\n          </p.PlasmicLink>\n        </React.Fragment>\n      }\n      openButton={\n        <p.PlasmicImg\n          alt={\"\"}\n          className={classNames(sty.img__jPdEs)}\n          displayHeight={\"auto\"}\n          displayMaxHeight={\"none\"}\n          displayMaxWidth={\"none\"}\n          displayMinHeight={\"0\"}\n          displayMinWidth={\"0\"}\n          displayWidth={\"auto\"}\n          src={\"https://static1.plasmic.app/menu.svg\"}\n        />\n      }\n      responsiveBreakpoint={768}\n    />\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"text\", \"pricing\", \"signUp\"],\n  text: [\"text\"],\n  pricing: [\"pricing\"],\n  signUp: [\"signUp\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHectoNav__ArgProps,\n          internalVariantPropNames: PlasmicHectoNav__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicHectoNav__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHectoNav\"\n  } else {\n    func.displayName = `PlasmicHectoNav.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHectoNav = Object.assign(\n  // Top-level PlasmicHectoNav renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    text: makeNodeComponent(\"text\"),\n    pricing: makeNodeComponent(\"pricing\"),\n    signUp: makeNodeComponent(\"signUp\"),\n    // Metadata about props expected for PlasmicHectoNav\n    internalVariantProps: PlasmicHectoNav__VariantProps,\n    internalArgProps: PlasmicHectoNav__ArgProps,\n  }\n)\n\nexport default PlasmicHectoNav\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var img___4Cdh = \"PlasmicHectoNav-module--img___4Cdh--Ot8Ac\";\nexport var img__jPdEs = \"PlasmicHectoNav-module--img__jPdEs--mhSXj\";\nexport var link__dhYtV = \"PlasmicHectoNav-module--link__dhYtV--W7RCG\";\nexport var link__esyf1 = \"PlasmicHectoNav-module--link__esyf1--6r+vD\";\nexport var link__gyu5T = \"PlasmicHectoNav-module--link__gyu5T--oVxVU\";\nexport var link__sbdo8 = \"PlasmicHectoNav-module--link__sbdo8--a-am0\";\nexport var link__ywDm = \"PlasmicHectoNav-module--link__ywDm--21xcu\";\nexport var pricing = \"PlasmicHectoNav-module--pricing--3ZE5q\";\nexport var root = \"PlasmicHectoNav-module--root--wHZ8F\";\nexport var signUp = \"PlasmicHectoNav-module--signUp--Yv3Wa\";\nexport var text = \"PlasmicHectoNav-module--text--1kpDI\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHectoNav } from \"./plasmic/hecto/PlasmicHectoNav\"\n\nfunction HectoNav(props) {\n  // Use PlasmicHectoNav to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHectoNav are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HectoNavProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHectoNav {...props} />\n}\n\nexport default HectoNav\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd\n// Component: skdcktnuML\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport HectoNav from \"../../HectoNav\" // plasmic-import: 1Xqtr1aGys/component\nimport Button from \"../../Button\" // plasmic-import: 16yj8MRmRBT/component\nimport { useScreenVariants as useScreenVariantskILw5UiAaS1UF } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: kILw5uiAaS1uF/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_hecto.module.css\" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss\nimport * as sty from \"./PlasmicIndex.module.css\" // plasmic-import: skdcktnuML/css\nimport ArrowRightsvgIcon from \"./icons/PlasmicIcon__ArrowRightsvg\" // plasmic-import: g1j_XxrLjbNK/icon\nimport image14YhFYwAwD from \"./images/image14.png\" // plasmic-import: YhFYw-awD/picture\nimport airTravelerClubIconpngOXhQeqkJr from \"./images/airTravelerClubIconpng.png\" // plasmic-import: oXHQeqkJR/picture\nimport voltFmpng65KNczT0E from \"./images/voltFmpng.png\" // plasmic-import: 65kNczT0e/picture\nimport growthmentor2PngDbFq2ZnDc from \"./images/growthmentor2Png.png\" // plasmic-import: DBFq2ZNDc/picture\nimport image13Oy5YWPkj7 from \"./images/image13.png\" // plasmic-import: Oy5yWPkj7/picture\nimport logoUsdsvgOdeblsO1Yj from \"./images/logoUsdsvg.svg\" // plasmic-import: odeblsO1Yj/picture\nimport clipboardOutlinesvg5UIvmRlOr from \"./images/clipboardOutlinesvg.svg\" // plasmic-import: 5UIvmRLOr/picture\nimport searchsvgIWxwm9VuZ from \"./images/searchsvg.svg\" // plasmic-import: IWxwm9VuZ/picture\nimport peopleOutlinesvgHyxjcYqpG7 from \"./images/peopleOutlinesvg.svg\" // plasmic-import: hyxjcYqpG7/picture\n\nexport const PlasmicIndex__VariantProps = new Array()\n\nexport const PlasmicIndex__ArgProps = new Array()\n\nconst __wrapUserFunction =\n  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn())\n\nconst __wrapUserPromise =\n  globalThis.__PlasmicWrapUserPromise ??\n  (async (loc, promise) => {\n    await promise\n  })\n\nexport function Head() {\n  return (\n    <>\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <title key=\"title\">{PlasmicIndex.pageMetadata.title}</title>\n      <meta\n        key=\"og:title\"\n        property=\"og:title\"\n        content={PlasmicIndex.pageMetadata.title}\n      />\n\n      <meta\n        key=\"twitter:title\"\n        name=\"twitter:title\"\n        content={PlasmicIndex.pageMetadata.title}\n      />\n    </>\n  )\n}\n\nfunction PlasmicIndex__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = {\n    ...args,\n    ...variants,\n  }\n\n  const currentUser = p.useCurrentUser?.() || {}\n  const [$queries, setDollarQueries] = React.useState({})\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantskILw5UiAaS1UF(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        {true ? (\n          <p.Stack\n            as={\"div\"}\n            data-plasmic-name={\"root\"}\n            data-plasmic-override={overrides.root}\n            data-plasmic-root={true}\n            data-plasmic-for-node={forNode}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.root_reset,\n              projectcss.plasmic_default_styles,\n              projectcss.plasmic_mixins,\n              projectcss.plasmic_tokens,\n              sty.root\n            )}\n          >\n            <div className={classNames(projectcss.all, sty.freeBox__uVixW)}>\n              <div className={classNames(projectcss.all, sty.freeBox___6G6Bl)}>\n                <HectoNav\n                  data-plasmic-name={\"hectoNav\"}\n                  data-plasmic-override={overrides.hectoNav}\n                  className={classNames(\"__wab_instance\", sty.hectoNav)}\n                />\n\n                <div className={classNames(projectcss.all, sty.freeBox__jBkIg)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__fclkg)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__i8Qbf)}\n                    >\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__c8Btc\n                        )}\n                      >\n                        <h1\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h1,\n                            projectcss.__wab_text,\n                            sty.h1__fiPqK\n                          )}\n                        >\n                          <React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0506CF\" }}\n                            >\n                              {\"Reach your target market,\"}\n                            </span>\n                            <React.Fragment>{\"\\n\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#FF4A03\" }}\n                            >\n                              {\"through trusted\"}\n                            </span>\n                            <React.Fragment>{\"\\n\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#FF4A03\" }}\n                            >\n                              {\"newsletters.\"}\n                            </span>\n                          </React.Fragment>\n                        </h1>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__sfwMq\n                          )}\n                        >\n                          <React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#AFAFB8\" }}\n                            >\n                              {\n                                \"Hecto is a platform to buy, sell and manage newsletter ads and sponsorships.\"\n                              }\n                            </span>\n                          </React.Fragment>\n                        </div>\n                      </p.Stack>\n\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__altd\n                        )}\n                      >\n                        <Button\n                          className={classNames(\n                            \"__wab_instance\",\n                            sty.button___7357C\n                          )}\n                          color={\"secondary\"}\n                          endIcon={\n                            <ArrowRightsvgIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg___1Q4Jn\n                              )}\n                              role={\"img\"}\n                            />\n                          }\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text__gw0T9\n                            )}\n                          >\n                            <React.Fragment>\n                              <span\n                                className={\n                                  \"plasmic_default__all plasmic_default__span\"\n                                }\n                                style={{ color: \"#FF0000\" }}\n                              >\n                                {\"Buy Ads\"}\n                              </span>\n                            </React.Fragment>\n                          </div>\n                        </Button>\n\n                        <Button\n                          className={classNames(\n                            \"__wab_instance\",\n                            sty.button___9XUft\n                          )}\n                          endIcon={\n                            <ArrowRightsvgIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__kftcD\n                              )}\n                              role={\"img\"}\n                            />\n                          }\n                          link={\n                            hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                              ? \"https://app.hecto.io/search\"\n                              : \"https://hecto.io/creators\"\n                          }\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text__mvf70\n                            )}\n                          >\n                            {\"Sell Ads\"}\n                          </div>\n                        </Button>\n                      </p.Stack>\n                    </p.Stack>\n                  </p.Stack>\n                </div>\n              </div>\n            </div>\n\n            {true ? (\n              <section\n                data-plasmic-name={\"features\"}\n                data-plasmic-override={overrides.features}\n                className={classNames(projectcss.all, sty.features)}\n              >\n                <div className={classNames(projectcss.all, sty.column__qyEYn)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox___8Pphq)}\n                  >\n                    <h2\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h2,\n                        projectcss.__wab_text,\n                        sty.h2__mbr1C\n                      )}\n                    >\n                      {\"Newsletters \\ntrusted by\"}\n                    </h2>\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__w0PtE)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"http://s3.amazonaws.com/appforest_uf/f1612212968629x588639892014067800/hootsuite.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img___3HW7O)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1599861530959x149048109187747800/Logo-with-clearspace.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__tsebv)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1612213380220x409371329433475100/email-octopus-logo.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__syyff)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1599862025614x593508823287736800/Monday.com-Logo.wine.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__dpwD6)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1647471882824x158210612790481900/user_logo.svg\"\n                      }\n                    />\n                  </p.Stack>\n\n                  <div\n                    data-plasmic-name={\"container4\"}\n                    data-plasmic-override={overrides.container4}\n                    className={classNames(projectcss.all, sty.container4)}\n                  >\n                    <div\n                      data-plasmic-name={\"outerRow2\"}\n                      data-plasmic-override={overrides.outerRow2}\n                      className={classNames(projectcss.all, sty.outerRow2)}\n                    >\n                      <div\n                        data-plasmic-name={\"row2\"}\n                        data-plasmic-override={overrides.row2}\n                        className={classNames(projectcss.all, sty.row2)}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__v2CxK\n                          )}\n                        >\n                          {true ? (\n                            <p.Stack\n                              as={\"div\"}\n                              hasGap={true}\n                              className={classNames(\n                                projectcss.all,\n                                sty.freeBox__eL2WR\n                              )}\n                            >\n                              <h1\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h1,\n                                  projectcss.__wab_text,\n                                  sty.h1__x2Sbm\n                                )}\n                              >\n                                <React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\"Generate leads\"}\n                                  </span>\n                                  <React.Fragment>{\"\\n\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\"from \"}\n                                  </span>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF4A03\" }}\n                                  >\n                                    {\"engaged \"}\n                                  </span>\n                                  <React.Fragment>{\"\\n\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF4A03\" }}\n                                  >\n                                    {\"email audiences\"}\n                                  </span>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\" \"}\n                                  </span>\n                                </React.Fragment>\n                              </h1>\n                            </p.Stack>\n                          ) : null}\n                        </div>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__h1Pj\n                          )}\n                        >\n                          <p.PlasmicImg\n                            alt={\"\"}\n                            className={classNames(sty.img__vUfqP)}\n                            displayHeight={\"auto\"}\n                            displayMaxHeight={\"none\"}\n                            displayMaxWidth={\"100%\"}\n                            displayMinHeight={\"0\"}\n                            displayMinWidth={\"0\"}\n                            displayWidth={\"auto\"}\n                            loading={\"lazy\"}\n                            src={{\n                              src: image14YhFYwAwD,\n                              fullWidth: 844,\n                              fullHeight: 521,\n                              aspectRatio: undefined,\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"container5\"}\n                    data-plasmic-override={overrides.container5}\n                    className={classNames(projectcss.all, sty.container5)}\n                  >\n                    <div\n                      data-plasmic-name={\"outerRow3\"}\n                      data-plasmic-override={overrides.outerRow3}\n                      className={classNames(projectcss.all, sty.outerRow3)}\n                    >\n                      <div\n                        data-plasmic-name={\"row4\"}\n                        data-plasmic-override={overrides.row4}\n                        className={classNames(projectcss.all, sty.row4)}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__laPwv\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__bzOa2\n                            )}\n                          >\n                            <p.PlasmicImg\n                              alt={\"\"}\n                              className={classNames(sty.img___1LxKm)}\n                              displayHeight={\"auto\"}\n                              displayMaxHeight={\"none\"}\n                              displayMaxWidth={\"100%\"}\n                              displayMinHeight={\"0\"}\n                              displayMinWidth={\"0\"}\n                              displayWidth={\"auto\"}\n                              loading={\"lazy\"}\n                              src={{\n                                src: airTravelerClubIconpngOXhQeqkJr,\n                                fullWidth: 201,\n                                fullHeight: 202,\n                                aspectRatio: undefined,\n                              }}\n                            />\n\n                            <p.PlasmicImg\n                              alt={\"\"}\n                              className={classNames(sty.img__mjg0Y)}\n                              displayHeight={\"auto\"}\n                              displayMaxHeight={\"none\"}\n                              displayMaxWidth={\"100%\"}\n                              displayMinHeight={\"0\"}\n                              displayMinWidth={\"0\"}\n                              displayWidth={\"auto\"}\n                              loading={\"lazy\"}\n                              src={{\n                                src: voltFmpng65KNczT0E,\n                                fullWidth: 199,\n                                fullHeight: 205,\n                                aspectRatio: undefined,\n                              }}\n                            />\n\n                            <p.PlasmicImg\n                              alt={\"\"}\n                              className={classNames(sty.img__ucynL)}\n                              displayHeight={\"auto\"}\n                              displayMaxHeight={\"none\"}\n                              displayMaxWidth={\"100%\"}\n                              displayMinHeight={\"0\"}\n                              displayMinWidth={\"0\"}\n                              displayWidth={\"auto\"}\n                              loading={\"lazy\"}\n                              src={{\n                                src: growthmentor2PngDbFq2ZnDc,\n                                fullWidth: 192,\n                                fullHeight: 195,\n                                aspectRatio: undefined,\n                              }}\n                            />\n                          </div>\n                        </div>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__vxj6M\n                          )}\n                        >\n                          {true ? (\n                            <p.Stack\n                              as={\"div\"}\n                              hasGap={true}\n                              className={classNames(\n                                projectcss.all,\n                                sty.freeBox__e5Xc\n                              )}\n                            >\n                              <h1\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h1,\n                                  projectcss.__wab_text,\n                                  sty.h1__gdjgC\n                                )}\n                              >\n                                <React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\"Build your campaign \"}\n                                  </span>\n                                  <React.Fragment>{\"\\n\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF4A03\" }}\n                                  >\n                                    {\"across multiple newsletters\"}\n                                  </span>\n                                </React.Fragment>\n                              </h1>\n                            </p.Stack>\n                          ) : null}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : null}\n\n            <section className={classNames(projectcss.all, sty.columns__aAdB)}>\n              <div className={classNames(projectcss.all, sty.column__qkGat)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox___1Knur)}\n                  >\n                    <h1\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h1,\n                        projectcss.__wab_text,\n                        sty.h1__cD1\n                      )}\n                    >\n                      <React.Fragment>\n                        <span\n                          className={\n                            \"plasmic_default__all plasmic_default__span\"\n                          }\n                          style={{ color: \"#0506CF\" }}\n                        >\n                          {\"Why use Hecto\"}\n                        </span>\n                        <React.Fragment>{\"\"}</React.Fragment>\n                        <span\n                          className={\n                            \"plasmic_default__all plasmic_default__span\"\n                          }\n                          style={{ color: \"#FF4A03\" }}\n                        >\n                          {\"?\"}\n                        </span>\n                      </React.Fragment>\n                    </h1>\n                  </p.Stack>\n                ) : null}\n\n                <div className={classNames(projectcss.all, sty.columns__buZRg)}>\n                  <div\n                    data-plasmic-name={\"reasonBox\"}\n                    data-plasmic-override={overrides.reasonBox}\n                    className={classNames(projectcss.all, sty.reasonBox)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__caV4)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={\"https://www.svgrepo.com/show/15349/chat.svg\"}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__j9ONv)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__d6Qjy\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__mvOuv\n                          )}\n                        >\n                          {\"Protected privacy\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__gdJ7J\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox2\"}\n                    data-plasmic-override={overrides.reasonBox2}\n                    className={classNames(projectcss.all, sty.reasonBox2)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__u55E7)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: image13Oy5YWPkj7,\n                        fullWidth: 452,\n                        fullHeight: 452,\n                        aspectRatio: undefined,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        sty.columns___9J1Pw\n                      )}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__p9Pfd\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4___2Rat1\n                          )}\n                        >\n                          {\"Upfront Prices\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__eW3Yu\n                          )}\n                        >\n                          {\n                            \"No need to request pricing information. See prices of ad packages [i]before [/i] you contact a newsletter. \"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox3\"}\n                    data-plasmic-override={overrides.reasonBox3}\n                    className={classNames(projectcss.all, sty.reasonBox3)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__klXBq)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: logoUsdsvgOdeblsO1Yj,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        sty.columns___38Dr1\n                      )}\n                    >\n                      <div\n                        className={classNames(projectcss.all, sty.column__bOOh)}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__v3Oq\n                          )}\n                        >\n                          {\"Pay Directly\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__npDuk\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div\n                  className={classNames(projectcss.all, sty.columns___1FB0A)}\n                >\n                  <div\n                    data-plasmic-name={\"reasonBox4\"}\n                    data-plasmic-override={overrides.reasonBox4}\n                    className={classNames(projectcss.all, sty.reasonBox4)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__mT2As)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: clipboardOutlinesvg5UIvmRlOr,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__wtUlN)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__tKgeq\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__fsNNw\n                          )}\n                        >\n                          {\"Fast Submission\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__poh5H\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox5\"}\n                    data-plasmic-override={overrides.reasonBox5}\n                    className={classNames(projectcss.all, sty.reasonBox5)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__iEiWy)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: searchsvgIWxwm9VuZ,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__oKt1Y)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__oh5P2\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__goy7Q\n                          )}\n                        >\n                          {\"Quality Control\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__tqkXc\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox6\"}\n                    data-plasmic-override={overrides.reasonBox6}\n                    className={classNames(projectcss.all, sty.reasonBox6)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img___9Tur1)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: peopleOutlinesvgHyxjcYqpG7,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__w0Unk)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__kicg9\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4___5QykZ\n                          )}\n                        >\n                          {\"Super Engagement\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__kDDcV\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            {true ? (\n              <section\n                className={classNames(projectcss.all, sty.columns__bPqyr)}\n              >\n                <div\n                  data-plasmic-name={\"outer\"}\n                  data-plasmic-override={overrides.outer}\n                  className={classNames(projectcss.all, sty.outer)}\n                >\n                  <div\n                    data-plasmic-name={\"container\"}\n                    data-plasmic-override={overrides.container}\n                    className={classNames(projectcss.all, sty.container)}\n                  >\n                    <div\n                      className={classNames(projectcss.all, sty.column__cNjJ)}\n                    >\n                      <h2\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.h2,\n                          projectcss.__wab_text,\n                          sty.h2___7O0Js\n                        )}\n                      >\n                        {\"To Make Requests For The\\nFurther Information\"}\n                      </h2>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__j7Ta\n                        )}\n                      >\n                        {\n                          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                        }\n                      </div>\n                    </div>\n\n                    <div\n                      className={classNames(projectcss.all, sty.column__sd22F)}\n                    >\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__fVmKq\n                        )}\n                        color={\"blue\"}\n                        link={\"#\"}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__hGnI\n                          )}\n                        >\n                          {\"Join With Now\"}\n                        </div>\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : null}\n\n            <div className={classNames(projectcss.all, sty.freeBox__lgMIl)}>\n              <div className={classNames(projectcss.all, sty.columns__oXTiv)}>\n                <div className={classNames(projectcss.all, sty.column__bVaiL)}>\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__nJruG\n                    )}\n                  >\n                    <React.Fragment>\n                      <span\n                        className={\"plasmic_default__all plasmic_default__span\"}\n                        style={{ color: \"#000000\" }}\n                      >\n                        {\"Ready to start your campaign?\"}\n                      </span>\n                    </React.Fragment>\n                  </h2>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__whM3Q\n                    )}\n                  >\n                    <React.Fragment>\n                      <span\n                        className={\"plasmic_default__all plasmic_default__span\"}\n                        style={{ color: \"#000000\" }}\n                      >\n                        {\"Find the perfect newsletter for your brand\"}\n                      </span>\n                    </React.Fragment>\n                  </div>\n\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button__eBifN)}\n                    color={\"blue\"}\n                    endIcon={\n                      <ArrowRightsvgIcon\n                        className={classNames(projectcss.all, sty.svg__vxIk)}\n                        role={\"img\"}\n                      />\n                    }\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__kxrj6\n                      )}\n                    >\n                      {\"Search Newsletters\"}\n                    </div>\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <div className={classNames(projectcss.all, sty.freeBox___3YrSo)}>\n              <div\n                data-plasmic-name={\"footerBottom\"}\n                data-plasmic-override={overrides.footerBottom}\n                className={classNames(projectcss.all, sty.footerBottom)}\n              >\n                <div className={classNames(projectcss.all, sty.freeBox__eUaht)}>\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__egxLh\n                    )}\n                  >\n                    {\"© Hecto. All rights reserved\"}\n                  </div>\n\n                  <p.PlasmicLink\n                    data-plasmic-name={\"link\"}\n                    data-plasmic-override={overrides.link}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__wtF\n                      )}\n                    >\n                      {\"Privacy\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__oYrjZ\n                      )}\n                    >\n                      {\"Terms and Conditions\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___7A1KJ\n                      )}\n                    >\n                      {\"Contact Us\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__c4XBg\n                      )}\n                    >\n                      {\"Blog\"}\n                    </div>\n                  </p.PlasmicLink>\n                </div>\n              </div>\n            </div>\n          </p.Stack>\n        ) : null}\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"hectoNav\",\n    \"features\",\n    \"container4\",\n    \"outerRow2\",\n    \"row2\",\n    \"container5\",\n    \"outerRow3\",\n    \"row4\",\n    \"reasonBox\",\n    \"reasonBox2\",\n    \"reasonBox3\",\n    \"reasonBox4\",\n    \"reasonBox5\",\n    \"reasonBox6\",\n    \"outer\",\n    \"container\",\n    \"footerBottom\",\n    \"link\",\n  ],\n\n  hectoNav: [\"hectoNav\"],\n  features: [\n    \"features\",\n    \"container4\",\n    \"outerRow2\",\n    \"row2\",\n    \"container5\",\n    \"outerRow3\",\n    \"row4\",\n  ],\n\n  container4: [\"container4\", \"outerRow2\", \"row2\"],\n  outerRow2: [\"outerRow2\", \"row2\"],\n  row2: [\"row2\"],\n  container5: [\"container5\", \"outerRow3\", \"row4\"],\n  outerRow3: [\"outerRow3\", \"row4\"],\n  row4: [\"row4\"],\n  reasonBox: [\"reasonBox\"],\n  reasonBox2: [\"reasonBox2\"],\n  reasonBox3: [\"reasonBox3\"],\n  reasonBox4: [\"reasonBox4\"],\n  reasonBox5: [\"reasonBox5\"],\n  reasonBox6: [\"reasonBox6\"],\n  outer: [\"outer\", \"container\"],\n  container: [\"container\"],\n  footerBottom: [\"footerBottom\", \"link\"],\n  link: [\"link\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicIndex__ArgProps,\n          internalVariantPropNames: PlasmicIndex__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicIndex__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicIndex\"\n  } else {\n    func.displayName = `PlasmicIndex.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicIndex = Object.assign(\n  // Top-level PlasmicIndex renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    hectoNav: makeNodeComponent(\"hectoNav\"),\n    features: makeNodeComponent(\"features\"),\n    container4: makeNodeComponent(\"container4\"),\n    outerRow2: makeNodeComponent(\"outerRow2\"),\n    row2: makeNodeComponent(\"row2\"),\n    container5: makeNodeComponent(\"container5\"),\n    outerRow3: makeNodeComponent(\"outerRow3\"),\n    row4: makeNodeComponent(\"row4\"),\n    reasonBox: makeNodeComponent(\"reasonBox\"),\n    reasonBox2: makeNodeComponent(\"reasonBox2\"),\n    reasonBox3: makeNodeComponent(\"reasonBox3\"),\n    reasonBox4: makeNodeComponent(\"reasonBox4\"),\n    reasonBox5: makeNodeComponent(\"reasonBox5\"),\n    reasonBox6: makeNodeComponent(\"reasonBox6\"),\n    outer: makeNodeComponent(\"outer\"),\n    container: makeNodeComponent(\"container\"),\n    footerBottom: makeNodeComponent(\"footerBottom\"),\n    link: makeNodeComponent(\"link\"),\n    // Metadata about props expected for PlasmicIndex\n    internalVariantProps: PlasmicIndex__VariantProps,\n    internalArgProps: PlasmicIndex__ArgProps,\n    // Page metadata\n    pageMetadata: {\n      title: \"Hecto | Newsletter advertising, simplified\",\n      description: \"\",\n      ogImageSrc: \"\",\n      canonical: \"\",\n    },\n  }\n)\n\nexport default PlasmicIndex\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button___7357C = \"PlasmicIndex-module--button___7357C--q9tSb\";\nexport var button___9XUft = \"PlasmicIndex-module--button___9XUft--CfhON\";\nexport var button__eBifN = \"PlasmicIndex-module--button__eBifN--bU8lD\";\nexport var button__fVmKq = \"PlasmicIndex-module--button__fVmKq--wMzEV\";\nexport var column__bOOh = \"PlasmicIndex-module--column__bOOh--ZDvfL\";\nexport var column__bVaiL = \"PlasmicIndex-module--column__bVaiL--k5Ar9\";\nexport var column__cNjJ = \"PlasmicIndex-module--column__cNjJ--xZmNj\";\nexport var column__d6Qjy = \"PlasmicIndex-module--column__d6Qjy--kbUE9\";\nexport var column__h1Pj = \"PlasmicIndex-module--column__h1Pj--WPBqG\";\nexport var column__kicg9 = \"PlasmicIndex-module--column__kicg9--nsfBQ\";\nexport var column__laPwv = \"PlasmicIndex-module--column__laPwv--DirGD\";\nexport var column__oh5P2 = \"PlasmicIndex-module--column__oh5P2--aMLzp\";\nexport var column__p9Pfd = \"PlasmicIndex-module--column__p9Pfd--TlxDL\";\nexport var column__qkGat = \"PlasmicIndex-module--column__qkGat--YQhRP\";\nexport var column__qyEYn = \"PlasmicIndex-module--column__qyEYn--V4Nze\";\nexport var column__sd22F = \"PlasmicIndex-module--column__sd22F--qAPuD\";\nexport var column__tKgeq = \"PlasmicIndex-module--column__tKgeq--EGknI\";\nexport var column__v2CxK = \"PlasmicIndex-module--column__v2CxK--aJ0Sf\";\nexport var column__vxj6M = \"PlasmicIndex-module--column__vxj6M--fno8t\";\nexport var columns___1FB0A = \"PlasmicIndex-module--columns___1FB0A--SnaEk\";\nexport var columns___38Dr1 = \"PlasmicIndex-module--columns___38Dr1--Gv9eG\";\nexport var columns___9J1Pw = \"PlasmicIndex-module--columns___9J1Pw--nUk2T\";\nexport var columns__aAdB = \"PlasmicIndex-module--columns__aAdB--+i5QX\";\nexport var columns__bPqyr = \"PlasmicIndex-module--columns__bPqyr--xiCLq\";\nexport var columns__buZRg = \"PlasmicIndex-module--columns__buZRg--5IpsN\";\nexport var columns__j9ONv = \"PlasmicIndex-module--columns__j9ONv--r7ijq\";\nexport var columns__oKt1Y = \"PlasmicIndex-module--columns__oKt1Y--l5Fx1\";\nexport var columns__oXTiv = \"PlasmicIndex-module--columns__oXTiv--gcOMT\";\nexport var columns__w0Unk = \"PlasmicIndex-module--columns__w0Unk--LuriK\";\nexport var columns__wtUlN = \"PlasmicIndex-module--columns__wtUlN--IkdvV\";\nexport var container = \"PlasmicIndex-module--container--1LSbb\";\nexport var container4 = \"PlasmicIndex-module--container4--1odfo\";\nexport var container5 = \"PlasmicIndex-module--container5--FYlYK\";\nexport var features = \"PlasmicIndex-module--features--DiS6W\";\nexport var footerBottom = \"PlasmicIndex-module--footerBottom--xSbXJ\";\nexport var freeBox___1Knur = \"PlasmicIndex-module--freeBox___1Knur--+I2ru\";\nexport var freeBox___3YrSo = \"PlasmicIndex-module--freeBox___3YrSo--KFmeT\";\nexport var freeBox___6G6Bl = \"PlasmicIndex-module--freeBox___6G6Bl--iGVYH\";\nexport var freeBox___8Pphq = \"PlasmicIndex-module--freeBox___8Pphq--2qt4s\";\nexport var freeBox__altd = \"PlasmicIndex-module--freeBox__altd--miAS8\";\nexport var freeBox__bzOa2 = \"PlasmicIndex-module--freeBox__bzOa2--1TVIi\";\nexport var freeBox__c8Btc = \"PlasmicIndex-module--freeBox__c8Btc--zQCI6\";\nexport var freeBox__e5Xc = \"PlasmicIndex-module--freeBox__e5Xc--b2Jgf\";\nexport var freeBox__eL2WR = \"PlasmicIndex-module--freeBox__eL2WR--9MW3f\";\nexport var freeBox__eUaht = \"PlasmicIndex-module--freeBox__eUaht--CF5C3\";\nexport var freeBox__fclkg = \"PlasmicIndex-module--freeBox__fclkg--0kwVD\";\nexport var freeBox__i8Qbf = \"PlasmicIndex-module--freeBox__i8Qbf--oZ6na\";\nexport var freeBox__jBkIg = \"PlasmicIndex-module--freeBox__jBkIg--e9BLD\";\nexport var freeBox__lgMIl = \"PlasmicIndex-module--freeBox__lgMIl---wgcf\";\nexport var freeBox__uVixW = \"PlasmicIndex-module--freeBox__uVixW--HVpEF\";\nexport var h1__cD1 = \"PlasmicIndex-module--h1__cD1--VvwNJ\";\nexport var h1__fiPqK = \"PlasmicIndex-module--h1__fiPqK--Kym8d\";\nexport var h1__gdjgC = \"PlasmicIndex-module--h1__gdjgC--ntiV7\";\nexport var h1__x2Sbm = \"PlasmicIndex-module--h1__x2Sbm--736x7\";\nexport var h2___7O0Js = \"PlasmicIndex-module--h2___7O0Js--7cnuR\";\nexport var h2__mbr1C = \"PlasmicIndex-module--h2__mbr1C--kWpEY\";\nexport var h2__nJruG = \"PlasmicIndex-module--h2__nJruG--+L-WC\";\nexport var h4___2Rat1 = \"PlasmicIndex-module--h4___2Rat1--DnFfc\";\nexport var h4___5QykZ = \"PlasmicIndex-module--h4___5QykZ--5bKQv\";\nexport var h4__fsNNw = \"PlasmicIndex-module--h4__fsNNw--5Lv2s\";\nexport var h4__goy7Q = \"PlasmicIndex-module--h4__goy7Q--qUn9K\";\nexport var h4__mvOuv = \"PlasmicIndex-module--h4__mvOuv--doLy9\";\nexport var h4__v3Oq = \"PlasmicIndex-module--h4__v3Oq--k+efA\";\nexport var hectoNav = \"PlasmicIndex-module--hectoNav--lNOKv\";\nexport var img___1LxKm = \"PlasmicIndex-module--img___1LxKm--DTM3t\";\nexport var img___3HW7O = \"PlasmicIndex-module--img___3HW7O--5oW3K\";\nexport var img___9Tur1 = \"PlasmicIndex-module--img___9Tur1--eaB5E\";\nexport var img__caV4 = \"PlasmicIndex-module--img__caV4--hMvy4\";\nexport var img__dpwD6 = \"PlasmicIndex-module--img__dpwD6--FIrva\";\nexport var img__iEiWy = \"PlasmicIndex-module--img__iEiWy--Q7zfJ\";\nexport var img__klXBq = \"PlasmicIndex-module--img__klXBq--ttbc5\";\nexport var img__mT2As = \"PlasmicIndex-module--img__mT2As--jkoCh\";\nexport var img__mjg0Y = \"PlasmicIndex-module--img__mjg0Y---gwGh\";\nexport var img__syyff = \"PlasmicIndex-module--img__syyff--EBl57\";\nexport var img__tsebv = \"PlasmicIndex-module--img__tsebv---D4ZI\";\nexport var img__u55E7 = \"PlasmicIndex-module--img__u55E7--02ou9\";\nexport var img__ucynL = \"PlasmicIndex-module--img__ucynL--WdDXg\";\nexport var img__vUfqP = \"PlasmicIndex-module--img__vUfqP--G2ZYj\";\nexport var img__w0PtE = \"PlasmicIndex-module--img__w0PtE--s1fC8\";\nexport var link = \"PlasmicIndex-module--link--0qXbM\";\nexport var outer = \"PlasmicIndex-module--outer--19ckG\";\nexport var outerRow2 = \"PlasmicIndex-module--outerRow2--0um57\";\nexport var outerRow3 = \"PlasmicIndex-module--outerRow3--k4VZT\";\nexport var reasonBox = \"PlasmicIndex-module--reasonBox--s0zvm\";\nexport var reasonBox2 = \"PlasmicIndex-module--reasonBox2--gm3i3\";\nexport var reasonBox3 = \"PlasmicIndex-module--reasonBox3--kB207\";\nexport var reasonBox4 = \"PlasmicIndex-module--reasonBox4--8HCf0\";\nexport var reasonBox5 = \"PlasmicIndex-module--reasonBox5--8g3cZ\";\nexport var reasonBox6 = \"PlasmicIndex-module--reasonBox6--b7-9M\";\nexport var root = \"PlasmicIndex-module--root--hNW7H\";\nexport var row2 = \"PlasmicIndex-module--row2--l+HMB\";\nexport var row4 = \"PlasmicIndex-module--row4--nKUNs\";\nexport var svg___1Q4Jn = \"PlasmicIndex-module--svg___1Q4Jn--Dq0hM\";\nexport var svg__kftcD = \"PlasmicIndex-module--svg__kftcD--29cAQ\";\nexport var svg__pXg = \"PlasmicIndex-module--svg__pXg---ehMJ\";\nexport var svg__vxIk = \"PlasmicIndex-module--svg__vxIk--dwv+f\";\nexport var text___7A1KJ = \"PlasmicIndex-module--text___7A1KJ--fpm3i\";\nexport var text__c4XBg = \"PlasmicIndex-module--text__c4XBg--U4rNw\";\nexport var text__eW3Yu = \"PlasmicIndex-module--text__eW3Yu--cqfcj\";\nexport var text__egxLh = \"PlasmicIndex-module--text__egxLh--VBt5a\";\nexport var text__gdJ7J = \"PlasmicIndex-module--text__gdJ7J--FHVx6\";\nexport var text__gw0T9 = \"PlasmicIndex-module--text__gw0T9--PZt4E\";\nexport var text__hGnI = \"PlasmicIndex-module--text__hGnI--2ediR\";\nexport var text__j7Ta = \"PlasmicIndex-module--text__j7Ta--BM-9q\";\nexport var text__kDDcV = \"PlasmicIndex-module--text__kDDcV--zAuVJ\";\nexport var text__kxrj6 = \"PlasmicIndex-module--text__kxrj6--2e6X9\";\nexport var text__mvf70 = \"PlasmicIndex-module--text__mvf70--azPry\";\nexport var text__npDuk = \"PlasmicIndex-module--text__npDuk--Ccktc\";\nexport var text__oYrjZ = \"PlasmicIndex-module--text__oYrjZ--F6C1n\";\nexport var text__poh5H = \"PlasmicIndex-module--text__poh5H--M5sGo\";\nexport var text__sfwMq = \"PlasmicIndex-module--text__sfwMq--peer0\";\nexport var text__tqkXc = \"PlasmicIndex-module--text__tqkXc--6dm7h\";\nexport var text__whM3Q = \"PlasmicIndex-module--text__whM3Q--ZA66I\";\nexport var text__wtF = \"PlasmicIndex-module--text__wtF--1GdaL\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicIndex } from \"../components/plasmic/hecto/PlasmicIndex\"\n\nfunction Index() {\n  // Use PlasmicIndex to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicIndex are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicIndex is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicIndex />\n}\n\nexport default Index\n"],"names":["root","globalThis","__PlasmicComponentRegistry","CSSClasses","NavigationBar","props","forceOpenMenu","_React$useState","isOpen","setIsOpen","inEditor","PlasmicCanvasContext","shouldRenderMenu","gap","safeParseNumber","itemsGap","responsiveBreakpoint","cssStyles","replace","className","dangerouslySetInnerHTML","__html","brand","onClick","value","tabIndex","closeButton","openButton","role","trim","menuItems","input","defaultValue","parsedValue","parseInt","isNaN","PlasmicHectoNav__VariantProps","Array","PlasmicHectoNav__ArgProps","__PlasmicWrapUserFunction","__PlasmicWrapUserPromise","PlasmicDescendants","text","pricing","signUp","makeNodeComponent","nodeName","func","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","args","ph","Object","assign","p","classNames","projectcss","component","Link","href","platform","style","color","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","src","title","fontWeight","PlasmicHectoNav__RenderFunc","displayName","PlasmicHectoNav","internalVariantProps","internalArgProps","PlasmicIndex__VariantProps","PlasmicIndex__ArgProps","hectoNav","features","container4","outerRow2","row2","container5","outerRow3","row4","reasonBox","reasonBox2","reasonBox3","reasonBox4","reasonBox5","reasonBox6","outer","container","footerBottom","link","globalVariants","ensureGlobalVariants","screen","useScreenVariantskILw5UiAaS1UF","as","hasGap","HectoNav","Button","endIcon","hasVariant","loading","image14YhFYwAwD","fullWidth","fullHeight","aspectRatio","undefined","airTravelerClubIconpngOXhQeqkJr","voltFmpng65KNczT0E","growthmentor2PngDbFq2ZnDc","image13Oy5YWPkj7","logoUsdsvgOdeblsO1Yj","clipboardOutlinesvg5UIvmRlOr","searchsvgIWxwm9VuZ","peopleOutlinesvgHyxjcYqpG7","PlasmicIndex__RenderFunc","PlasmicIndex","pageMetadata","description","ogImageSrc","canonical"],"sourceRoot":""}