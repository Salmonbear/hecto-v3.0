{"version":3,"file":"component---src-pages-2-jsx-3cb4dcf5e6ab6a517eb1.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@plasmicpkgs/plasmic-nav/dist/plasmic-nav.esm.js","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicHectoNav.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicHectoNav.module.css","webpack://gatsby-starter-default/./src/components/HectoNav.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicGlobalVariant__UnnamedGlobalGroupOfVariants.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicNewsletter3.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicNewsletter3.module.css","webpack://gatsby-starter-default/./src/pages/-2.jsx"],"sourcesContent":["import { PlasmicCanvasContext } from '@plasmicapp/host';\nimport registerComponent from '@plasmicapp/host/registerComponent';\nimport React from 'react';\nvar CSSClasses = {\n  container: \"plasmic-nav-container\",\n  menuButton: \"plasmic-nav-menu-button\",\n  menuItemsContainer: \"plasmic-nav-menu-items\",\n  menuItemsContainerOpen: \"plasmic-nav-menu-items-open\"\n};\nvar DEFAULT_GAP = 8;\nvar DEFAULT_RESPONSIVE_BREAKPOINT = 768;\n\nfunction NavigationBar(props) {\n  var forceOpenMenu = props.forceOpenMenu;\n\n  var _React$useState = React.useState(false),\n      isOpen = _React$useState[0],\n      setIsOpen = _React$useState[1];\n\n  var inEditor = React.useContext(PlasmicCanvasContext);\n  var shouldRenderMenu = React.useMemo(function () {\n    if (inEditor && forceOpenMenu) {\n      return true;\n    }\n\n    return isOpen;\n  }, [inEditor, forceOpenMenu, isOpen]);\n\n  var toggleMenu = function toggleMenu() {\n    return setIsOpen(function (value) {\n      return !value;\n    });\n  }; // Parsing the gap manually to ensure it's a valid number\n  // as we are using it in dangerouslySetInnerHTML.\n\n\n  var gap = safeParseNumber(props.itemsGap, DEFAULT_GAP);\n  var responsiveBreakpoint = safeParseNumber(props.responsiveBreakpoint, DEFAULT_RESPONSIVE_BREAKPOINT);\n  var cssStyles = React.useMemo(function () {\n    return minifyCss(\"\\n    /* Shared Styles */\\n    .\" + CSSClasses.container + \" {\\n      box-sizing: border-box;\\n    }\\n\\n    .\" + CSSClasses.menuItemsContainer + \" {\\n      box-sizing: border-box;\\n      display: flex;\\n    }\\n\\n    .\" + CSSClasses.menuItemsContainer + \" > * {\\n      flex: 0 0 auto;\\n    }\\n\\n    /* Desktop Styles */\\n    @media (min-width: \" + (responsiveBreakpoint + 1) + \"px) {\\n      .\" + CSSClasses.menuButton + \" {\\n        display: none;\\n      }\\n\\n      .\" + CSSClasses.menuItemsContainer + \" {\\n        flex-direction: row;\\n        align-items: center;\\n        width: auto;\\n      }\\n      .\" + CSSClasses.menuItemsContainer + \" > *:not(:first-child) {\\n        margin-inline-start: \" + gap + \"px;\\n      }\\n    }\\n\\n    /* Mobile Styles */\\n    @media (max-width: \" + responsiveBreakpoint + \"px) {\\n      .\" + CSSClasses.menuButton + \" {\\n        unset: all;\\n        -webkit-appearance: none;\\n        min-width: 40px;\\n        min-height: 40px;\\n        padding: 0;\\n        margin: 0;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        border: none;\\n        background: none;\\n        cursor: pointer;\\n      }\\n\\n      .\" + CSSClasses.menuItemsContainer + \":not(.\" + CSSClasses.menuItemsContainerOpen + \") {\\n        display: none;\\n      }\\n\\n      .\" + CSSClasses.menuItemsContainer + \" {\\n        margin-top: 10px;\\n        flex-direction: column;\\n        flex-shrink: 0;\\n        width: 100%;\\n      }\\n      .\" + CSSClasses.menuItemsContainer + \" > *:not(:first-child) {\\n        margin-top: \" + gap + \"px;\\n      }\\n    }\\n    \");\n  }, [gap, responsiveBreakpoint]);\n  return React.createElement(\"div\", {\n    className: CSSClasses.container + \" \" + props.className\n  }, React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: cssStyles\n    }\n  }), React.createElement(\"div\", null, props.brand), React.createElement(\"button\", {\n    className: CSSClasses.menuButton,\n    onClick: toggleMenu,\n    tabIndex: 0,\n    \"aria-expanded\": shouldRenderMenu\n  }, shouldRenderMenu ? props.closeButton : props.openButton), React.createElement(\"nav\", {\n    role: \"menu\",\n    className: (CSSClasses.menuItemsContainer + \" \" + (shouldRenderMenu ? CSSClasses.menuItemsContainerOpen : \"\")).trim()\n  }, props.menuItems));\n}\n\nfunction safeParseNumber(input, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = 0;\n  }\n\n  var parsedValue = parseInt(input, 10);\n  return isNaN(parsedValue) ? defaultValue : parsedValue;\n}\n\nfunction minifyCss(input) {\n  return input.replace(/\\s{2,}|\\n/g, \"\") //  Remove spaces\n  .replace(/\\/\\*[\\s\\S]*?\\*\\/|([^:]|^)\\/\\/.*$/g, \"\"); // Remove comments.\n}\n\nvar navigationBarComponentMeta = {\n  name: \"hostless-plasmic-navigation-bar\",\n  displayName: \"Navigation Bar\",\n  importName: \"NavigationBar\",\n  importPath: \"@plasmicpkgs/plasmic-nav\",\n  props: {\n    // Properties\n    forceOpenMenu: {\n      displayName: \"Force Open Menu\",\n      description: \"Use this option to open the menu during design time so you can easily customize the close button and menu items for small screens. This option is ignored when publishing the page.\",\n      type: \"boolean\"\n    },\n    itemsGap: {\n      displayName: \"Items Gap\",\n      description: \"The width of the space between menu items in pixels.\",\n      type: \"number\",\n      min: 0,\n      defaultValue: DEFAULT_GAP\n    },\n    responsiveBreakpoint: {\n      displayName: \"Small Screens Breakpoint\",\n      description: \"The maximum screen width used for showing the small screens version of the menu.\",\n      type: \"number\",\n      min: 0,\n      defaultValue: DEFAULT_RESPONSIVE_BREAKPOINT\n    },\n    // Slots\n    brand: {\n      type: \"slot\",\n      defaultValue: [{\n        type: \"hbox\",\n        tag: \"a\",\n        attrs: {\n          href: \"#\"\n        },\n        styles: {\n          padding: \"0px\"\n        },\n        children: {\n          type: \"img\",\n          src: \"https://static1.plasmic.app/nav-logo-placeholder.svg\",\n          styles: {\n            height: \"40px\"\n          }\n        }\n      }]\n    },\n    openButton: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"img\",\n        src: \"https://static1.plasmic.app/menu.svg\"\n      }\n    },\n    closeButton: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"img\",\n        src: \"https://static1.plasmic.app/close.svg\"\n      }\n    },\n    menuItems: {\n      type: \"slot\",\n      defaultValue: /*#__PURE__*/[\"Home\", \"About\", \"Contact\"].map(function (title) {\n        return {\n          type: \"text\",\n          tag: \"a\",\n          attrs: {\n            href: \"/\"\n          },\n          styles: {\n            width: \"auto\"\n          },\n          value: title\n        };\n      })\n    }\n  },\n  defaultStyles: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    padding: \"16px\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    marginBottom: \"20px\"\n  }\n};\n\nfunction registerNavigationBar(loader, customMetaProps) {\n  if (loader) {\n    loader.registerComponent(NavigationBar, customMetaProps != null ? customMetaProps : navigationBarComponentMeta);\n  } else {\n    registerComponent(NavigationBar, customMetaProps != null ? customMetaProps : navigationBarComponentMeta);\n  }\n}\n\nexport { NavigationBar, navigationBarComponentMeta, registerNavigationBar };","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd\n// Component: 1Xqtr1aGys\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport { NavigationBar } from \"@plasmicpkgs/plasmic-nav\" // plasmic-import: jGx9tiKJoex/codeComponent\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_hecto.module.css\" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss\nimport * as sty from \"./PlasmicHectoNav.module.css\" // plasmic-import: 1Xqtr1aGys/css\n\nexport const PlasmicHectoNav__VariantProps = new Array()\n\nexport const PlasmicHectoNav__ArgProps = new Array()\n\nconst __wrapUserFunction =\n  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn())\n\nconst __wrapUserPromise =\n  globalThis.__PlasmicWrapUserPromise ??\n  (async (loc, promise) => {\n    await promise\n  })\n\nfunction PlasmicHectoNav__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = {\n    ...args,\n    ...variants,\n  }\n\n  const currentUser = p.useCurrentUser?.() || {}\n  const [$queries, setDollarQueries] = React.useState({})\n  return (\n    <NavigationBar\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      brand={\n        <p.PlasmicLink\n          className={classNames(projectcss.all, projectcss.a, sty.link__dhYtV)}\n          component={Link}\n          href={\"#\"}\n          platform={\"gatsby\"}\n        >\n          <div\n            data-plasmic-name={\"text\"}\n            data-plasmic-override={overrides.text}\n            className={classNames(\n              projectcss.all,\n              projectcss.__wab_text,\n              sty.text\n            )}\n          >\n            <React.Fragment>\n              <React.Fragment>{\"hecto\"}</React.Fragment>\n              <span\n                className={\"plasmic_default__all plasmic_default__span\"}\n                style={{ color: \"#FF0000\" }}\n              >\n                {\".\"}\n              </span>\n            </React.Fragment>\n          </div>\n        </p.PlasmicLink>\n      }\n      className={classNames(\"__wab_instance\", sty.root)}\n      closeButton={\n        <p.PlasmicImg\n          alt={\"\"}\n          className={classNames(sty.img___4Cdh)}\n          displayHeight={\"auto\"}\n          displayMaxHeight={\"none\"}\n          displayMaxWidth={\"none\"}\n          displayMinHeight={\"0\"}\n          displayMinWidth={\"0\"}\n          displayWidth={\"auto\"}\n          src={\"https://static1.plasmic.app/close.svg\"}\n        />\n      }\n      itemsGap={8}\n      menuItems={\n        <React.Fragment>\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__gyu5T\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/newsletter-creators\"}\n            platform={\"gatsby\"}\n            title={\"Creators\"}\n          >\n            {\"Creators\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__sbdo8\n            )}\n            component={Link}\n            href={`/resources`}\n            platform={\"gatsby\"}\n          >\n            {\"Resources\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__esyf1\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/search\"}\n            platform={\"gatsby\"}\n          >\n            {\"Search\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            data-plasmic-name={\"pricing\"}\n            data-plasmic-override={overrides.pricing}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.pricing\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/pricing\"}\n            platform={\"gatsby\"}\n          >\n            {\"Pricing\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__ywDm\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/login\"}\n            platform={\"gatsby\"}\n          >\n            {\"Sign In\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            data-plasmic-name={\"signUp\"}\n            data-plasmic-override={overrides.signUp}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.signUp\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/login\"}\n            platform={\"gatsby\"}\n          >\n            <React.Fragment>\n              <span\n                className={\"plasmic_default__all plasmic_default__span\"}\n                style={{ fontWeight: 700, color: \"#FFFFFF\" }}\n              >\n                {\"Sign Up\"}\n              </span>\n            </React.Fragment>\n          </p.PlasmicLink>\n        </React.Fragment>\n      }\n      openButton={\n        <p.PlasmicImg\n          alt={\"\"}\n          className={classNames(sty.img__jPdEs)}\n          displayHeight={\"auto\"}\n          displayMaxHeight={\"none\"}\n          displayMaxWidth={\"none\"}\n          displayMinHeight={\"0\"}\n          displayMinWidth={\"0\"}\n          displayWidth={\"auto\"}\n          src={\"https://static1.plasmic.app/menu.svg\"}\n        />\n      }\n      responsiveBreakpoint={768}\n    />\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"text\", \"pricing\", \"signUp\"],\n  text: [\"text\"],\n  pricing: [\"pricing\"],\n  signUp: [\"signUp\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHectoNav__ArgProps,\n          internalVariantPropNames: PlasmicHectoNav__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicHectoNav__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHectoNav\"\n  } else {\n    func.displayName = `PlasmicHectoNav.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHectoNav = Object.assign(\n  // Top-level PlasmicHectoNav renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    text: makeNodeComponent(\"text\"),\n    pricing: makeNodeComponent(\"pricing\"),\n    signUp: makeNodeComponent(\"signUp\"),\n    // Metadata about props expected for PlasmicHectoNav\n    internalVariantProps: PlasmicHectoNav__VariantProps,\n    internalArgProps: PlasmicHectoNav__ArgProps,\n  }\n)\n\nexport default PlasmicHectoNav\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var img___4Cdh = \"PlasmicHectoNav-module--img___4Cdh--Ot8Ac\";\nexport var img__jPdEs = \"PlasmicHectoNav-module--img__jPdEs--mhSXj\";\nexport var link__dhYtV = \"PlasmicHectoNav-module--link__dhYtV--W7RCG\";\nexport var link__esyf1 = \"PlasmicHectoNav-module--link__esyf1--6r+vD\";\nexport var link__gyu5T = \"PlasmicHectoNav-module--link__gyu5T--oVxVU\";\nexport var link__sbdo8 = \"PlasmicHectoNav-module--link__sbdo8--a-am0\";\nexport var link__ywDm = \"PlasmicHectoNav-module--link__ywDm--21xcu\";\nexport var pricing = \"PlasmicHectoNav-module--pricing--3ZE5q\";\nexport var root = \"PlasmicHectoNav-module--root--wHZ8F\";\nexport var signUp = \"PlasmicHectoNav-module--signUp--Yv3Wa\";\nexport var text = \"PlasmicHectoNav-module--text--1kpDI\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHectoNav } from \"./plasmic/hecto/PlasmicHectoNav\"\n\nfunction HectoNav(props) {\n  // Use PlasmicHectoNav to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHectoNav are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HectoNavProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHectoNav {...props} />\n}\n\nexport default HectoNav\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\n\nexport const UnnamedGlobalGroupOfVariantsContext = React.createContext(\n  \"PLEASE_RENDER_INSIDE_PROVIDER\"\n)\n\nexport function useUnnamedGlobalGroupOfVariants() {\n  return React.useContext(UnnamedGlobalGroupOfVariantsContext)\n}\n\nexport default UnnamedGlobalGroupOfVariantsContext\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd\n// Component: HLCMdt64_9V\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport HectoNav from \"../../HectoNav\" // plasmic-import: 1Xqtr1aGys/component\nimport Button from \"../../Button\" // plasmic-import: 16yj8MRmRBT/component\nimport { useScreenVariants as useScreenVariantskILw5UiAaS1UF } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: kILw5uiAaS1uF/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_hecto.module.css\" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss\nimport * as sty from \"./PlasmicNewsletter3.module.css\" // plasmic-import: HLCMdt64_9V/css\nimport ArrowRightsvgIcon from \"./icons/PlasmicIcon__ArrowRightsvg\" // plasmic-import: g1j_XxrLjbNK/icon\nimport image14YhFYwAwD from \"./images/image14.png\" // plasmic-import: YhFYw-awD/picture\nimport airTravelerClubIconpngOXhQeqkJr from \"./images/airTravelerClubIconpng.png\" // plasmic-import: oXHQeqkJR/picture\nimport voltFmpng65KNczT0E from \"./images/voltFmpng.png\" // plasmic-import: 65kNczT0e/picture\nimport growthmentor2PngDbFq2ZnDc from \"./images/growthmentor2Png.png\" // plasmic-import: DBFq2ZNDc/picture\nimport image13Oy5YWPkj7 from \"./images/image13.png\" // plasmic-import: Oy5yWPkj7/picture\nimport logoUsdsvgOdeblsO1Yj from \"./images/logoUsdsvg.svg\" // plasmic-import: odeblsO1Yj/picture\nimport clipboardOutlinesvg5UIvmRlOr from \"./images/clipboardOutlinesvg.svg\" // plasmic-import: 5UIvmRLOr/picture\nimport searchsvgIWxwm9VuZ from \"./images/searchsvg.svg\" // plasmic-import: IWxwm9VuZ/picture\nimport peopleOutlinesvgHyxjcYqpG7 from \"./images/peopleOutlinesvg.svg\" // plasmic-import: hyxjcYqpG7/picture\n\nexport const PlasmicNewsletter3__VariantProps = new Array()\n\nexport const PlasmicNewsletter3__ArgProps = new Array()\n\nconst __wrapUserFunction =\n  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn())\n\nconst __wrapUserPromise =\n  globalThis.__PlasmicWrapUserPromise ??\n  (async (loc, promise) => {\n    await promise\n  })\n\nexport function Head() {\n  return (\n    <>\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <title key=\"title\">{PlasmicNewsletter3.pageMetadata.title}</title>\n      <meta\n        key=\"og:title\"\n        property=\"og:title\"\n        content={PlasmicNewsletter3.pageMetadata.title}\n      />\n\n      <meta\n        key=\"twitter:title\"\n        name=\"twitter:title\"\n        content={PlasmicNewsletter3.pageMetadata.title}\n      />\n    </>\n  )\n}\n\nfunction PlasmicNewsletter3__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = {\n    ...args,\n    ...variants,\n  }\n\n  const currentUser = p.useCurrentUser?.() || {}\n  const [$queries, setDollarQueries] = React.useState({})\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantskILw5UiAaS1UF(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        {true ? (\n          <p.Stack\n            as={\"div\"}\n            data-plasmic-name={\"root\"}\n            data-plasmic-override={overrides.root}\n            data-plasmic-root={true}\n            data-plasmic-for-node={forNode}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.root_reset,\n              projectcss.plasmic_default_styles,\n              projectcss.plasmic_mixins,\n              projectcss.plasmic_tokens,\n              sty.root\n            )}\n          >\n            <div className={classNames(projectcss.all, sty.freeBox__hiXbx)}>\n              <div className={classNames(projectcss.all, sty.freeBox__vw0Zr)}>\n                <HectoNav\n                  data-plasmic-name={\"hectoNav\"}\n                  data-plasmic-override={overrides.hectoNav}\n                  className={classNames(\"__wab_instance\", sty.hectoNav)}\n                />\n\n                <div className={classNames(projectcss.all, sty.freeBox__s2Jm)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__hIdx)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__haiVl)}\n                    >\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__uzRmg\n                        )}\n                      >\n                        <h1\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h1,\n                            projectcss.__wab_text,\n                            sty.h1__pdcQr\n                          )}\n                        >\n                          <React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0506CF\" }}\n                            >\n                              {\"Reach your target market,\"}\n                            </span>\n                            <React.Fragment>{\"\\n\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#FF4A03\" }}\n                            >\n                              {\"through trusted\"}\n                            </span>\n                            <React.Fragment>{\"\\n\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#FF4A03\" }}\n                            >\n                              {\"newsletters.\"}\n                            </span>\n                          </React.Fragment>\n                        </h1>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__eYig\n                          )}\n                        >\n                          <React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#AFAFB8\" }}\n                            >\n                              {\n                                \"Hecto is a platform to buy, sell and manage newsletter ads and sponsorships.\"\n                              }\n                            </span>\n                          </React.Fragment>\n                        </div>\n                      </p.Stack>\n\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__rcQfR\n                        )}\n                      >\n                        <Button\n                          className={classNames(\n                            \"__wab_instance\",\n                            sty.button__mjTqb\n                          )}\n                          color={\"secondary\"}\n                          endIcon={\n                            <ArrowRightsvgIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__pScZz\n                              )}\n                              role={\"img\"}\n                            />\n                          }\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text__sLkb\n                            )}\n                          >\n                            <React.Fragment>\n                              <span\n                                className={\n                                  \"plasmic_default__all plasmic_default__span\"\n                                }\n                                style={{ color: \"#FF0000\" }}\n                              >\n                                {\"Buy Ads\"}\n                              </span>\n                            </React.Fragment>\n                          </div>\n                        </Button>\n\n                        <Button\n                          className={classNames(\n                            \"__wab_instance\",\n                            sty.button__c3TC7\n                          )}\n                          endIcon={\n                            <ArrowRightsvgIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__vT2Gj\n                              )}\n                              role={\"img\"}\n                            />\n                          }\n                          link={\n                            hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                              ? \"https://app.hecto.io/search\"\n                              : \"https://hecto.io/creators\"\n                          }\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text__ojciv\n                            )}\n                          >\n                            {\"Sell Ads\"}\n                          </div>\n                        </Button>\n                      </p.Stack>\n                    </p.Stack>\n                  </p.Stack>\n                </div>\n              </div>\n            </div>\n\n            {true ? (\n              <section\n                data-plasmic-name={\"features\"}\n                data-plasmic-override={overrides.features}\n                className={classNames(projectcss.all, sty.features)}\n              >\n                <div className={classNames(projectcss.all, sty.column___7Yu9J)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__r5Ndu)}\n                  >\n                    <h2\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h2,\n                        projectcss.__wab_text,\n                        sty.h2__aiflW\n                      )}\n                    >\n                      {\"Newsletters \\ntrusted by\"}\n                    </h2>\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__g3Nhc)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"http://s3.amazonaws.com/appforest_uf/f1612212968629x588639892014067800/hootsuite.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__xzWoa)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1599861530959x149048109187747800/Logo-with-clearspace.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__a4A8Z)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1612213380220x409371329433475100/email-octopus-logo.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__oVubS)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1599862025614x593508823287736800/Monday.com-Logo.wine.png\"\n                      }\n                    />\n\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__bmtl0)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"200px\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\"lazy\"}\n                      src={\n                        \"https://s3.amazonaws.com/appforest_uf/f1647471882824x158210612790481900/user_logo.svg\"\n                      }\n                    />\n                  </p.Stack>\n\n                  <div\n                    data-plasmic-name={\"container4\"}\n                    data-plasmic-override={overrides.container4}\n                    className={classNames(projectcss.all, sty.container4)}\n                  >\n                    <div\n                      data-plasmic-name={\"outerRow2\"}\n                      data-plasmic-override={overrides.outerRow2}\n                      className={classNames(projectcss.all, sty.outerRow2)}\n                    >\n                      <div\n                        data-plasmic-name={\"row2\"}\n                        data-plasmic-override={overrides.row2}\n                        className={classNames(projectcss.all, sty.row2)}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__lacmO\n                          )}\n                        >\n                          {true ? (\n                            <p.Stack\n                              as={\"div\"}\n                              hasGap={true}\n                              className={classNames(\n                                projectcss.all,\n                                sty.freeBox__prEmq\n                              )}\n                            >\n                              <h1\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h1,\n                                  projectcss.__wab_text,\n                                  sty.h1__ela3D\n                                )}\n                              >\n                                <React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\"Generate leads\"}\n                                  </span>\n                                  <React.Fragment>{\"\\n\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\"from \"}\n                                  </span>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF4A03\" }}\n                                  >\n                                    {\"engaged \"}\n                                  </span>\n                                  <React.Fragment>{\"\\n\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF4A03\" }}\n                                  >\n                                    {\"email audiences\"}\n                                  </span>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\" \"}\n                                  </span>\n                                </React.Fragment>\n                              </h1>\n                            </p.Stack>\n                          ) : null}\n                        </div>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__l7EwL\n                          )}\n                        >\n                          <p.PlasmicImg\n                            alt={\"\"}\n                            className={classNames(sty.img__t6Fqd)}\n                            displayHeight={\"auto\"}\n                            displayMaxHeight={\"none\"}\n                            displayMaxWidth={\"100%\"}\n                            displayMinHeight={\"0\"}\n                            displayMinWidth={\"0\"}\n                            displayWidth={\"auto\"}\n                            loading={\"lazy\"}\n                            src={{\n                              src: image14YhFYwAwD,\n                              fullWidth: 844,\n                              fullHeight: 521,\n                              aspectRatio: undefined,\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"container5\"}\n                    data-plasmic-override={overrides.container5}\n                    className={classNames(projectcss.all, sty.container5)}\n                  >\n                    <div\n                      data-plasmic-name={\"outerRow3\"}\n                      data-plasmic-override={overrides.outerRow3}\n                      className={classNames(projectcss.all, sty.outerRow3)}\n                    >\n                      <div\n                        data-plasmic-name={\"row4\"}\n                        data-plasmic-override={overrides.row4}\n                        className={classNames(projectcss.all, sty.row4)}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__mkSdY\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox___4EptU\n                            )}\n                          >\n                            <p.PlasmicImg\n                              alt={\"\"}\n                              className={classNames(sty.img__vhHgv)}\n                              displayHeight={\"auto\"}\n                              displayMaxHeight={\"none\"}\n                              displayMaxWidth={\"100%\"}\n                              displayMinHeight={\"0\"}\n                              displayMinWidth={\"0\"}\n                              displayWidth={\"auto\"}\n                              loading={\"lazy\"}\n                              src={{\n                                src: airTravelerClubIconpngOXhQeqkJr,\n                                fullWidth: 201,\n                                fullHeight: 202,\n                                aspectRatio: undefined,\n                              }}\n                            />\n\n                            <p.PlasmicImg\n                              alt={\"\"}\n                              className={classNames(sty.img__qHcOu)}\n                              displayHeight={\"auto\"}\n                              displayMaxHeight={\"none\"}\n                              displayMaxWidth={\"100%\"}\n                              displayMinHeight={\"0\"}\n                              displayMinWidth={\"0\"}\n                              displayWidth={\"auto\"}\n                              loading={\"lazy\"}\n                              src={{\n                                src: voltFmpng65KNczT0E,\n                                fullWidth: 199,\n                                fullHeight: 205,\n                                aspectRatio: undefined,\n                              }}\n                            />\n\n                            <p.PlasmicImg\n                              alt={\"\"}\n                              className={classNames(sty.img__rka6S)}\n                              displayHeight={\"auto\"}\n                              displayMaxHeight={\"none\"}\n                              displayMaxWidth={\"100%\"}\n                              displayMinHeight={\"0\"}\n                              displayMinWidth={\"0\"}\n                              displayWidth={\"auto\"}\n                              loading={\"lazy\"}\n                              src={{\n                                src: growthmentor2PngDbFq2ZnDc,\n                                fullWidth: 192,\n                                fullHeight: 195,\n                                aspectRatio: undefined,\n                              }}\n                            />\n                          </div>\n                        </div>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__wqEz2\n                          )}\n                        >\n                          {true ? (\n                            <p.Stack\n                              as={\"div\"}\n                              hasGap={true}\n                              className={classNames(\n                                projectcss.all,\n                                sty.freeBox___5GTg\n                              )}\n                            >\n                              <h1\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h1,\n                                  projectcss.__wab_text,\n                                  sty.h1___5Gv2V\n                                )}\n                              >\n                                <React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#0506CF\" }}\n                                  >\n                                    {\"Build your campaign \"}\n                                  </span>\n                                  <React.Fragment>{\"\\n\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF4A03\" }}\n                                  >\n                                    {\"across multiple newsletters\"}\n                                  </span>\n                                </React.Fragment>\n                              </h1>\n                            </p.Stack>\n                          ) : null}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : null}\n\n            <section className={classNames(projectcss.all, sty.columns__iju6R)}>\n              <div className={classNames(projectcss.all, sty.column__etYgV)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__gtRdi)}\n                  >\n                    <h1\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h1,\n                        projectcss.__wab_text,\n                        sty.h1__axzOg\n                      )}\n                    >\n                      <React.Fragment>\n                        <span\n                          className={\n                            \"plasmic_default__all plasmic_default__span\"\n                          }\n                          style={{ color: \"#0506CF\" }}\n                        >\n                          {\"Why use Hecto\"}\n                        </span>\n                        <React.Fragment>{\"\"}</React.Fragment>\n                        <span\n                          className={\n                            \"plasmic_default__all plasmic_default__span\"\n                          }\n                          style={{ color: \"#FF4A03\" }}\n                        >\n                          {\"?\"}\n                        </span>\n                      </React.Fragment>\n                    </h1>\n                  </p.Stack>\n                ) : null}\n\n                <div className={classNames(projectcss.all, sty.columns__pAsib)}>\n                  <div\n                    data-plasmic-name={\"reasonBox\"}\n                    data-plasmic-override={overrides.reasonBox}\n                    className={classNames(projectcss.all, sty.reasonBox)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__wfIz6)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={\"https://www.svgrepo.com/show/15349/chat.svg\"}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__h98Wi)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__llqYy\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__dbF09\n                          )}\n                        >\n                          {\"Protected privacy\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__vhIBg\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox2\"}\n                    data-plasmic-override={overrides.reasonBox2}\n                    className={classNames(projectcss.all, sty.reasonBox2)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__e0NnG)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: image13Oy5YWPkj7,\n                        fullWidth: 452,\n                        fullHeight: 452,\n                        aspectRatio: undefined,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__c7KkO)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__kGEx8\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__xFqK\n                          )}\n                        >\n                          {\"Upfront Prices\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__yt6J0\n                          )}\n                        >\n                          {\n                            \"No need to request pricing information. See prices of ad packages [i]before [/i] you contact a newsletter. \"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox3\"}\n                    data-plasmic-override={overrides.reasonBox3}\n                    className={classNames(projectcss.all, sty.reasonBox3)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__v9Ka)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: logoUsdsvgOdeblsO1Yj,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__tLMw)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__utovB\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__p5Uu\n                          )}\n                        >\n                          {\"Pay Directly\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__i8WqJ\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className={classNames(projectcss.all, sty.columns__waU6V)}>\n                  <div\n                    data-plasmic-name={\"reasonBox4\"}\n                    data-plasmic-override={overrides.reasonBox4}\n                    className={classNames(projectcss.all, sty.reasonBox4)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__ymEd2)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: clipboardOutlinesvg5UIvmRlOr,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__xF28)}\n                    >\n                      <div\n                        className={classNames(projectcss.all, sty.column__nwZ8)}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__eUrwh\n                          )}\n                        >\n                          {\"Fast Submission\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__cg2Kb\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox5\"}\n                    data-plasmic-override={overrides.reasonBox5}\n                    className={classNames(projectcss.all, sty.reasonBox5)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__nqHsj)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: searchsvgIWxwm9VuZ,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__wYg50)}\n                    >\n                      <div\n                        className={classNames(projectcss.all, sty.column__rEzl)}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4___0BILd\n                          )}\n                        >\n                          {\"Quality Control\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text___9FHpV\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"reasonBox6\"}\n                    data-plasmic-override={overrides.reasonBox6}\n                    className={classNames(projectcss.all, sty.reasonBox6)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img___8TKw5)}\n                      displayHeight={\"100px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"100%\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100px\"}\n                      loading={\"lazy\"}\n                      src={{\n                        src: peopleOutlinesvgHyxjcYqpG7,\n                        fullWidth: 150,\n                        fullHeight: 150,\n                        aspectRatio: 1000000,\n                      }}\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.columns__liCpH)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__rDuW2\n                        )}\n                      >\n                        <h4\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h4,\n                            projectcss.__wab_text,\n                            sty.h4__j7WlE\n                          )}\n                        >\n                          {\"Super Engagement\"}\n                        </h4>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__uuik8\n                          )}\n                        >\n                          {\n                            \"Don't give you contact details to make an enquiry. Message creators directly, right here on the platform\"\n                          }\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            {true ? (\n              <section\n                className={classNames(projectcss.all, sty.columns__ygArp)}\n              >\n                <div\n                  data-plasmic-name={\"outer\"}\n                  data-plasmic-override={overrides.outer}\n                  className={classNames(projectcss.all, sty.outer)}\n                >\n                  <div\n                    data-plasmic-name={\"container\"}\n                    data-plasmic-override={overrides.container}\n                    className={classNames(projectcss.all, sty.container)}\n                  >\n                    <div\n                      className={classNames(projectcss.all, sty.column__kFHrQ)}\n                    >\n                      <h2\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.h2,\n                          projectcss.__wab_text,\n                          sty.h2__fd2AQ\n                        )}\n                      >\n                        {\"To Make Requests For The\\nFurther Information\"}\n                      </h2>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__sRtFe\n                        )}\n                      >\n                        {\n                          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                        }\n                      </div>\n                    </div>\n\n                    <div\n                      className={classNames(projectcss.all, sty.column__hIxAk)}\n                    >\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__koP3U\n                        )}\n                        color={\"blue\"}\n                        link={\"#\"}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__tOpG\n                          )}\n                        >\n                          {\"Join With Now\"}\n                        </div>\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : null}\n\n            <div className={classNames(projectcss.all, sty.freeBox__upMkq)}>\n              <div className={classNames(projectcss.all, sty.columns__v4YGy)}>\n                <div className={classNames(projectcss.all, sty.column___9IfIe)}>\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__ahBlr\n                    )}\n                  >\n                    <React.Fragment>\n                      <span\n                        className={\"plasmic_default__all plasmic_default__span\"}\n                        style={{ color: \"#000000\" }}\n                      >\n                        {\"Ready to start your campaign?\"}\n                      </span>\n                    </React.Fragment>\n                  </h2>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__c2Egn\n                    )}\n                  >\n                    <React.Fragment>\n                      <span\n                        className={\"plasmic_default__all plasmic_default__span\"}\n                        style={{ color: \"#000000\" }}\n                      >\n                        {\"Find the perfect newsletter for your brand\"}\n                      </span>\n                    </React.Fragment>\n                  </div>\n\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button___4Tlwp)}\n                    color={\"blue\"}\n                    endIcon={\n                      <ArrowRightsvgIcon\n                        className={classNames(projectcss.all, sty.svg__cabQl)}\n                        role={\"img\"}\n                      />\n                    }\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__pz6F\n                      )}\n                    >\n                      {\"Search Newsletters\"}\n                    </div>\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <div className={classNames(projectcss.all, sty.freeBox___1QhWx)}>\n              <div\n                data-plasmic-name={\"footerBottom\"}\n                data-plasmic-override={overrides.footerBottom}\n                className={classNames(projectcss.all, sty.footerBottom)}\n              >\n                <div\n                  className={classNames(projectcss.all, sty.freeBox___4Qypc)}\n                >\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__aGbxC\n                    )}\n                  >\n                    {\"© Hecto. All rights reserved\"}\n                  </div>\n\n                  <p.PlasmicLink\n                    data-plasmic-name={\"link\"}\n                    data-plasmic-override={overrides.link}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___3Km9W\n                      )}\n                    >\n                      {\"Privacy\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__pZ8Jk\n                      )}\n                    >\n                      {\"Terms and Conditions\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__mgTyW\n                      )}\n                    >\n                      {\"Contact Us\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__eTrBf\n                      )}\n                    >\n                      {\"Blog\"}\n                    </div>\n                  </p.PlasmicLink>\n                </div>\n              </div>\n            </div>\n          </p.Stack>\n        ) : null}\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"hectoNav\",\n    \"features\",\n    \"container4\",\n    \"outerRow2\",\n    \"row2\",\n    \"container5\",\n    \"outerRow3\",\n    \"row4\",\n    \"reasonBox\",\n    \"reasonBox2\",\n    \"reasonBox3\",\n    \"reasonBox4\",\n    \"reasonBox5\",\n    \"reasonBox6\",\n    \"outer\",\n    \"container\",\n    \"footerBottom\",\n    \"link\",\n  ],\n\n  hectoNav: [\"hectoNav\"],\n  features: [\n    \"features\",\n    \"container4\",\n    \"outerRow2\",\n    \"row2\",\n    \"container5\",\n    \"outerRow3\",\n    \"row4\",\n  ],\n\n  container4: [\"container4\", \"outerRow2\", \"row2\"],\n  outerRow2: [\"outerRow2\", \"row2\"],\n  row2: [\"row2\"],\n  container5: [\"container5\", \"outerRow3\", \"row4\"],\n  outerRow3: [\"outerRow3\", \"row4\"],\n  row4: [\"row4\"],\n  reasonBox: [\"reasonBox\"],\n  reasonBox2: [\"reasonBox2\"],\n  reasonBox3: [\"reasonBox3\"],\n  reasonBox4: [\"reasonBox4\"],\n  reasonBox5: [\"reasonBox5\"],\n  reasonBox6: [\"reasonBox6\"],\n  outer: [\"outer\", \"container\"],\n  container: [\"container\"],\n  footerBottom: [\"footerBottom\", \"link\"],\n  link: [\"link\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicNewsletter3__ArgProps,\n          internalVariantPropNames: PlasmicNewsletter3__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicNewsletter3__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicNewsletter3\"\n  } else {\n    func.displayName = `PlasmicNewsletter3.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicNewsletter3 = Object.assign(\n  // Top-level PlasmicNewsletter3 renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    hectoNav: makeNodeComponent(\"hectoNav\"),\n    features: makeNodeComponent(\"features\"),\n    container4: makeNodeComponent(\"container4\"),\n    outerRow2: makeNodeComponent(\"outerRow2\"),\n    row2: makeNodeComponent(\"row2\"),\n    container5: makeNodeComponent(\"container5\"),\n    outerRow3: makeNodeComponent(\"outerRow3\"),\n    row4: makeNodeComponent(\"row4\"),\n    reasonBox: makeNodeComponent(\"reasonBox\"),\n    reasonBox2: makeNodeComponent(\"reasonBox2\"),\n    reasonBox3: makeNodeComponent(\"reasonBox3\"),\n    reasonBox4: makeNodeComponent(\"reasonBox4\"),\n    reasonBox5: makeNodeComponent(\"reasonBox5\"),\n    reasonBox6: makeNodeComponent(\"reasonBox6\"),\n    outer: makeNodeComponent(\"outer\"),\n    container: makeNodeComponent(\"container\"),\n    footerBottom: makeNodeComponent(\"footerBottom\"),\n    link: makeNodeComponent(\"link\"),\n    // Metadata about props expected for PlasmicNewsletter3\n    internalVariantProps: PlasmicNewsletter3__VariantProps,\n    internalArgProps: PlasmicNewsletter3__ArgProps,\n    // Page metadata\n    pageMetadata: {\n      title: \"Hecto | Newsletter advertising, simplified\",\n      description: \"\",\n      ogImageSrc: \"\",\n      canonical: \"\",\n    },\n  }\n)\n\nexport default PlasmicNewsletter3\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button___4Tlwp = \"PlasmicNewsletter3-module--button___4Tlwp--A-2go\";\nexport var button__c3TC7 = \"PlasmicNewsletter3-module--button__c3TC7--1xZDG\";\nexport var button__koP3U = \"PlasmicNewsletter3-module--button__koP3U--tvZrq\";\nexport var button__mjTqb = \"PlasmicNewsletter3-module--button__mjTqb--A2rnE\";\nexport var column___7Yu9J = \"PlasmicNewsletter3-module--column___7Yu9J--gpGJO\";\nexport var column___9IfIe = \"PlasmicNewsletter3-module--column___9IfIe--G+PJb\";\nexport var column__etYgV = \"PlasmicNewsletter3-module--column__etYgV--h5vDp\";\nexport var column__hIxAk = \"PlasmicNewsletter3-module--column__hIxAk--djyKj\";\nexport var column__kFHrQ = \"PlasmicNewsletter3-module--column__kFHrQ--imN-S\";\nexport var column__kGEx8 = \"PlasmicNewsletter3-module--column__kGEx8--yaHhI\";\nexport var column__l7EwL = \"PlasmicNewsletter3-module--column__l7EwL--2kyoE\";\nexport var column__lacmO = \"PlasmicNewsletter3-module--column__lacmO--Kjjez\";\nexport var column__llqYy = \"PlasmicNewsletter3-module--column__llqYy--niSWK\";\nexport var column__mkSdY = \"PlasmicNewsletter3-module--column__mkSdY--LQdGc\";\nexport var column__nwZ8 = \"PlasmicNewsletter3-module--column__nwZ8--ImQfp\";\nexport var column__rDuW2 = \"PlasmicNewsletter3-module--column__rDuW2--NnQxW\";\nexport var column__rEzl = \"PlasmicNewsletter3-module--column__rEzl--oU73a\";\nexport var column__utovB = \"PlasmicNewsletter3-module--column__utovB--kySJN\";\nexport var column__wqEz2 = \"PlasmicNewsletter3-module--column__wqEz2--TPZ0L\";\nexport var columns__c7KkO = \"PlasmicNewsletter3-module--columns__c7KkO--uhJw-\";\nexport var columns__h98Wi = \"PlasmicNewsletter3-module--columns__h98Wi--aMjw5\";\nexport var columns__iju6R = \"PlasmicNewsletter3-module--columns__iju6R--KAX9F\";\nexport var columns__liCpH = \"PlasmicNewsletter3-module--columns__liCpH--AOdUx\";\nexport var columns__pAsib = \"PlasmicNewsletter3-module--columns__pAsib--O13Y9\";\nexport var columns__tLMw = \"PlasmicNewsletter3-module--columns__tLMw--zsasw\";\nexport var columns__v4YGy = \"PlasmicNewsletter3-module--columns__v4YGy--Wr5Ot\";\nexport var columns__wYg50 = \"PlasmicNewsletter3-module--columns__wYg50--qaY9n\";\nexport var columns__waU6V = \"PlasmicNewsletter3-module--columns__waU6V--6Z-nd\";\nexport var columns__xF28 = \"PlasmicNewsletter3-module--columns__xF28--iLHsV\";\nexport var columns__ygArp = \"PlasmicNewsletter3-module--columns__ygArp--+6w-B\";\nexport var container = \"PlasmicNewsletter3-module--container--Jjxjl\";\nexport var container4 = \"PlasmicNewsletter3-module--container4--dWQD0\";\nexport var container5 = \"PlasmicNewsletter3-module--container5--VX913\";\nexport var features = \"PlasmicNewsletter3-module--features--4ZJ9p\";\nexport var footerBottom = \"PlasmicNewsletter3-module--footerBottom--xd011\";\nexport var freeBox___1QhWx = \"PlasmicNewsletter3-module--freeBox___1QhWx--mW-EI\";\nexport var freeBox___4EptU = \"PlasmicNewsletter3-module--freeBox___4EptU--IBcOU\";\nexport var freeBox___4Qypc = \"PlasmicNewsletter3-module--freeBox___4Qypc--gqfEz\";\nexport var freeBox___5GTg = \"PlasmicNewsletter3-module--freeBox___5GTg--JqZDI\";\nexport var freeBox__gtRdi = \"PlasmicNewsletter3-module--freeBox__gtRdi--RWUOJ\";\nexport var freeBox__hIdx = \"PlasmicNewsletter3-module--freeBox__hIdx--MYpYa\";\nexport var freeBox__haiVl = \"PlasmicNewsletter3-module--freeBox__haiVl--zBLEu\";\nexport var freeBox__hiXbx = \"PlasmicNewsletter3-module--freeBox__hiXbx--Ybhwu\";\nexport var freeBox__prEmq = \"PlasmicNewsletter3-module--freeBox__prEmq--tcLWN\";\nexport var freeBox__r5Ndu = \"PlasmicNewsletter3-module--freeBox__r5Ndu--cle4i\";\nexport var freeBox__rcQfR = \"PlasmicNewsletter3-module--freeBox__rcQfR--ozohU\";\nexport var freeBox__s2Jm = \"PlasmicNewsletter3-module--freeBox__s2Jm--Xg6CZ\";\nexport var freeBox__upMkq = \"PlasmicNewsletter3-module--freeBox__upMkq--rCBV2\";\nexport var freeBox__uzRmg = \"PlasmicNewsletter3-module--freeBox__uzRmg--xVT+n\";\nexport var freeBox__vw0Zr = \"PlasmicNewsletter3-module--freeBox__vw0Zr--ga4RE\";\nexport var h1___5Gv2V = \"PlasmicNewsletter3-module--h1___5Gv2V--fdTW8\";\nexport var h1__axzOg = \"PlasmicNewsletter3-module--h1__axzOg--hOBIm\";\nexport var h1__ela3D = \"PlasmicNewsletter3-module--h1__ela3D--4Db8N\";\nexport var h1__pdcQr = \"PlasmicNewsletter3-module--h1__pdcQr--ZJEMK\";\nexport var h2__ahBlr = \"PlasmicNewsletter3-module--h2__ahBlr--o+yBe\";\nexport var h2__aiflW = \"PlasmicNewsletter3-module--h2__aiflW--Dhm7-\";\nexport var h2__fd2AQ = \"PlasmicNewsletter3-module--h2__fd2AQ--knajl\";\nexport var h4___0BILd = \"PlasmicNewsletter3-module--h4___0BILd--BXtB6\";\nexport var h4__dbF09 = \"PlasmicNewsletter3-module--h4__dbF09--Lnxns\";\nexport var h4__eUrwh = \"PlasmicNewsletter3-module--h4__eUrwh--cFXI6\";\nexport var h4__j7WlE = \"PlasmicNewsletter3-module--h4__j7WlE--Z6y-9\";\nexport var h4__p5Uu = \"PlasmicNewsletter3-module--h4__p5Uu--DfY+C\";\nexport var h4__xFqK = \"PlasmicNewsletter3-module--h4__xFqK--HWbJC\";\nexport var hectoNav = \"PlasmicNewsletter3-module--hectoNav--z9GHT\";\nexport var img___8TKw5 = \"PlasmicNewsletter3-module--img___8TKw5--aec9b\";\nexport var img__a4A8Z = \"PlasmicNewsletter3-module--img__a4A8Z--q3tXT\";\nexport var img__bmtl0 = \"PlasmicNewsletter3-module--img__bmtl0--8kzj3\";\nexport var img__e0NnG = \"PlasmicNewsletter3-module--img__e0NnG--+yZNY\";\nexport var img__g3Nhc = \"PlasmicNewsletter3-module--img__g3Nhc--93W2z\";\nexport var img__nqHsj = \"PlasmicNewsletter3-module--img__nqHsj--JmH-8\";\nexport var img__oVubS = \"PlasmicNewsletter3-module--img__oVubS--R4YMU\";\nexport var img__qHcOu = \"PlasmicNewsletter3-module--img__qHcOu--ZFz5F\";\nexport var img__rka6S = \"PlasmicNewsletter3-module--img__rka6S--gRQOq\";\nexport var img__t6Fqd = \"PlasmicNewsletter3-module--img__t6Fqd--+qbGp\";\nexport var img__v9Ka = \"PlasmicNewsletter3-module--img__v9Ka--+CuVh\";\nexport var img__vhHgv = \"PlasmicNewsletter3-module--img__vhHgv--dGYeK\";\nexport var img__wfIz6 = \"PlasmicNewsletter3-module--img__wfIz6--NH9lp\";\nexport var img__xzWoa = \"PlasmicNewsletter3-module--img__xzWoa--jVdZi\";\nexport var img__ymEd2 = \"PlasmicNewsletter3-module--img__ymEd2---gjGR\";\nexport var link = \"PlasmicNewsletter3-module--link--fu3oc\";\nexport var outer = \"PlasmicNewsletter3-module--outer--XfbBq\";\nexport var outerRow2 = \"PlasmicNewsletter3-module--outerRow2--eX-YQ\";\nexport var outerRow3 = \"PlasmicNewsletter3-module--outerRow3--y-Mwt\";\nexport var reasonBox = \"PlasmicNewsletter3-module--reasonBox--tG2Ci\";\nexport var reasonBox2 = \"PlasmicNewsletter3-module--reasonBox2--ElPvl\";\nexport var reasonBox3 = \"PlasmicNewsletter3-module--reasonBox3--dtLhM\";\nexport var reasonBox4 = \"PlasmicNewsletter3-module--reasonBox4--9H3SS\";\nexport var reasonBox5 = \"PlasmicNewsletter3-module--reasonBox5--CUPN9\";\nexport var reasonBox6 = \"PlasmicNewsletter3-module--reasonBox6--DDkjv\";\nexport var root = \"PlasmicNewsletter3-module--root--N3dFU\";\nexport var row2 = \"PlasmicNewsletter3-module--row2--fVG6Z\";\nexport var row4 = \"PlasmicNewsletter3-module--row4--PTbwP\";\nexport var svg__cabQl = \"PlasmicNewsletter3-module--svg__cabQl--ze42G\";\nexport var svg__mCikM = \"PlasmicNewsletter3-module--svg__mCikM--J+tA9\";\nexport var svg__pScZz = \"PlasmicNewsletter3-module--svg__pScZz--yuhtG\";\nexport var svg__vT2Gj = \"PlasmicNewsletter3-module--svg__vT2Gj--qUV4D\";\nexport var text___3Km9W = \"PlasmicNewsletter3-module--text___3Km9W--DI9MV\";\nexport var text___9FHpV = \"PlasmicNewsletter3-module--text___9FHpV--+wTK-\";\nexport var text__aGbxC = \"PlasmicNewsletter3-module--text__aGbxC--CkSdF\";\nexport var text__c2Egn = \"PlasmicNewsletter3-module--text__c2Egn--FBrAm\";\nexport var text__cg2Kb = \"PlasmicNewsletter3-module--text__cg2Kb--VZPK5\";\nexport var text__eTrBf = \"PlasmicNewsletter3-module--text__eTrBf--4vb34\";\nexport var text__eYig = \"PlasmicNewsletter3-module--text__eYig--4rvWO\";\nexport var text__i8WqJ = \"PlasmicNewsletter3-module--text__i8WqJ--MKRI8\";\nexport var text__mgTyW = \"PlasmicNewsletter3-module--text__mgTyW--kXRWv\";\nexport var text__ojciv = \"PlasmicNewsletter3-module--text__ojciv--w8zXi\";\nexport var text__pZ8Jk = \"PlasmicNewsletter3-module--text__pZ8Jk--I6Jrb\";\nexport var text__pz6F = \"PlasmicNewsletter3-module--text__pz6F--m18d0\";\nexport var text__sLkb = \"PlasmicNewsletter3-module--text__sLkb--jwuZo\";\nexport var text__sRtFe = \"PlasmicNewsletter3-module--text__sRtFe--vWFY2\";\nexport var text__tOpG = \"PlasmicNewsletter3-module--text__tOpG--wQsWr\";\nexport var text__uuik8 = \"PlasmicNewsletter3-module--text__uuik8--3ypz-\";\nexport var text__vhIBg = \"PlasmicNewsletter3-module--text__vhIBg--tQ6dN\";\nexport var text__yt6J0 = \"PlasmicNewsletter3-module--text__yt6J0---o5U+\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport * as ph from \"@plasmicapp/host\"\nimport GlobalContextsProvider from \"../components/plasmic/hecto/PlasmicGlobalContextsProvider\"\nimport { UnnamedGlobalGroupOfVariantsContext } from \"../components/plasmic/hecto/PlasmicGlobalVariant__UnnamedGlobalGroupOfVariants\"\nimport {\n  PlasmicNewsletter3,\n  Head,\n} from \"../components/plasmic/hecto/PlasmicNewsletter3\"\n\nexport { Head }\n\nfunction Newsletter3({ location, params }) {\n  // Use PlasmicNewsletter3 to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicNewsletter3 are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicNewsletter3 is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return (\n    <UnnamedGlobalGroupOfVariantsContext.Provider value={undefined}>\n      <GlobalContextsProvider>\n        <ph.PageParamsProvider\n          params={params}\n          query={Object.fromEntries(new URLSearchParams(location.search))}\n        >\n          <PlasmicNewsletter3 />\n        </ph.PageParamsProvider>\n      </GlobalContextsProvider>\n    </UnnamedGlobalGroupOfVariantsContext.Provider>\n  )\n}\n\nexport default Newsletter3\n"],"names":["CSSClasses","NavigationBar","props","forceOpenMenu","_React$useState","isOpen","setIsOpen","inEditor","PlasmicCanvasContext","shouldRenderMenu","gap","safeParseNumber","itemsGap","responsiveBreakpoint","cssStyles","replace","className","dangerouslySetInnerHTML","__html","brand","onClick","value","tabIndex","closeButton","openButton","role","trim","menuItems","input","defaultValue","parsedValue","parseInt","isNaN","PlasmicHectoNav__VariantProps","Array","PlasmicHectoNav__ArgProps","globalThis","__PlasmicWrapUserFunction","__PlasmicWrapUserPromise","PlasmicDescendants","root","text","pricing","signUp","makeNodeComponent","nodeName","func","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","args","ph","Object","assign","p","classNames","projectcss","component","Link","href","platform","style","color","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","src","title","fontWeight","PlasmicHectoNav__RenderFunc","displayName","PlasmicHectoNav","internalVariantProps","internalArgProps","UnnamedGlobalGroupOfVariantsContext","PlasmicNewsletter3__VariantProps","PlasmicNewsletter3__ArgProps","Head","content","key","PlasmicNewsletter3","pageMetadata","property","hectoNav","features","container4","outerRow2","row2","container5","outerRow3","row4","reasonBox","reasonBox2","reasonBox3","reasonBox4","reasonBox5","reasonBox6","outer","container","footerBottom","link","globalVariants","ensureGlobalVariants","screen","useScreenVariantskILw5UiAaS1UF","as","hasGap","HectoNav","Button","endIcon","hasVariant","loading","image14YhFYwAwD","fullWidth","fullHeight","aspectRatio","undefined","airTravelerClubIconpngOXhQeqkJr","voltFmpng65KNczT0E","growthmentor2PngDbFq2ZnDc","image13Oy5YWPkj7","logoUsdsvgOdeblsO1Yj","clipboardOutlinesvg5UIvmRlOr","searchsvgIWxwm9VuZ","peopleOutlinesvgHyxjcYqpG7","PlasmicNewsletter3__RenderFunc","description","ogImageSrc","canonical","location","params","query","fromEntries","URLSearchParams","search"],"sourceRoot":""}