{"version":3,"file":"component---src-pages-resources-jsx-d048c3375950b54b9172.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@plasmicpkgs/plasmic-nav/dist/plasmic-nav.esm.js","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicHectoNav.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicHectoNav.module.css","webpack://gatsby-starter-default/./src/components/HectoNav.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicGlobalVariant__Screen.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicGlobalVariant__UnnamedGlobalGroupOfVariants.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/icons/PlasmicIcon__ArrowRightsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicResources.module.css","webpack://gatsby-starter-default/./src/components/plasmic/hecto/PlasmicResources.jsx","webpack://gatsby-starter-default/./src/pages/resources.jsx"],"sourcesContent":["import { PlasmicCanvasContext } from '@plasmicapp/host';\nimport registerComponent from '@plasmicapp/host/registerComponent';\nimport React from 'react';\nvar CSSClasses = {\n  container: \"plasmic-nav-container\",\n  menuButton: \"plasmic-nav-menu-button\",\n  menuItemsContainer: \"plasmic-nav-menu-items\",\n  menuItemsContainerOpen: \"plasmic-nav-menu-items-open\"\n};\nvar DEFAULT_GAP = 8;\nvar DEFAULT_RESPONSIVE_BREAKPOINT = 768;\n\nfunction NavigationBar(props) {\n  var forceOpenMenu = props.forceOpenMenu;\n\n  var _React$useState = React.useState(false),\n      isOpen = _React$useState[0],\n      setIsOpen = _React$useState[1];\n\n  var inEditor = React.useContext(PlasmicCanvasContext);\n  var shouldRenderMenu = React.useMemo(function () {\n    if (inEditor && forceOpenMenu) {\n      return true;\n    }\n\n    return isOpen;\n  }, [inEditor, forceOpenMenu, isOpen]);\n\n  var toggleMenu = function toggleMenu() {\n    return setIsOpen(function (value) {\n      return !value;\n    });\n  }; // Parsing the gap manually to ensure it's a valid number\n  // as we are using it in dangerouslySetInnerHTML.\n\n\n  var gap = safeParseNumber(props.itemsGap, DEFAULT_GAP);\n  var responsiveBreakpoint = safeParseNumber(props.responsiveBreakpoint, DEFAULT_RESPONSIVE_BREAKPOINT);\n  var cssStyles = React.useMemo(function () {\n    return minifyCss(\"\\n    /* Shared Styles */\\n    .\" + CSSClasses.container + \" {\\n      box-sizing: border-box;\\n    }\\n\\n    .\" + CSSClasses.menuItemsContainer + \" {\\n      box-sizing: border-box;\\n      display: flex;\\n    }\\n\\n    .\" + CSSClasses.menuItemsContainer + \" > * {\\n      flex: 0 0 auto;\\n    }\\n\\n    /* Desktop Styles */\\n    @media (min-width: \" + (responsiveBreakpoint + 1) + \"px) {\\n      .\" + CSSClasses.menuButton + \" {\\n        display: none;\\n      }\\n\\n      .\" + CSSClasses.menuItemsContainer + \" {\\n        flex-direction: row;\\n        align-items: center;\\n        width: auto;\\n      }\\n      .\" + CSSClasses.menuItemsContainer + \" > *:not(:first-child) {\\n        margin-inline-start: \" + gap + \"px;\\n      }\\n    }\\n\\n    /* Mobile Styles */\\n    @media (max-width: \" + responsiveBreakpoint + \"px) {\\n      .\" + CSSClasses.menuButton + \" {\\n        unset: all;\\n        -webkit-appearance: none;\\n        min-width: 40px;\\n        min-height: 40px;\\n        padding: 0;\\n        margin: 0;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        border: none;\\n        background: none;\\n        cursor: pointer;\\n      }\\n\\n      .\" + CSSClasses.menuItemsContainer + \":not(.\" + CSSClasses.menuItemsContainerOpen + \") {\\n        display: none;\\n      }\\n\\n      .\" + CSSClasses.menuItemsContainer + \" {\\n        margin-top: 10px;\\n        flex-direction: column;\\n        flex-shrink: 0;\\n        width: 100%;\\n      }\\n      .\" + CSSClasses.menuItemsContainer + \" > *:not(:first-child) {\\n        margin-top: \" + gap + \"px;\\n      }\\n    }\\n    \");\n  }, [gap, responsiveBreakpoint]);\n  return React.createElement(\"div\", {\n    className: CSSClasses.container + \" \" + props.className\n  }, React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: cssStyles\n    }\n  }), React.createElement(\"div\", null, props.brand), React.createElement(\"button\", {\n    className: CSSClasses.menuButton,\n    onClick: toggleMenu,\n    tabIndex: 0,\n    \"aria-expanded\": shouldRenderMenu\n  }, shouldRenderMenu ? props.closeButton : props.openButton), React.createElement(\"nav\", {\n    role: \"menu\",\n    className: (CSSClasses.menuItemsContainer + \" \" + (shouldRenderMenu ? CSSClasses.menuItemsContainerOpen : \"\")).trim()\n  }, props.menuItems));\n}\n\nfunction safeParseNumber(input, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = 0;\n  }\n\n  var parsedValue = parseInt(input, 10);\n  return isNaN(parsedValue) ? defaultValue : parsedValue;\n}\n\nfunction minifyCss(input) {\n  return input.replace(/\\s{2,}|\\n/g, \"\") //  Remove spaces\n  .replace(/\\/\\*[\\s\\S]*?\\*\\/|([^:]|^)\\/\\/.*$/g, \"\"); // Remove comments.\n}\n\nvar navigationBarComponentMeta = {\n  name: \"hostless-plasmic-navigation-bar\",\n  displayName: \"Navigation Bar\",\n  importName: \"NavigationBar\",\n  importPath: \"@plasmicpkgs/plasmic-nav\",\n  props: {\n    // Properties\n    forceOpenMenu: {\n      displayName: \"Force Open Menu\",\n      description: \"Use this option to open the menu during design time so you can easily customize the close button and menu items for small screens. This option is ignored when publishing the page.\",\n      type: \"boolean\"\n    },\n    itemsGap: {\n      displayName: \"Items Gap\",\n      description: \"The width of the space between menu items in pixels.\",\n      type: \"number\",\n      min: 0,\n      defaultValue: DEFAULT_GAP\n    },\n    responsiveBreakpoint: {\n      displayName: \"Small Screens Breakpoint\",\n      description: \"The maximum screen width used for showing the small screens version of the menu.\",\n      type: \"number\",\n      min: 0,\n      defaultValue: DEFAULT_RESPONSIVE_BREAKPOINT\n    },\n    // Slots\n    brand: {\n      type: \"slot\",\n      defaultValue: [{\n        type: \"hbox\",\n        tag: \"a\",\n        attrs: {\n          href: \"#\"\n        },\n        styles: {\n          padding: \"0px\"\n        },\n        children: {\n          type: \"img\",\n          src: \"https://static1.plasmic.app/nav-logo-placeholder.svg\",\n          styles: {\n            height: \"40px\"\n          }\n        }\n      }]\n    },\n    openButton: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"img\",\n        src: \"https://static1.plasmic.app/menu.svg\"\n      }\n    },\n    closeButton: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"img\",\n        src: \"https://static1.plasmic.app/close.svg\"\n      }\n    },\n    menuItems: {\n      type: \"slot\",\n      defaultValue: /*#__PURE__*/[\"Home\", \"About\", \"Contact\"].map(function (title) {\n        return {\n          type: \"text\",\n          tag: \"a\",\n          attrs: {\n            href: \"/\"\n          },\n          styles: {\n            width: \"auto\"\n          },\n          value: title\n        };\n      })\n    }\n  },\n  defaultStyles: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    padding: \"16px\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    marginBottom: \"20px\"\n  }\n};\n\nfunction registerNavigationBar(loader, customMetaProps) {\n  if (loader) {\n    loader.registerComponent(NavigationBar, customMetaProps != null ? customMetaProps : navigationBarComponentMeta);\n  } else {\n    registerComponent(NavigationBar, customMetaProps != null ? customMetaProps : navigationBarComponentMeta);\n  }\n}\n\nexport { NavigationBar, navigationBarComponentMeta, registerNavigationBar };","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd\n// Component: 1Xqtr1aGys\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport { NavigationBar } from \"@plasmicpkgs/plasmic-nav\" // plasmic-import: jGx9tiKJoex/codeComponent\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_hecto.module.css\" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss\nimport * as sty from \"./PlasmicHectoNav.module.css\" // plasmic-import: 1Xqtr1aGys/css\n\nexport const PlasmicHectoNav__VariantProps = new Array()\n\nexport const PlasmicHectoNav__ArgProps = new Array()\n\nconst __wrapUserFunction =\n  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn())\n\nconst __wrapUserPromise =\n  globalThis.__PlasmicWrapUserPromise ??\n  (async (loc, promise) => {\n    await promise\n  })\n\nfunction PlasmicHectoNav__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = {\n    ...args,\n    ...variants,\n  }\n\n  const currentUser = p.useCurrentUser?.() || {}\n  const [$queries, setDollarQueries] = React.useState({})\n  return (\n    <NavigationBar\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      brand={\n        <p.PlasmicLink\n          className={classNames(projectcss.all, projectcss.a, sty.link__dhYtV)}\n          component={Link}\n          href={\"#\"}\n          platform={\"gatsby\"}\n        >\n          <div\n            data-plasmic-name={\"text\"}\n            data-plasmic-override={overrides.text}\n            className={classNames(\n              projectcss.all,\n              projectcss.__wab_text,\n              sty.text\n            )}\n          >\n            <React.Fragment>\n              <React.Fragment>{\"hecto\"}</React.Fragment>\n              <span\n                className={\"plasmic_default__all plasmic_default__span\"}\n                style={{ color: \"#FF0000\" }}\n              >\n                {\".\"}\n              </span>\n            </React.Fragment>\n          </div>\n        </p.PlasmicLink>\n      }\n      className={classNames(\"__wab_instance\", sty.root)}\n      closeButton={\n        <p.PlasmicImg\n          alt={\"\"}\n          className={classNames(sty.img___4Cdh)}\n          displayHeight={\"auto\"}\n          displayMaxHeight={\"none\"}\n          displayMaxWidth={\"none\"}\n          displayMinHeight={\"0\"}\n          displayMinWidth={\"0\"}\n          displayWidth={\"auto\"}\n          src={\"https://static1.plasmic.app/close.svg\"}\n        />\n      }\n      itemsGap={8}\n      menuItems={\n        <React.Fragment>\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__gyu5T\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/newsletter-creators\"}\n            platform={\"gatsby\"}\n            title={\"Creators\"}\n          >\n            {\"Creators\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__sbdo8\n            )}\n            component={Link}\n            href={`/resources`}\n            platform={\"gatsby\"}\n          >\n            {\"Resources\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__esyf1\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/search\"}\n            platform={\"gatsby\"}\n          >\n            {\"Search\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            data-plasmic-name={\"pricing\"}\n            data-plasmic-override={overrides.pricing}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.pricing\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/pricing\"}\n            platform={\"gatsby\"}\n          >\n            {\"Pricing\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__ywDm\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/login\"}\n            platform={\"gatsby\"}\n          >\n            {\"Sign In\"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            data-plasmic-name={\"signUp\"}\n            data-plasmic-override={overrides.signUp}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.signUp\n            )}\n            component={Link}\n            href={\"https://app.hecto.io/login\"}\n            platform={\"gatsby\"}\n          >\n            <React.Fragment>\n              <span\n                className={\"plasmic_default__all plasmic_default__span\"}\n                style={{ fontWeight: 700, color: \"#FFFFFF\" }}\n              >\n                {\"Sign Up\"}\n              </span>\n            </React.Fragment>\n          </p.PlasmicLink>\n        </React.Fragment>\n      }\n      openButton={\n        <p.PlasmicImg\n          alt={\"\"}\n          className={classNames(sty.img__jPdEs)}\n          displayHeight={\"auto\"}\n          displayMaxHeight={\"none\"}\n          displayMaxWidth={\"none\"}\n          displayMinHeight={\"0\"}\n          displayMinWidth={\"0\"}\n          displayWidth={\"auto\"}\n          src={\"https://static1.plasmic.app/menu.svg\"}\n        />\n      }\n      responsiveBreakpoint={768}\n    />\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"text\", \"pricing\", \"signUp\"],\n  text: [\"text\"],\n  pricing: [\"pricing\"],\n  signUp: [\"signUp\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHectoNav__ArgProps,\n          internalVariantPropNames: PlasmicHectoNav__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicHectoNav__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHectoNav\"\n  } else {\n    func.displayName = `PlasmicHectoNav.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHectoNav = Object.assign(\n  // Top-level PlasmicHectoNav renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    text: makeNodeComponent(\"text\"),\n    pricing: makeNodeComponent(\"pricing\"),\n    signUp: makeNodeComponent(\"signUp\"),\n    // Metadata about props expected for PlasmicHectoNav\n    internalVariantProps: PlasmicHectoNav__VariantProps,\n    internalArgProps: PlasmicHectoNav__ArgProps,\n  }\n)\n\nexport default PlasmicHectoNav\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var img___4Cdh = \"PlasmicHectoNav-module--img___4Cdh--Ot8Ac\";\nexport var img__jPdEs = \"PlasmicHectoNav-module--img__jPdEs--mhSXj\";\nexport var link__dhYtV = \"PlasmicHectoNav-module--link__dhYtV--W7RCG\";\nexport var link__esyf1 = \"PlasmicHectoNav-module--link__esyf1--6r+vD\";\nexport var link__gyu5T = \"PlasmicHectoNav-module--link__gyu5T--oVxVU\";\nexport var link__sbdo8 = \"PlasmicHectoNav-module--link__sbdo8--a-am0\";\nexport var link__ywDm = \"PlasmicHectoNav-module--link__ywDm--21xcu\";\nexport var pricing = \"PlasmicHectoNav-module--pricing--3ZE5q\";\nexport var root = \"PlasmicHectoNav-module--root--wHZ8F\";\nexport var signUp = \"PlasmicHectoNav-module--signUp--Yv3Wa\";\nexport var text = \"PlasmicHectoNav-module--text--1kpDI\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHectoNav } from \"./plasmic/hecto/PlasmicHectoNav\"\n\nfunction HectoNav(props) {\n  // Use PlasmicHectoNav to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHectoNav are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HectoNavProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHectoNav {...props} />\n}\n\nexport default HectoNav\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\n\nexport const ScreenContext = React.createContext(\n  \"PLEASE_RENDER_INSIDE_PROVIDER\"\n)\n/**\n *  @deprecated Plasmic now uses a custom hook for Screen variants, which is\n *  automatically included in your components. Please remove this provider\n *  from your code.\n */\n\nexport function ScreenVariantProvider(props) {\n  console.warn(\n    \"DEPRECATED: Plasmic now uses a custom hook for Screen variants, which is automatically included in your components. Please remove this provider from your code.\"\n  )\n  return props.children\n}\n\nexport const useScreenVariants = p.createUseScreenVariants(true, {\n  mobileOnly: \"(min-width:0px) and (max-width:768px)\",\n})\n\nexport default ScreenContext\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\n\nexport const UnnamedGlobalGroupOfVariantsContext = React.createContext(\n  \"PLEASE_RENDER_INSIDE_PROVIDER\"\n)\n\nexport function useUnnamedGlobalGroupOfVariants() {\n  return React.useContext(UnnamedGlobalGroupOfVariantsContext)\n}\n\nexport default UnnamedGlobalGroupOfVariantsContext\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function ArrowRightsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      className={classNames(\"plasmic-default__svg\", className, \"icon\")}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M18.055 10.522V6.016L24.039 12l-5.984 5.984v-4.506H-.039v-2.957h18.094z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default ArrowRightsvgIcon\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var blogColumn = \"PlasmicResources-module--blogColumn--8EMNE\";\nexport var button__qI4JW = \"PlasmicResources-module--button__qI4JW--0anVt\";\nexport var button__zdf22 = \"PlasmicResources-module--button__zdf22--0daiv\";\nexport var column__fUvPn = \"PlasmicResources-module--column__fUvPn--dPwTf\";\nexport var column__kzkPi = \"PlasmicResources-module--column__kzkPi--bb59q\";\nexport var column__xrUue = \"PlasmicResources-module--column__xrUue--0JqYU\";\nexport var columns___65Mi9 = \"PlasmicResources-module--columns___65Mi9--XHMw1\";\nexport var columns___8Y8Fy = \"PlasmicResources-module--columns___8Y8Fy--UbOvw\";\nexport var container = \"PlasmicResources-module--container--LEej0\";\nexport var features = \"PlasmicResources-module--features--inJEA\";\nexport var footerBottom = \"PlasmicResources-module--footerBottom--T1+RC\";\nexport var freeBox___2Bsss = \"PlasmicResources-module--freeBox___2Bsss--2PBg0\";\nexport var freeBox___7DL75 = \"PlasmicResources-module--freeBox___7DL75--YaVYx\";\nexport var freeBox__g0Lc8 = \"PlasmicResources-module--freeBox__g0Lc8--DMcbG\";\nexport var freeBox__jNgxc = \"PlasmicResources-module--freeBox__jNgxc--GwC1p\";\nexport var freeBox__mZlUf = \"PlasmicResources-module--freeBox__mZlUf---oKvv\";\nexport var freeBox__p5Zc = \"PlasmicResources-module--freeBox__p5Zc--BfRDL\";\nexport var freeBox__pwmsv = \"PlasmicResources-module--freeBox__pwmsv--uchSi\";\nexport var freeBox__sok7B = \"PlasmicResources-module--freeBox__sok7B--gfpm6\";\nexport var freeBox__uXfUn = \"PlasmicResources-module--freeBox__uXfUn--sUCrJ\";\nexport var h1__rZvMn = \"PlasmicResources-module--h1__rZvMn--W9W8J\";\nexport var h2__nc1Lp = \"PlasmicResources-module--h2__nc1Lp--7wAku\";\nexport var h2__uXj9O = \"PlasmicResources-module--h2__uXj9O--xZDk1\";\nexport var hectoNav = \"PlasmicResources-module--hectoNav--nwAug\";\nexport var heroHorizontal = \"PlasmicResources-module--heroHorizontal--N+d9W\";\nexport var link__kvTqd = \"PlasmicResources-module--link__kvTqd--QgRSA\";\nexport var link__lYcHz = \"PlasmicResources-module--link__lYcHz--WLZT5\";\nexport var outer = \"PlasmicResources-module--outer--t6LJn\";\nexport var root = \"PlasmicResources-module--root--xE4c4\";\nexport var svg = \"PlasmicResources-module--svg--FaWb3\";\nexport var text__efgNc = \"PlasmicResources-module--text__efgNc--szsk4\";\nexport var text__hpJPx = \"PlasmicResources-module--text__hpJPx--ZHUpb\";\nexport var text__m73Sy = \"PlasmicResources-module--text__m73Sy--OiwDU\";\nexport var text__r4Jdi = \"PlasmicResources-module--text__r4Jdi--H4qJ0\";\nexport var text__r5SkQ = \"PlasmicResources-module--text__r5SkQ--ykX6l\";\nexport var text__um3IN = \"PlasmicResources-module--text__um3IN--BYoSC\";\nexport var text__wJp9 = \"PlasmicResources-module--text__wJp9--BYi0a\";\nexport var text__xSvDh = \"PlasmicResources-module--text__xSvDh--XyYuk\";\nexport var text__zpMbw = \"PlasmicResources-module--text__zpMbw--UTpk2\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd\n// Component: C5n9cmwHg6f\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport HectoNav from \"../../HectoNav\" // plasmic-import: 1Xqtr1aGys/component\nimport Button from \"../../Button\" // plasmic-import: 16yj8MRmRBT/component\nimport { useScreenVariants as useScreenVariantskILw5UiAaS1UF } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: kILw5uiAaS1uF/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_hecto.module.css\" // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss\nimport * as sty from \"./PlasmicResources.module.css\" // plasmic-import: C5n9cmwHg6f/css\nimport ArrowRightsvgIcon from \"./icons/PlasmicIcon__ArrowRightsvg\" // plasmic-import: g1j_XxrLjbNK/icon\n\nexport const PlasmicResources__VariantProps = new Array()\n\nexport const PlasmicResources__ArgProps = new Array()\n\nconst __wrapUserFunction =\n  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn())\n\nconst __wrapUserPromise =\n  globalThis.__PlasmicWrapUserPromise ??\n  (async (loc, promise) => {\n    await promise\n  })\n\nexport function Head() {\n  return (\n    <>\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <title key=\"title\">{PlasmicResources.pageMetadata.title}</title>\n      <meta\n        key=\"og:title\"\n        property=\"og:title\"\n        content={PlasmicResources.pageMetadata.title}\n      />\n\n      <meta\n        key=\"twitter:title\"\n        name=\"twitter:title\"\n        content={PlasmicResources.pageMetadata.title}\n      />\n    </>\n  )\n}\n\nfunction PlasmicResources__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = {\n    ...args,\n    ...variants,\n  }\n\n  const currentUser = p.useCurrentUser?.() || {}\n  const [$queries, setDollarQueries] = React.useState({})\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantskILw5UiAaS1UF(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        {true ? (\n          <p.Stack\n            as={\"div\"}\n            data-plasmic-name={\"root\"}\n            data-plasmic-override={overrides.root}\n            data-plasmic-root={true}\n            data-plasmic-for-node={forNode}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.root_reset,\n              projectcss.plasmic_default_styles,\n              projectcss.plasmic_mixins,\n              projectcss.plasmic_tokens,\n              sty.root\n            )}\n          >\n            <div className={classNames(projectcss.all, sty.freeBox__uXfUn)}>\n              <div className={classNames(projectcss.all, sty.freeBox__jNgxc)}>\n                <HectoNav\n                  data-plasmic-name={\"hectoNav\"}\n                  data-plasmic-override={overrides.hectoNav}\n                  className={classNames(\"__wab_instance\", sty.hectoNav)}\n                />\n\n                <div\n                  data-plasmic-name={\"heroHorizontal\"}\n                  data-plasmic-override={overrides.heroHorizontal}\n                  className={classNames(projectcss.all, sty.heroHorizontal)}\n                >\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox___7DL75)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__pwmsv)}\n                    >\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox___2Bsss\n                        )}\n                      >\n                        <h1\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h1,\n                            projectcss.__wab_text,\n                            sty.h1__rZvMn\n                          )}\n                        >\n                          <React.Fragment>\n                            <React.Fragment>{\"\"}</React.Fragment>\n                            {\n                              <h1\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h1,\n                                  projectcss.__wab_text,\n                                  sty.h1__haaBt\n                                )}\n                              >\n                                <React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{\n                                      color: \"#0506CF\",\n                                      fontWeight: 700,\n                                    }}\n                                  >\n                                    {\"Hecto Resources\"}\n                                  </span>\n                                  <React.Fragment>{\"\"}</React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{\n                                      color: \"#FF4A03\",\n                                      fontWeight: 700,\n                                    }}\n                                  >\n                                    {\".\"}\n                                  </span>\n                                </React.Fragment>\n                              </h1>\n                            }\n\n                            <React.Fragment>{\"\"}</React.Fragment>\n                          </React.Fragment>\n                        </h1>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__xSvDh\n                          )}\n                        >\n                          <React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0D08FF\" }}\n                            >\n                              {\"Hi, I'm \"}\n                            </span>\n                            <React.Fragment>{\"\"}</React.Fragment>\n                            {\n                              <p.PlasmicLink\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.a,\n                                  projectcss.__wab_text,\n                                  projectcss.plasmic_default__inline,\n                                  sty.link__xe4M\n                                )}\n                                component={Link}\n                                href={\"https://twitter.com/thedudlian\"}\n                                platform={\"gatsby\"}\n                              >\n                                <React.Fragment>\n                                  <span\n                                    className={\n                                      \"plasmic_default__all plasmic_default__span\"\n                                    }\n                                    style={{ color: \"#FF7C08\" }}\n                                  >\n                                    {\"Simon\"}\n                                  </span>\n                                </React.Fragment>\n                              </p.PlasmicLink>\n                            }\n\n                            <React.Fragment>{\"\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0D08FF\" }}\n                            >\n                              {\n                                \" and I'm building Hecto, the sponsorship platform to support the newsletter creator economy. \"\n                              }\n                            </span>\n                            <React.Fragment>{\"\\n\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0D08FF\" }}\n                            >\n                              {\"\"}\n                            </span>\n                            <React.Fragment>{\"\\n\"}</React.Fragment>\n                            <span\n                              className={\n                                \"plasmic_default__all plasmic_default__span\"\n                              }\n                              style={{ color: \"#0D08FF\" }}\n                            >\n                              {\"Read all about the journey here.\"}\n                            </span>\n                          </React.Fragment>\n                        </div>\n                      </p.Stack>\n                    </p.Stack>\n                  </p.Stack>\n                </div>\n              </div>\n            </div>\n\n            {true ? (\n              <section\n                data-plasmic-name={\"features\"}\n                data-plasmic-override={overrides.features}\n                className={classNames(projectcss.all, sty.features)}\n              >\n                <div\n                  data-plasmic-name={\"blogColumn\"}\n                  data-plasmic-override={overrides.blogColumn}\n                  className={classNames(projectcss.all, sty.blogColumn)}\n                />\n              </section>\n            ) : null}\n            {true ? (\n              <section\n                className={classNames(projectcss.all, sty.columns___65Mi9)}\n              >\n                <div\n                  data-plasmic-name={\"outer\"}\n                  data-plasmic-override={overrides.outer}\n                  className={classNames(projectcss.all, sty.outer)}\n                >\n                  <div\n                    data-plasmic-name={\"container\"}\n                    data-plasmic-override={overrides.container}\n                    className={classNames(projectcss.all, sty.container)}\n                  >\n                    <div\n                      className={classNames(projectcss.all, sty.column__fUvPn)}\n                    >\n                      <h2\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.h2,\n                          projectcss.__wab_text,\n                          sty.h2__nc1Lp\n                        )}\n                      >\n                        {\"To Make Requests For The\\nFurther Information\"}\n                      </h2>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__r4Jdi\n                        )}\n                      >\n                        {\n                          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                        }\n                      </div>\n                    </div>\n\n                    <div\n                      className={classNames(projectcss.all, sty.column__xrUue)}\n                    >\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__zdf22\n                        )}\n                        color={\"blue\"}\n                        link={\"#\"}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__m73Sy\n                          )}\n                        >\n                          {\"Join With Now\"}\n                        </div>\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : null}\n\n            <div className={classNames(projectcss.all, sty.freeBox__g0Lc8)}>\n              <div className={classNames(projectcss.all, sty.columns___8Y8Fy)}>\n                <div className={classNames(projectcss.all, sty.column__kzkPi)}>\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__uXj9O\n                    )}\n                  >\n                    <React.Fragment>\n                      <span\n                        className={\"plasmic_default__all plasmic_default__span\"}\n                        style={{ color: \"#000000\" }}\n                      >\n                        {\"Ready to start your campaign?\"}\n                      </span>\n                    </React.Fragment>\n                  </h2>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__hpJPx\n                    )}\n                  >\n                    <React.Fragment>\n                      <span\n                        className={\"plasmic_default__all plasmic_default__span\"}\n                        style={{ color: \"#000000\" }}\n                      >\n                        {\"Find the perfect newsletter for your brand\"}\n                      </span>\n                    </React.Fragment>\n                  </div>\n\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button__qI4JW)}\n                    color={\"blue\"}\n                    endIcon={\n                      <ArrowRightsvgIcon\n                        data-plasmic-name={\"svg\"}\n                        data-plasmic-override={overrides.svg}\n                        className={classNames(projectcss.all, sty.svg)}\n                        role={\"img\"}\n                      />\n                    }\n                    shape={\"rounded\"}\n                    showEndIcon={true}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__r5SkQ\n                      )}\n                    >\n                      {\"Search Newsletters\"}\n                    </div>\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <div className={classNames(projectcss.all, sty.freeBox__sok7B)}>\n              <div\n                data-plasmic-name={\"footerBottom\"}\n                data-plasmic-override={overrides.footerBottom}\n                className={classNames(projectcss.all, sty.footerBottom)}\n              >\n                <div className={classNames(projectcss.all, sty.freeBox__p5Zc)}>\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__wJp9\n                    )}\n                  >\n                    {\"© Hecto . All rights reserved\"}\n                  </div>\n\n                  <p.PlasmicLink\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__lYcHz\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__efgNc\n                      )}\n                    >\n                      {\"Privacy\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__zpMbw\n                      )}\n                    >\n                      {\"Terms and Conditions\"}\n                    </div>\n\n                    <p.PlasmicLink\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.a,\n                        projectcss.__wab_text,\n                        sty.link__kvTqd\n                      )}\n                      component={Link}\n                      href={\"https://hecto.io/contact\"}\n                      platform={\"gatsby\"}\n                    >\n                      {\"Contact Us\"}\n                    </p.PlasmicLink>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__um3IN\n                      )}\n                    >\n                      {\"Blog\"}\n                    </div>\n\n                    <div\n                      className={classNames(projectcss.all, sty.freeBox__mZlUf)}\n                    />\n                  </p.PlasmicLink>\n                </div>\n              </div>\n            </div>\n          </p.Stack>\n        ) : null}\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"hectoNav\",\n    \"heroHorizontal\",\n    \"features\",\n    \"blogColumn\",\n    \"outer\",\n    \"container\",\n    \"svg\",\n    \"footerBottom\",\n  ],\n\n  hectoNav: [\"hectoNav\"],\n  heroHorizontal: [\"heroHorizontal\"],\n  features: [\"features\", \"blogColumn\"],\n  blogColumn: [\"blogColumn\"],\n  outer: [\"outer\", \"container\"],\n  container: [\"container\"],\n  svg: [\"svg\"],\n  footerBottom: [\"footerBottom\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicResources__ArgProps,\n          internalVariantPropNames: PlasmicResources__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicResources__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicResources\"\n  } else {\n    func.displayName = `PlasmicResources.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicResources = Object.assign(\n  // Top-level PlasmicResources renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    hectoNav: makeNodeComponent(\"hectoNav\"),\n    heroHorizontal: makeNodeComponent(\"heroHorizontal\"),\n    features: makeNodeComponent(\"features\"),\n    blogColumn: makeNodeComponent(\"blogColumn\"),\n    outer: makeNodeComponent(\"outer\"),\n    container: makeNodeComponent(\"container\"),\n    svg: makeNodeComponent(\"svg\"),\n    footerBottom: makeNodeComponent(\"footerBottom\"),\n    // Metadata about props expected for PlasmicResources\n    internalVariantProps: PlasmicResources__VariantProps,\n    internalArgProps: PlasmicResources__ArgProps,\n    // Page metadata\n    pageMetadata: {\n      title: \"Hecto | Newsletter advertising, simplified\",\n      description: \"\",\n      ogImageSrc: \"\",\n      canonical: \"\",\n    },\n  }\n)\n\nexport default PlasmicResources\n/* prettier-ignore-end */\n","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport * as ph from \"@plasmicapp/host\"\nimport GlobalContextsProvider from \"../components/plasmic/hecto/PlasmicGlobalContextsProvider\"\nimport { UnnamedGlobalGroupOfVariantsContext } from \"../components/plasmic/hecto/PlasmicGlobalVariant__UnnamedGlobalGroupOfVariants\"\nimport {\n  PlasmicResources,\n  Head,\n} from \"../components/plasmic/hecto/PlasmicResources\"\n\nexport { Head }\n\nfunction Resources({ location, params }) {\n  // Use PlasmicResources to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicResources are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicResources is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return (\n    <UnnamedGlobalGroupOfVariantsContext.Provider value={undefined}>\n      <GlobalContextsProvider>\n        <ph.PageParamsProvider\n          params={params}\n          query={Object.fromEntries(new URLSearchParams(location.search))}\n        >\n          <PlasmicResources />\n        </ph.PageParamsProvider>\n      </GlobalContextsProvider>\n    </UnnamedGlobalGroupOfVariantsContext.Provider>\n  )\n}\n\nexport default Resources\n"],"names":["CSSClasses","NavigationBar","props","forceOpenMenu","_React$useState","isOpen","setIsOpen","inEditor","PlasmicCanvasContext","shouldRenderMenu","gap","safeParseNumber","itemsGap","responsiveBreakpoint","cssStyles","replace","className","dangerouslySetInnerHTML","__html","brand","onClick","value","tabIndex","closeButton","openButton","role","trim","menuItems","input","defaultValue","parsedValue","parseInt","isNaN","PlasmicHectoNav__VariantProps","Array","PlasmicHectoNav__ArgProps","globalThis","__PlasmicWrapUserFunction","__PlasmicWrapUserPromise","PlasmicDescendants","root","text","pricing","signUp","makeNodeComponent","nodeName","func","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","args","ph","Object","assign","p","classNames","projectcss","component","Link","href","platform","style","color","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","src","title","fontWeight","PlasmicHectoNav__RenderFunc","displayName","PlasmicHectoNav","internalVariantProps","internalArgProps","useScreenVariants","mobileOnly","UnnamedGlobalGroupOfVariantsContext","restProps","xmlns","viewBox","height","width","fill","d","blogColumn","button__qI4JW","button__zdf22","column__fUvPn","column__kzkPi","column__xrUue","columns___65Mi9","columns___8Y8Fy","container","features","footerBottom","freeBox___2Bsss","freeBox___7DL75","freeBox__g0Lc8","freeBox__jNgxc","freeBox__mZlUf","freeBox__p5Zc","freeBox__pwmsv","freeBox__sok7B","freeBox__uXfUn","h1__rZvMn","h2__nc1Lp","h2__uXj9O","hectoNav","heroHorizontal","link__kvTqd","link__lYcHz","outer","svg","text__efgNc","text__hpJPx","text__m73Sy","text__r4Jdi","text__r5SkQ","text__um3IN","text__wJp9","text__xSvDh","text__zpMbw","PlasmicResources__VariantProps","PlasmicResources__ArgProps","Head","content","key","PlasmicResources","pageMetadata","property","ensureGlobalVariants","screen","useScreenVariantskILw5UiAaS1UF","as","hasGap","sty","HectoNav","Button","link","endIcon","shape","showEndIcon","PlasmicResources__RenderFunc","description","ogImageSrc","canonical","location","params","undefined","query","fromEntries","URLSearchParams","search"],"sourceRoot":""}